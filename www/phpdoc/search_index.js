var search_data = {
    'index': {
        'searchIndex': ["","i18n","i18n\\generator","i18n\\twig","library","library\\commandline","library\\converter","library\\helper","library\\httpfundamental","library\\httpfundamental\\contenttype","library\\object","library\\reporteradapter","library\\session","library\\staticconfiguration","library\\tool","markdownextended","markdownextended\\api","markdownextended\\commandline","markdownextended\\exception","markdownextended\\grammar","markdownextended\\grammar\\filter","markdownextended\\grammar\\tool","markdownextended\\outputformat","markdownextended\\util","patterns","patterns\\abstracts","patterns\\commons","patterns\\interfaces","webdocbook","webdocbook\\abstracts","webdocbook\\composer","webdocbook\\composer\\script","webdocbook\\controller","webdocbook\\exception","webdocbook\\httpfundamental","webdocbook\\markdownextended","webdocbook\\markdownextended\\outputformat","webdocbook\\util","webdocbook\\webfilesystem","webdocbook\\webfilesystem\\wdbfile","webfilesystem","webfilesystem\\filetype","markdown","i18n\\generator","i18n\\generatorinterface","i18n\\generator\\csv","i18n\\i18n","i18n\\i18nexception","i18n\\i18ninvalidargumentexception","i18n\\i18nruntimeexception","i18n\\iana","i18n\\loader","i18n\\loaderinterface","i18n\\twig\\i18nextension","i18n\\twig\\pluralizenode","i18n\\twig\\pluralizetokenparser","i18n\\twig\\translatenode","i18n\\twig\\translatetokenparser","library\\abstractreporteradapter","library\\codeparser","library\\command","library\\commandline\\abstractcommandlinecontroller","library\\commandline\\commandlinecontrollerinterface","library\\commandline\\formater","library\\commandline\\helper","library\\commandline\\stream","library\\commandnotfoundexception","library\\converter\\abstractconverter","library\\converter\\array2ini","library\\converter\\html2text","library\\converter\\xml2array","library\\crypt","library\\factory","library\\factoryinterface","library\\filerotator","library\\helper\\code","library\\helper\\conditionalcomment","library\\helper\\directory","library\\helper\\file","library\\helper\\filesystem","library\\helper\\html","library\\helper\\number","library\\helper\\regex","library\\helper\\request","library\\helper\\text","library\\helper\\url","library\\httpfundamental\\contenttype","library\\httpfundamental\\contenttypeinterface","library\\httpfundamental\\contenttype\\html","library\\httpfundamental\\contenttype\\json","library\\httpfundamental\\contenttype\\plaintext","library\\httpfundamental\\contenttype\\xml","library\\httpfundamental\\cookie","library\\httpfundamental\\request","library\\httpfundamental\\response","library\\logger","library\\object\\abstractinvokable","library\\object\\invokableaccessexception","library\\object\\invokableinterface","library\\object\\registryinvokable","library\\reporter","library\\reporteradapter\\html","library\\router","library\\session\\flashsession","library\\session\\session","library\\session\\sessioninterface","library\\staticconfiguration\\config","library\\staticconfiguration\\configuratorinterface","library\\tool\\morsecode","library\\tool\\pagination","library\\tool\\table","markdownextended\\api","markdownextended\\api\\collectioninterface","markdownextended\\api\\contentinterface","markdownextended\\api\\gamutinterface","markdownextended\\api\\kernelinterface","markdownextended\\api\\outputformathelperinterface","markdownextended\\api\\outputformatinterface","markdownextended\\api\\parserinterface","markdownextended\\api\\templaterinterface","markdownextended\\commandline\\abstractconsole","markdownextended\\commandline\\console","markdownextended\\commandline\\reminders","markdownextended\\config","markdownextended\\content","markdownextended\\contentcollection","markdownextended\\exception\\domainexception","markdownextended\\exception\\exception","markdownextended\\exception\\invalidargumentexception","markdownextended\\exception\\runtimeexception","markdownextended\\exception\\unexpectedvalueexception","markdownextended\\grammar\\abstractgamut","markdownextended\\grammar\\filter","markdownextended\\grammar\\filter\\abbreviation","markdownextended\\grammar\\filter\\anchor","markdownextended\\grammar\\filter\\autolink","markdownextended\\grammar\\filter\\blockinclusion","markdownextended\\grammar\\filter\\blockquote","markdownextended\\grammar\\filter\\codeblock","markdownextended\\grammar\\filter\\definitionlist","markdownextended\\grammar\\filter\\emphasis","markdownextended\\grammar\\filter\\fencedcodeblock","markdownextended\\grammar\\filter\\html","markdownextended\\grammar\\filter\\hardbreak","markdownextended\\grammar\\filter\\header","markdownextended\\grammar\\filter\\horizontalrule","markdownextended\\grammar\\filter\\image","markdownextended\\grammar\\filter\\linkdefinition","markdownextended\\grammar\\filter\\listitem","markdownextended\\grammar\\filter\\maths","markdownextended\\grammar\\filter\\metadata","markdownextended\\grammar\\filter\\note","markdownextended\\grammar\\filter\\span","markdownextended\\grammar\\filter\\table","markdownextended\\grammar\\filter\\tableofcontents","markdownextended\\grammar\\gamut","markdownextended\\grammar\\tool","markdownextended\\grammar\\tool\\appendendingnewlines","markdownextended\\grammar\\tool\\detab","markdownextended\\grammar\\tool\\encodeampandangle","markdownextended\\grammar\\tool\\encodeattribute","markdownextended\\grammar\\tool\\extractattributes","markdownextended\\grammar\\tool\\outdent","markdownextended\\grammar\\tool\\rebuildparagraph","markdownextended\\grammar\\tool\\removeutf8marker","markdownextended\\grammar\\tool\\standardizelineending","markdownextended\\grammar\\tool\\stripspacedlines","markdownextended\\helper","markdownextended\\markdownextended","markdownextended\\outputformatbag","markdownextended\\outputformat\\abstractoutputformat","markdownextended\\outputformat\\defaulthelper","markdownextended\\outputformat\\html","markdownextended\\outputformat\\htmlhelper","markdownextended\\outputformat\\man","markdownextended\\outputformat\\manhelper","markdownextended\\parser","markdownextended\\registry","markdownextended\\templater","markdownextended\\util\\compiler","markdownextended\\util\\menuitemiterator","markdownextended\\util\\recursivemenuiterator","patterns\\abstracts\\abstractaccessible","patterns\\abstracts\\abstractoptionable","patterns\\abstracts\\abstractresponse","patterns\\abstracts\\abstractsingleton","patterns\\abstracts\\abstractstaticcreator","patterns\\abstracts\\abstractview","patterns\\commons\\collection","patterns\\commons\\configurationregistry","patterns\\commons\\registry","patterns\\interfaces\\arrayinterface","patterns\\interfaces\\cachableinterface","patterns\\interfaces\\collectioninterface","patterns\\interfaces\\crudinterface","patterns\\interfaces\\debuggableinterface","patterns\\interfaces\\iteratorinterface","patterns\\interfaces\\optionableinterface","patterns\\interfaces\\repositoryinterface","patterns\\interfaces\\requestinterface","patterns\\interfaces\\responseinterface","patterns\\interfaces\\routerinterface","patterns\\interfaces\\staticcreatorinterface","patterns\\interfaces\\staticoptionableinterface","patterns\\interfaces\\translatableinterface","patterns\\interfaces\\userinterface","patterns\\interfaces\\viewinterface","patterns\\interfaces\\webpageinterface","splclassloader","webdocbook\\abstracts\\abstractcontroller","webdocbook\\abstracts\\abstractfrontcontroller","webdocbook\\composer\\exception","webdocbook\\composer\\manager","webdocbook\\composer\\scriptinterface","webdocbook\\composer\\script\\clearcache","webdocbook\\composer\\script\\cleari18n","webdocbook\\composer\\script\\initialize","webdocbook\\controller\\defaultcontroller","webdocbook\\controller\\webdocbookcontroller","webdocbook\\exception\\exception","webdocbook\\exception\\notfoundexception","webdocbook\\exception\\runtimeexception","webdocbook\\frontcontroller","webdocbook\\helper","webdocbook\\httpfundamental\\request","webdocbook\\httpfundamental\\response","webdocbook\\kernel","webdocbook\\markdownextended\\outputformat\\webdocbook","webdocbook\\markdownextended\\outputformat\\webdocbookhelper","webdocbook\\templatebuilder","webdocbook\\util\\filesystem","webdocbook\\webfilesystem\\wdbfile","webdocbook\\webfilesystem\\wdbfileinterface","webdocbook\\webfilesystem\\wdbfile\\wdbdefault","webdocbook\\webfilesystem\\wdbfile\\wdbdirectory","webdocbook\\webfilesystem\\wdbfile\\wdbembed","webdocbook\\webfilesystem\\wdbfile\\wdbimage","webdocbook\\webfilesystem\\wdbfile\\wdbmarkdown","webdocbook\\webfilesystem\\wdbrecursivedirectoryiterator","webdocbook_twig_extension","webfilesystem\\filetype\\webimage","webfilesystem\\filetype\\webvideo","webfilesystem\\finder","webfilesystem\\webfileinfo","webfilesystem\\webfilesystem","webfilesystem\\webfilesystemiterator","webfilesystem\\webrecursivedirectoryiterator","markdown\\markdownextendedparser","markdown\\markdownextraparser","markdown\\markdownparser","markdown\\markdownparsercompatibilityinterface","markdown\\multimarkdownparser","i18n\\generator::__construct","i18n\\generator::setdbfilepath","i18n\\generator::getdbfilepath","i18n\\generator::setgenerator","i18n\\generator::getgenerator","i18n\\generator::generate","i18n\\generatorinterface::generate","i18n\\generator\\csv::generate","i18n\\i18n::setloader","i18n\\i18n::getloader","i18n\\i18n::loadfile","i18n\\i18n::setlanguage","i18n\\i18n::getlanguage","i18n\\i18n::setdefaultfromhttp","i18n\\i18n::isavailablelanguage","i18n\\i18n::getavailablelocale","i18n\\i18n::getavailablelanguages","i18n\\i18n::setlocale","i18n\\i18n::getlocale","i18n\\i18n::settimezone","i18n\\i18n::gettimezone","i18n\\i18n::haslocalizedstring","i18n\\i18n::getlocalizedstring","i18n\\i18n::parsestring","i18n\\i18n::parsestringmetadata","i18n\\i18n::getcurrency","i18n\\i18n::gethttpheaderlocale","i18n\\i18n::getavailablelanguagesnames","i18n\\i18n::getlanguagecode","i18n\\i18n::getregioncode","i18n\\i18n::getscriptcode","i18n\\i18n::getkeywords","i18n\\i18n::getkeyword","i18n\\i18n::getprimarylanguage","i18n\\i18n::getlanguagename","i18n\\i18n::getcountryname","i18n\\i18n::getlocalescript","i18n\\i18n::getlocalevariant","i18n\\i18n::getlocalizednumberstring","i18n\\i18n::getlocalizedpricestring","i18n\\i18n::getlocalizeddatestring","i18n\\i18n::translate","i18n\\i18n::pluralize","i18n\\iana::__construct","i18n\\iana::setdbfilepath","i18n\\iana::getdbfilepath","i18n\\iana::setdbfilename","i18n\\iana::getdbfilename","i18n\\iana::getdbrealpath","i18n\\iana::update","i18n\\iana::read","i18n\\iana::getdb","i18n\\iana::getlanguages","i18n\\iana::getregions","i18n\\iana::getscripts","i18n\\iana::getextlangs","i18n\\loader::__construct","i18n\\loader::addpath","i18n\\loader::getparsedoption","i18n\\loader::buildlanguagefilename","i18n\\loader::buildlanguagedirname","i18n\\loader::buildlanguagefilepath","i18n\\loader::buildlanguagevarname","i18n\\loader::buildlanguagedbfilename","i18n\\loader::buildlanguagedbdirname","i18n\\loader::buildlanguagedbfilepath","i18n\\loader::findlanguagedbfile","i18n\\loaderinterface::getoption","i18n\\loaderinterface::buildlanguagefilename","i18n\\loaderinterface::buildlanguagedirname","i18n\\loaderinterface::buildlanguagefilepath","i18n\\loaderinterface::buildlanguagevarname","i18n\\loaderinterface::buildlanguagedbfilename","i18n\\loaderinterface::buildlanguagedbdirname","i18n\\loaderinterface::buildlanguagedbfilepath","i18n\\loaderinterface::findlanguagedbfile","i18n\\twig\\i18nextension::__construct","i18n\\twig\\i18nextension::getname","i18n\\twig\\i18nextension::getglobals","i18n\\twig\\i18nextension::getfilters","i18n\\twig\\i18nextension::getfunctions","i18n\\twig\\i18nextension::gettokenparsers","i18n\\twig\\pluralizenode::__construct","i18n\\twig\\pluralizenode::compile","i18n\\twig\\pluralizetokenparser::parse","i18n\\twig\\pluralizetokenparser::gettag","i18n\\twig\\pluralizetokenparser::isendtag","i18n\\twig\\translatenode::__construct","i18n\\twig\\translatenode::compile","i18n\\twig\\translatetokenparser::parse","i18n\\twig\\translatetokenparser::gettag","i18n\\twig\\translatetokenparser::isendtag","library\\abstractreporteradapter::newline","library\\abstractreporteradapter::tab","library\\abstractreporteradapter::rendertag","library\\codeparser::__construct","library\\codeparser::set_objectname","library\\codeparser::get_objectname","library\\codeparser::set_objecttype","library\\codeparser::get_objecttype","library\\codeparser::get_shortdescription","library\\codeparser::get_longdescription","library\\command::addcache","library\\command::iscached","library\\command::getcached","library\\command::getcache","library\\command::run","library\\command::runcommand","library\\command::getcommandpath","library\\commandline\\abstractcommandlinecontroller::__construct","library\\commandline\\abstractcommandlinecontroller::__tostring","library\\commandline\\abstractcommandlinecontroller::distribute","library\\commandline\\abstractcommandlinecontroller::setdebug","library\\commandline\\abstractcommandlinecontroller::setverbose","library\\commandline\\abstractcommandlinecontroller::setforce","library\\commandline\\abstractcommandlinecontroller::setinteractive","library\\commandline\\abstractcommandlinecontroller::setquiet","library\\commandline\\abstractcommandlinecontroller::adddonemethod","library\\commandline\\abstractcommandlinecontroller::getdonemethods","library\\commandline\\abstractcommandlinecontroller::setscript","library\\commandline\\abstractcommandlinecontroller::getscript","library\\commandline\\abstractcommandlinecontroller::setparameters","library\\commandline\\abstractcommandlinecontroller::getparameters","library\\commandline\\abstractcommandlinecontroller::runhelpcommand","library\\commandline\\abstractcommandlinecontroller::runverbosecommand","library\\commandline\\abstractcommandlinecontroller::runquietcommand","library\\commandline\\abstractcommandlinecontroller::rundebugcommand","library\\commandline\\abstractcommandlinecontroller::runforcecommand","library\\commandline\\abstractcommandlinecontroller::runinteractivecommand","library\\commandline\\abstractcommandlinecontroller::runversioncommand","library\\commandline\\abstractcommandlinecontroller::write","library\\commandline\\abstractcommandlinecontroller::error","library\\commandline\\abstractcommandlinecontroller::parseandwrite","library\\commandline\\abstractcommandlinecontroller::writeerror","library\\commandline\\abstractcommandlinecontroller::writethinerror","library\\commandline\\abstractcommandlinecontroller::writeinfo","library\\commandline\\abstractcommandlinecontroller::writecomment","library\\commandline\\abstractcommandlinecontroller::writehighlight","library\\commandline\\abstractcommandlinecontroller::writebreak","library\\commandline\\abstractcommandlinecontroller::writestop","library\\commandline\\abstractcommandlinecontroller::verbosewrite","library\\commandline\\abstractcommandlinecontroller::debugwrite","library\\commandline\\abstractcommandlinecontroller::prompt","library\\commandline\\abstractcommandlinecontroller::getprompt","library\\commandline\\abstractcommandlinecontroller::writeintro","library\\commandline\\abstractcommandlinecontroller::getversionstring","library\\commandline\\abstractcommandlinecontroller::writenothingtodo","library\\commandline\\abstractcommandlinecontroller::runargumenthelp","library\\commandline\\abstractcommandlinecontroller::usage","library\\commandline\\abstractcommandlinecontroller::getopt","library\\commandline\\abstractcommandlinecontroller::getoptionmethod","library\\commandline\\abstractcommandlinecontroller::getoptiondescription","library\\commandline\\abstractcommandlinecontroller::getoptionhelp","library\\commandline\\commandlinecontrollerinterface::adddonemethod","library\\commandline\\commandlinecontrollerinterface::getdonemethods","library\\commandline\\commandlinecontrollerinterface::setscript","library\\commandline\\commandlinecontrollerinterface::getscript","library\\commandline\\commandlinecontrollerinterface::setparameters","library\\commandline\\commandlinecontrollerinterface::getparameters","library\\commandline\\formater::__construct","library\\commandline\\formater::__tostring","library\\commandline\\formater::__destruct","library\\commandline\\formater::addoption","library\\commandline\\formater::setautospaced","library\\commandline\\formater::setforegroundcolor","library\\commandline\\formater::setbackgroundcolor","library\\commandline\\formater::settextoption","library\\commandline\\formater::setmessage","library\\commandline\\formater::newline","library\\commandline\\formater::message","library\\commandline\\formater::prompt","library\\commandline\\formater::buildtaggedstring","library\\commandline\\formater::parse","library\\commandline\\formater::spacedstr","library\\commandline\\formater::format","library\\commandline\\formater::fetch","library\\commandline\\helper::getopt","library\\commandline\\helper::getoptionmethod","library\\commandline\\helper::getoptiondescription","library\\commandline\\helper::treatoptions","library\\commandline\\helper::getoptionhelp","library\\commandline\\helper::gethelpinfo","library\\commandline\\helper::formathelpstring","library\\commandline\\stream::__construct","library\\commandline\\stream::__exit","library\\commandline\\stream::error","library\\commandline\\stream::write","library\\commandline\\stream::prompt","library\\commandline\\stream::getuserresponse","library\\commandnotfoundexception::__construct","library\\converter\\abstractconverter::convert","library\\converter\\array2ini::convert","library\\converter\\array2ini::doconvert","library\\converter\\html2text::setallowedtags","library\\converter\\html2text::setlinewidth","library\\converter\\html2text::convert","library\\converter\\xml2array::convert","library\\converter\\xml2array::parse","library\\crypt::__construct","library\\crypt::setsalt","library\\crypt::getsalt","library\\crypt::encrypt","library\\crypt::crypt","library\\crypt::unencrypt","library\\crypt::uncrypt","library\\factory::init","library\\factory::__call","library\\factory::setoptions","library\\factory::build","library\\factory::findbuilder","library\\factoryinterface::build","library\\factoryinterface::findbuilder","library\\filerotator::__construct","library\\filerotator::write","library\\filerotator::rotate","library\\filerotator::mustrotate","library\\filerotator::getfilename","library\\helper\\code::getpropertyname","library\\helper\\code::getpropertymethodname","library\\helper\\code::impelementsinterface","library\\helper\\code::extendsclass","library\\helper\\code::isclassinstance","library\\helper\\code::namespaceexists","library\\helper\\code::fetcharguments","library\\helper\\code::organizearguments","library\\helper\\conditionalcomment::buildcondition","library\\helper\\conditionalcomment::writecondition","library\\helper\\conditionalcomment::parsesinglecondition","library\\helper\\directory::slashdirname","library\\helper\\directory::isgitclone","library\\helper\\directory::isdotpath","library\\helper\\directory::ensureexists","library\\helper\\directory::create","library\\helper\\directory::remove","library\\helper\\directory::purge","library\\helper\\directory::chmod","library\\helper\\file::getuniqfilename","library\\helper\\file::formatfilename","library\\helper\\file::getextension","library\\helper\\file::gethumanreadablefilename","library\\helper\\file::gettransformedfilesize","library\\helper\\file::touch","library\\helper\\file::remove","library\\helper\\file::copy","library\\helper\\file::write","library\\helper\\filesystem::resolverelatedpath","library\\helper\\filesystem::getoctal","library\\helper\\html::hasid","library\\helper\\html::getid","library\\helper\\html::getnewid","library\\helper\\html::sethtmltagclosure","library\\helper\\html::writehtmltag","library\\helper\\html::parseattributes","library\\helper\\html::javascriptprotect","library\\helper\\number::isodd","library\\helper\\number::iseven","library\\helper\\number::isprime","library\\helper\\number::isprimordial","library\\helper\\number::getfibonacciitem","library\\helper\\number::getluhnkey","library\\helper\\number::isluhn","library\\helper\\number::getsumofdigits","library\\helper\\number::isselfdescribing","library\\helper\\number::isjollyjumperseries","library\\helper\\number::getromannumeralsnotation","library\\helper\\regex::getpattern","library\\helper\\request::iscli","library\\helper\\request::isajax","library\\helper\\request::getuserip","library\\helper\\text::cut","library\\helper\\text::stripspecialchars","library\\helper\\text::slugify","library\\helper\\text::gethumanreadable","library\\helper\\text::tocamelcase","library\\helper\\text::fromcamelcase","library\\helper\\url::getrequesturl","library\\helper\\url::gethttpprotocol","library\\helper\\url::parse","library\\helper\\url::resolvepath","library\\helper\\url::resolvehttp","library\\helper\\url::getabsoluteurl","library\\helper\\url::url","library\\helper\\url::getparameter","library\\helper\\url::setparameter","library\\helper\\url::build","library\\helper\\url::isurl","library\\helper\\url::isemail","library\\httpfundamental\\contenttype::createfromcontent","library\\httpfundamental\\contenttype::guesscontenttype","library\\httpfundamental\\contenttype::__construct","library\\httpfundamental\\contenttype::__tostring","library\\httpfundamental\\contenttype::setcontenttype","library\\httpfundamental\\contenttype::getcontenttype","library\\httpfundamental\\contenttype::setcontenttypeobject","library\\httpfundamental\\contenttype::getcontenttypeobject","library\\httpfundamental\\contenttype::preparecontenttype","library\\httpfundamental\\contenttype::prepareresponse","library\\httpfundamental\\contenttype::parsecontent","library\\httpfundamental\\contenttype::preparecontent","library\\httpfundamental\\contenttypeinterface::prepareresponse","library\\httpfundamental\\contenttypeinterface::parsecontent","library\\httpfundamental\\contenttypeinterface::preparecontent","library\\httpfundamental\\contenttypeinterface::getcontenttype","library\\httpfundamental\\contenttype\\html::prepareresponse","library\\httpfundamental\\contenttype\\html::parsecontent","library\\httpfundamental\\contenttype\\html::preparecontent","library\\httpfundamental\\contenttype\\html::getcontenttype","library\\httpfundamental\\contenttype\\json::prepareresponse","library\\httpfundamental\\contenttype\\json::parsecontent","library\\httpfundamental\\contenttype\\json::preparecontent","library\\httpfundamental\\contenttype\\json::getcontenttype","library\\httpfundamental\\contenttype\\plaintext::prepareresponse","library\\httpfundamental\\contenttype\\plaintext::parsecontent","library\\httpfundamental\\contenttype\\plaintext::preparecontent","library\\httpfundamental\\contenttype\\plaintext::getcontenttype","library\\httpfundamental\\contenttype\\xml::prepareresponse","library\\httpfundamental\\contenttype\\xml::parsecontent","library\\httpfundamental\\contenttype\\xml::preparecontent","library\\httpfundamental\\contenttype\\xml::getcontenttype","library\\httpfundamental\\cookie::__construct","library\\httpfundamental\\cookie::setflag","library\\httpfundamental\\cookie::getflag","library\\httpfundamental\\cookie::setname","library\\httpfundamental\\cookie::getname","library\\httpfundamental\\cookie::setvalue","library\\httpfundamental\\cookie::getvalue","library\\httpfundamental\\cookie::getsafevalue","library\\httpfundamental\\cookie::setexpire","library\\httpfundamental\\cookie::getexpire","library\\httpfundamental\\cookie::getsafeexpire","library\\httpfundamental\\cookie::setpath","library\\httpfundamental\\cookie::getpath","library\\httpfundamental\\cookie::getsafepath","library\\httpfundamental\\cookie::setdomain","library\\httpfundamental\\cookie::getdomain","library\\httpfundamental\\cookie::getsafedomain","library\\httpfundamental\\cookie::setsecure","library\\httpfundamental\\cookie::getsecure","library\\httpfundamental\\cookie::getsafesecure","library\\httpfundamental\\cookie::sethttponly","library\\httpfundamental\\cookie::gethttponly","library\\httpfundamental\\cookie::getsafehttponly","library\\httpfundamental\\cookie::sendasraw","library\\httpfundamental\\cookie::sendasencoded","library\\httpfundamental\\cookie::setcookiefuncarguments","library\\httpfundamental\\cookie::getcookiefuncarguments","library\\httpfundamental\\cookie::getcookiefuncargument","library\\httpfundamental\\cookie::addcookiefuncargument","library\\httpfundamental\\cookie::clearcookiefuncargument","library\\httpfundamental\\cookie::exists","library\\httpfundamental\\cookie::read","library\\httpfundamental\\cookie::send","library\\httpfundamental\\cookie::addincookie","library\\httpfundamental\\cookie::clear","library\\httpfundamental\\request::create","library\\httpfundamental\\request::__construct","library\\httpfundamental\\request::guessfromcurrent","library\\httpfundamental\\request::setflag","library\\httpfundamental\\request::getflag","library\\httpfundamental\\request::seturl","library\\httpfundamental\\request::geturl","library\\httpfundamental\\request::setprotocol","library\\httpfundamental\\request::getprotocol","library\\httpfundamental\\request::setmethod","library\\httpfundamental\\request::getmethod","library\\httpfundamental\\request::setheaders","library\\httpfundamental\\request::getheaders","library\\httpfundamental\\request::getheader","library\\httpfundamental\\request::setarguments","library\\httpfundamental\\request::getarguments","library\\httpfundamental\\request::getargument","library\\httpfundamental\\request::setdata","library\\httpfundamental\\request::getdata","library\\httpfundamental\\request::setfiles","library\\httpfundamental\\request::getfiles","library\\httpfundamental\\request::getfile","library\\httpfundamental\\request::setsession","library\\httpfundamental\\request::getsession","library\\httpfundamental\\request::setcookies","library\\httpfundamental\\request::getcookies","library\\httpfundamental\\request::getcookie","library\\httpfundamental\\request::setauthentication","library\\httpfundamental\\request::setauthenticationtype","library\\httpfundamental\\request::setauthenticationuser","library\\httpfundamental\\request::setauthenticationpassword","library\\httpfundamental\\request::getauthentication","library\\httpfundamental\\request::buildurl","library\\httpfundamental\\request::isajax","library\\httpfundamental\\request::iscli","library\\httpfundamental\\request::isget","library\\httpfundamental\\request::ispost","library\\httpfundamental\\request::isput","library\\httpfundamental\\request::getget","library\\httpfundamental\\request::getpost","library\\httpfundamental\\request::getgetorpost","library\\httpfundamental\\request::getpostorget","library\\httpfundamental\\request::cleanargument","library\\httpfundamental\\request::getenvironment","library\\httpfundamental\\request::getclientip","library\\httpfundamental\\request::getallheaders","library\\httpfundamental\\response::__construct","library\\httpfundamental\\response::__tostring","library\\httpfundamental\\response::setprotocol","library\\httpfundamental\\response::getprotocol","library\\httpfundamental\\response::setheaders","library\\httpfundamental\\response::addheader","library\\httpfundamental\\response::getheader","library\\httpfundamental\\response::getheaders","library\\httpfundamental\\response::setstatus","library\\httpfundamental\\response::getstatus","library\\httpfundamental\\response::setcharset","library\\httpfundamental\\response::getcharset","library\\httpfundamental\\response::addcontent","library\\httpfundamental\\response::setcontents","library\\httpfundamental\\response::getcontent","library\\httpfundamental\\response::getcontents","library\\httpfundamental\\response::getcontentsasstring","library\\httpfundamental\\response::setcontenttype","library\\httpfundamental\\response::getcontenttype","library\\httpfundamental\\response::guesscontenttype","library\\httpfundamental\\response::renderheaders","library\\httpfundamental\\response::header","library\\httpfundamental\\response::send","library\\httpfundamental\\response::download","library\\httpfundamental\\response::flush","library\\httpfundamental\\response::redirect","library\\logger::__construct","library\\logger::log","library\\logger::__set","library\\logger::__get","library\\logger::getoptions","library\\logger::interpolate","library\\logger::getuserip","library\\logger::writearray","library\\object\\abstractinvokable::__invoke","library\\object\\abstractinvokable::__call","library\\object\\abstractinvokable::__callstatic","library\\object\\abstractinvokable::__get","library\\object\\abstractinvokable::__set","library\\object\\abstractinvokable::__isset","library\\object\\abstractinvokable::__unset","library\\object\\abstractinvokable::findpropertyname","library\\object\\abstractinvokable::findpropertynamestatic","library\\object\\invokableaccessexception::__construct","library\\object\\invokableinterface::__call","library\\object\\invokableinterface::__callstatic","library\\object\\invokableinterface::__get","library\\object\\invokableinterface::__set","library\\object\\invokableinterface::__isset","library\\object\\invokableinterface::__unset","library\\object\\registryinvokable::__construct","library\\object\\registryinvokable::setflag","library\\object\\registryinvokable::getflag","library\\object\\registryinvokable::__call","library\\object\\registryinvokable::__callstatic","library\\object\\registryinvokable::__get","library\\object\\registryinvokable::__set","library\\object\\registryinvokable::__isset","library\\object\\registryinvokable::__unset","library\\object\\registryinvokable::getdata","library\\object\\registryinvokable::setdata","library\\reporter::__construct","library\\reporter::reset","library\\reporter::__tostring","library\\reporter::setflag","library\\reporter::getflag","library\\reporter::setadaptertype","library\\reporter::getadaptertype","library\\reporter::setadapter","library\\reporter::getadapter","library\\reporter::setoutput","library\\reporter::getoutput","library\\reporter::render","library\\reporter::write","library\\reporter::rendermulti","library\\reporteradapter\\html::rendertag","library\\router::__construct","library\\router::getcollection","library\\router::seturl","library\\router::geturl","library\\router::setroute","library\\router::getroute","library\\router::setrouteparsed","library\\router::getrouteparsed","library\\router::setroutes","library\\router::getroutes","library\\router::setargumentsmap","library\\router::getargumentsmap","library\\router::setmatchers","library\\router::getmatchers","library\\router::routeexists","library\\router::generateurl","library\\router::matchurl","library\\router::distribute","library\\router::forward","library\\router::redirect","library\\router::urlencode","library\\session\\flashsession::__construct","library\\session\\flashsession::read","library\\session\\flashsession::commit","library\\session\\flashsession::hasflash","library\\session\\flashsession::getflash","library\\session\\flashsession::setflash","library\\session\\flashsession::allflashes","library\\session\\flashsession::clearflashes","library\\session\\session::__construct","library\\session\\session::__destruct","library\\session\\session::addsessiontable","library\\session\\session::getsessiontable","library\\session\\session::getid","library\\session\\session::getname","library\\session\\session::isopened","library\\session\\session::isloaded","library\\session\\session::start","library\\session\\session::open","library\\session\\session::close","library\\session\\session::read","library\\session\\session::commit","library\\session\\session::clear","library\\session\\session::regenerateid","library\\session\\session::getattributes","library\\session\\session::has","library\\session\\session::get","library\\session\\session::set","library\\session\\session::remove","library\\session\\session::getbackup","library\\session\\sessioninterface::start","library\\session\\sessioninterface::open","library\\session\\sessioninterface::close","library\\session\\sessioninterface::isopened","library\\session\\sessioninterface::read","library\\session\\sessioninterface::isloaded","library\\session\\sessioninterface::commit","library\\session\\sessioninterface::clear","library\\session\\sessioninterface::regenerateid","library\\session\\sessioninterface::getid","library\\session\\sessioninterface::getname","library\\session\\sessioninterface::getattributes","library\\session\\sessioninterface::has","library\\session\\sessioninterface::get","library\\session\\sessioninterface::set","library\\session\\sessioninterface::remove","library\\staticconfiguration\\config::load","library\\staticconfiguration\\config::loaded","library\\staticconfiguration\\config::setconfigurator","library\\staticconfiguration\\config::getconfigurator","library\\staticconfiguration\\config::setregistry","library\\staticconfiguration\\config::getregistry","library\\staticconfiguration\\config::getdefaults","library\\staticconfiguration\\config::getrequired","library\\staticconfiguration\\config::getinternal","library\\staticconfiguration\\config::validate","library\\staticconfiguration\\config::overload","library\\staticconfiguration\\config::set","library\\staticconfiguration\\config::get","library\\staticconfiguration\\config::getdefault","library\\staticconfiguration\\configuratorinterface::getdefaults","library\\staticconfiguration\\configuratorinterface::getrequired","library\\tool\\morsecode::getletter","library\\tool\\morsecode::getword","library\\tool\\morsecode::getstring","library\\tool\\morsecode::encode","library\\tool\\pagination::__construct","library\\tool\\pagination::setlimit","library\\tool\\pagination::setoffset","library\\tool\\pagination::setpagesnumber","library\\tool\\pagination::setitemsnumber","library\\tool\\pagination::setcollection","library\\tool\\pagination::getlimit","library\\tool\\pagination::getoffset","library\\tool\\pagination::getpagesnumber","library\\tool\\pagination::getitemsnumber","library\\tool\\pagination::getcollection","library\\tool\\pagination::getpaginatedcollection","library\\tool\\pagination::setoffsetbypagenumber","library\\tool\\pagination::exists","library\\tool\\pagination::current","library\\tool\\pagination::key","library\\tool\\pagination::next","library\\tool\\pagination::rewind","library\\tool\\pagination::valid","library\\tool\\pagination::isfirst","library\\tool\\pagination::islast","library\\tool\\pagination::iscurrent","library\\tool\\pagination::getpagenumber","library\\tool\\table::__construct","library\\tool\\table::__tostring","library\\tool\\table::gettable","library\\tool\\table::gettableiterator","library\\tool\\table::getline","library\\tool\\table::addline","library\\tool\\table::getcolumn","library\\tool\\table::addcolumn","library\\tool\\table::getcell","library\\tool\\table::addcell","library\\tool\\table::setpadflag","library\\tool\\table::getpadflag","library\\tool\\table::settitle","library\\tool\\table::gettitle","library\\tool\\table::setheader","library\\tool\\table::setheaderline","library\\tool\\table::addheaderline","library\\tool\\table::setheadercolumn","library\\tool\\table::addheadercolumn","library\\tool\\table::setheadercell","library\\tool\\table::addheadercell","library\\tool\\table::getheader","library\\tool\\table::getheaderline","library\\tool\\table::getheadercolumn","library\\tool\\table::getheadercell","library\\tool\\table::setbody","library\\tool\\table::setbodyline","library\\tool\\table::addbodyline","library\\tool\\table::setbodycolumn","library\\tool\\table::addbodycolumn","library\\tool\\table::setbodycell","library\\tool\\table::addbodycell","library\\tool\\table::getbody","library\\tool\\table::getbodyline","library\\tool\\table::getbodycolumn","library\\tool\\table::getbodycell","library\\tool\\table::setfooter","library\\tool\\table::setfooterline","library\\tool\\table::addfooterline","library\\tool\\table::setfootercolumn","library\\tool\\table::addfootercolumn","library\\tool\\table::setfootercell","library\\tool\\table::addfootercell","library\\tool\\table::getfooter","library\\tool\\table::getfooterline","library\\tool\\table::getfootercolumn","library\\tool\\table::getfootercell","library\\tool\\table::gettablecolumnsize","library\\tool\\table::gettablelinesize","library\\tool\\table::gettablecellsize","library\\tool\\table::getsizesinfos","library\\tool\\table::_resetsizes","library\\tool\\table::render","library\\tool\\table::setcontents","library\\tool\\table::setcontentline","library\\tool\\table::addcontentline","library\\tool\\table::setcontentcolumn","library\\tool\\table::setcontentcol","library\\tool\\table::setbodycol","library\\tool\\table::addcontentcolumn","library\\tool\\table::addcontentcol","library\\tool\\table::addbodycol","library\\tool\\table::setcontentcell","library\\tool\\table::addcontentcell","library\\tool\\table::getcontents","library\\tool\\table::getcontentline","library\\tool\\table::getcontentcolumn","library\\tool\\table::getcontentcol","library\\tool\\table::getbodycol","library\\tool\\table::getcontentcell","library\\tool\\table::gettablecolsize","library\\tool\\table::getcol","library\\tool\\table::getheadercol","library\\tool\\table::addheadercol","library\\tool\\table::setheadercol","library\\tool\\table::getfootercol","library\\tool\\table::addfootercol","library\\tool\\table::setfootercol","library\\tool\\table::getcolumnsize","library\\tool\\table::getcolsize","library\\tool\\table::getlinesize","library\\tool\\table::getcellsize","markdownextended\\api::factory","markdownextended\\api::isvalid","markdownextended\\api::getrelativeclassname","markdownextended\\api::getabsoluteclassname","markdownextended\\api::debug","markdownextended\\api\\contentinterface::getsource","markdownextended\\api\\gamutinterface::getdefaultmethod","markdownextended\\api\\kernelinterface::__construct","markdownextended\\api\\kernelinterface::getinstance","markdownextended\\api\\kernelinterface::create","markdownextended\\api\\kernelinterface::factory","markdownextended\\api\\kernelinterface::get","markdownextended\\api\\kernelinterface::transformstring","markdownextended\\api\\kernelinterface::transformsource","markdownextended\\api\\outputformathelperinterface::getfullcontent","markdownextended\\api\\outputformathelperinterface::gettoc","markdownextended\\api\\outputformatinterface::buildtag","markdownextended\\api\\outputformatinterface::gettagstring","markdownextended\\api\\parserinterface::__construct","markdownextended\\api\\parserinterface::parse","markdownextended\\api\\templaterinterface::gettemplate","markdownextended\\api\\templaterinterface::__tostring","markdownextended\\commandline\\abstractconsole::__construct","markdownextended\\commandline\\abstractconsole::write","markdownextended\\commandline\\abstractconsole::info","markdownextended\\commandline\\abstractconsole::separator","markdownextended\\commandline\\abstractconsole::error","markdownextended\\commandline\\abstractconsole::caught","markdownextended\\commandline\\abstractconsole::exec","markdownextended\\commandline\\abstractconsole::runoption_verbose","markdownextended\\commandline\\abstractconsole::runoption_quiet","markdownextended\\commandline\\abstractconsole::runoption_debug","markdownextended\\commandline\\abstractconsole::runoption_usage","markdownextended\\commandline\\abstractconsole::setscriptpath","markdownextended\\commandline\\abstractconsole::run","markdownextended\\commandline\\abstractconsole::writeoutputfile","markdownextended\\commandline\\abstractconsole::writeoutput","markdownextended\\commandline\\abstractconsole::writeinputtitle","markdownextended\\commandline\\console::__construct","markdownextended\\commandline\\console::runoption_usage","markdownextended\\commandline\\console::runoption_help","markdownextended\\commandline\\console::runoption_version","markdownextended\\commandline\\console::runoption_man","markdownextended\\commandline\\console::runoption_multi","markdownextended\\commandline\\console::runoption_output","markdownextended\\commandline\\console::runoption_filter_html","markdownextended\\commandline\\console::runoption_filter_styles","markdownextended\\commandline\\console::runoption_extract","markdownextended\\commandline\\console::runoption_template","markdownextended\\commandline\\console::runoption_nofilter","markdownextended\\commandline\\console::runoption_format","markdownextended\\commandline\\console::runoption_body","markdownextended\\commandline\\console::runoption_simple","markdownextended\\commandline\\console::run","markdownextended\\commandline\\console::runstoryononefile","markdownextended\\commandline\\console::runonefile","markdownextended\\commandline\\console::getinput","markdownextended\\commandline\\console::parsecontent","markdownextended\\commandline\\console::extractcontent","markdownextended\\commandline\\reminders::__construct","markdownextended\\commandline\\reminders::runoption_help","markdownextended\\commandline\\reminders::runoption_docsdir","markdownextended\\commandline\\reminders::runoption_output","markdownextended\\commandline\\reminders::runoption_format","markdownextended\\commandline\\reminders::runoption_template","markdownextended\\commandline\\reminders::run","markdownextended\\commandline\\reminders::writeoutputfile","markdownextended\\commandline\\reminders::writeoutput","markdownextended\\commandline\\reminders::writeinputtitle","markdownextended\\commandline\\reminders::filterspan","markdownextended\\commandline\\reminders::filterblock","markdownextended\\commandline\\reminders::filtermisc","markdownextended\\config::__construct","markdownextended\\config::reset","markdownextended\\config::init","markdownextended\\config::load","markdownextended\\config::reload","markdownextended\\config::overload","markdownextended\\config::setconfigfile","markdownextended\\config::getconfigfile","markdownextended\\content::__construct","markdownextended\\content::__call","markdownextended\\content::setid","markdownextended\\content::getid","markdownextended\\content::getdirname","markdownextended\\content::setlastupdate","markdownextended\\content::getlastupdate","markdownextended\\content::getlastupdatetostring","markdownextended\\content::getsource","markdownextended\\content::gettitle","markdownextended\\content::getmetadata","markdownextended\\content::hasdomid","markdownextended\\content::getdomid","markdownextended\\content::setnewdomid","markdownextended\\contentcollection::__construct","markdownextended\\contentcollection::exists","markdownextended\\contentcollection::clear","markdownextended\\contentcollection::set","markdownextended\\contentcollection::add","markdownextended\\contentcollection::remove","markdownextended\\contentcollection::get","markdownextended\\contentcollection::current","markdownextended\\contentcollection::key","markdownextended\\contentcollection::next","markdownextended\\contentcollection::rewind","markdownextended\\contentcollection::valid","markdownextended\\contentcollection::first","markdownextended\\contentcollection::last","markdownextended\\contentcollection::offsetexists","markdownextended\\contentcollection::offsetget","markdownextended\\contentcollection::offsetset","markdownextended\\contentcollection::offsetunset","markdownextended\\contentcollection::count","markdownextended\\contentcollection::getarrayfilter","markdownextended\\grammar\\abstractgamut::rungamut","markdownextended\\grammar\\abstractgamut::resethash","markdownextended\\grammar\\abstractgamut::sethash","markdownextended\\grammar\\abstractgamut::gethash","markdownextended\\grammar\\filter::getdefaultmethod","markdownextended\\grammar\\filter::transform","markdownextended\\grammar\\filter::hashpart","markdownextended\\grammar\\filter::hashblock","markdownextended\\grammar\\filter::hashclean","markdownextended\\grammar\\filter::unhash","markdownextended\\grammar\\filter\\abbreviation::_setup","markdownextended\\grammar\\filter\\abbreviation::_teardown","markdownextended\\grammar\\filter\\abbreviation::transform","markdownextended\\grammar\\filter\\abbreviation::strip","markdownextended\\grammar\\filter\\anchor::_setup","markdownextended\\grammar\\filter\\anchor::transform","markdownextended\\grammar\\filter\\autolink::transform","markdownextended\\grammar\\filter\\blockinclusion::transform","markdownextended\\grammar\\filter\\blockquote::transform","markdownextended\\grammar\\filter\\codeblock::transform","markdownextended\\grammar\\filter\\codeblock::span","markdownextended\\grammar\\filter\\definitionlist::transform","markdownextended\\grammar\\filter\\definitionlist::transformitems","markdownextended\\grammar\\filter\\emphasis::prepare","markdownextended\\grammar\\filter\\emphasis::transform","markdownextended\\grammar\\filter\\fencedcodeblock::transform","markdownextended\\grammar\\filter\\html::transform","markdownextended\\grammar\\filter\\hardbreak::transform","markdownextended\\grammar\\filter\\header::transform","markdownextended\\grammar\\filter\\horizontalrule::transform","markdownextended\\grammar\\filter\\image::transform","markdownextended\\grammar\\filter\\linkdefinition::transform","markdownextended\\grammar\\filter\\linkdefinition::strip","markdownextended\\grammar\\filter\\listitem::transform","markdownextended\\grammar\\filter\\listitem::transformitems","markdownextended\\grammar\\filter\\maths::transform","markdownextended\\grammar\\filter\\maths::span","markdownextended\\grammar\\filter\\metadata::_setup","markdownextended\\grammar\\filter\\metadata::strip","markdownextended\\grammar\\filter\\metadata::transform","markdownextended\\grammar\\filter\\metadata::append","markdownextended\\grammar\\filter\\note::_setup","markdownextended\\grammar\\filter\\note::strip","markdownextended\\grammar\\filter\\note::transform","markdownextended\\grammar\\filter\\note::append","markdownextended\\grammar\\filter\\note::transformfootnote","markdownextended\\grammar\\filter\\note::transformglossary","markdownextended\\grammar\\filter\\note::transformcitation","markdownextended\\grammar\\filter\\span::transform","markdownextended\\grammar\\filter\\span::handlespantoken","markdownextended\\grammar\\filter\\table::transform","markdownextended\\grammar\\filter\\tableofcontents::_setup","markdownextended\\grammar\\filter\\tableofcontents::transform","markdownextended\\grammar\\gamut::__construct","markdownextended\\grammar\\gamut::rungamuts","markdownextended\\grammar\\gamut::rungamutsmethod","markdownextended\\grammar\\gamut::rungamut","markdownextended\\grammar\\tool::getdefaultmethod","markdownextended\\grammar\\tool::run","markdownextended\\grammar\\tool\\appendendingnewlines::run","markdownextended\\grammar\\tool\\detab::init","markdownextended\\grammar\\tool\\detab::run","markdownextended\\grammar\\tool\\encodeampandangle::run","markdownextended\\grammar\\tool\\encodeattribute::run","markdownextended\\grammar\\tool\\extractattributes::run","markdownextended\\grammar\\tool\\outdent::run","markdownextended\\grammar\\tool\\rebuildparagraph::run","markdownextended\\grammar\\tool\\removeutf8marker::run","markdownextended\\grammar\\tool\\standardizelineending::run","markdownextended\\grammar\\tool\\stripspacedlines::run","markdownextended\\helper::debug","markdownextended\\helper::info","markdownextended\\helper::smallinfo","markdownextended\\helper::escapecodecontent","markdownextended\\helper::fillplaceholders","markdownextended\\helper::header2label","markdownextended\\helper::encodeemailaddress","markdownextended\\helper::getfilesize","markdownextended\\helper::buildregex","markdownextended\\helper::find","markdownextended\\helper::tocamelcase","markdownextended\\helper::fromcamelcase","markdownextended\\markdownextended::__construct","markdownextended\\markdownextended::getinstance","markdownextended\\markdownextended::create","markdownextended\\markdownextended::transformstring","markdownextended\\markdownextended::transformsource","markdownextended\\markdownextended::addprocessedcontent","markdownextended\\markdownextended::getcontent","markdownextended\\markdownextended::getfullcontent","markdownextended\\markdownextended::gettemplater","markdownextended\\markdownextended::load","markdownextended\\markdownextended::factory","markdownextended\\markdownextended::get","markdownextended\\markdownextended::getconfig","markdownextended\\markdownextended::setconfig","markdownextended\\markdownextended::addconfig","markdownextended\\markdownextended::getvar","markdownextended\\markdownextended::setvar","markdownextended\\markdownextended::addvar","markdownextended\\markdownextended::unsetvar","markdownextended\\outputformatbag::load","markdownextended\\outputformatbag::loadhelper","markdownextended\\outputformatbag::__call","markdownextended\\outputformatbag::setformatter","markdownextended\\outputformatbag::getformatter","markdownextended\\outputformatbag::sethelper","markdownextended\\outputformatbag::gethelper","markdownextended\\outputformat\\abstractoutputformat::buildtag","markdownextended\\outputformat\\abstractoutputformat::gettagstring","markdownextended\\outputformat\\defaulthelper::getfullcontent","markdownextended\\outputformat\\defaulthelper::gettoc","markdownextended\\outputformat\\html::__construct","markdownextended\\outputformat\\html::gettagstring","markdownextended\\outputformat\\html::buildtitle","markdownextended\\outputformat\\html::buildmetadata","markdownextended\\outputformat\\html::buildcomment","markdownextended\\outputformat\\html::buildparagraph","markdownextended\\outputformat\\html::buildlink","markdownextended\\outputformat\\html::buildmaths","markdownextended\\outputformat\\html::buildmathsblock","markdownextended\\outputformat\\html::buildmathsspan","markdownextended\\outputformat\\htmlhelper::getfullcontent","markdownextended\\outputformat\\htmlhelper::gettoc","markdownextended\\outputformat\\man::__construct","markdownextended\\outputformat\\man::buildtag","markdownextended\\outputformat\\man::gettagstring","markdownextended\\outputformat\\man::escapestring","markdownextended\\outputformat\\man::trimstring","markdownextended\\outputformat\\man::buildtitle","markdownextended\\outputformat\\man::indent","markdownextended\\outputformat\\man::unindent","markdownextended\\outputformat\\man::buildmetadata","markdownextended\\outputformat\\man::buildmetatitle","markdownextended\\outputformat\\man::buildparagraph","markdownextended\\outputformat\\man::buildbold","markdownextended\\outputformat\\man::builditalic","markdownextended\\outputformat\\man::buildpreformatted","markdownextended\\outputformat\\man::buildcode","markdownextended\\outputformat\\man::buildabbreviation","markdownextended\\outputformat\\man::builddefinitionlist","markdownextended\\outputformat\\man::builddefinitionlistitemterm","markdownextended\\outputformat\\man::builddefinitionlistitemdefinition","markdownextended\\outputformat\\man::buildnewline","markdownextended\\outputformat\\man::buildhorizontalrule","markdownextended\\outputformat\\man::buildcomment","markdownextended\\outputformat\\man::buildlistitem","markdownextended\\outputformat\\man::buildunorderedlistitem","markdownextended\\outputformat\\man::buildorderedlistitem","markdownextended\\outputformat\\man::buildlist","markdownextended\\outputformat\\man::buildunorderedlist","markdownextended\\outputformat\\man::buildorderedlist","markdownextended\\outputformat\\man::buildlink","markdownextended\\outputformat\\man::buildblockquote","markdownextended\\outputformat\\man::buildtablecaption","markdownextended\\outputformat\\man::buildtablebody","markdownextended\\outputformat\\man::buildtableheader","markdownextended\\outputformat\\man::buildtablefooter","markdownextended\\outputformat\\man::buildtableline","markdownextended\\outputformat\\man::buildtablecell","markdownextended\\outputformat\\man::buildtablecellhead","markdownextended\\outputformat\\manhelper::getfullcontent","markdownextended\\outputformat\\manhelper::gettoc","markdownextended\\parser::__construct","markdownextended\\parser::parse","markdownextended\\parser::rungamuts","markdownextended\\parser::getallgamuts","markdownextended\\registry::__construct","markdownextended\\registry::set","markdownextended\\registry::add","markdownextended\\registry::remove","markdownextended\\registry::get","markdownextended\\registry::extend","markdownextended\\registry::validatevarname","markdownextended\\templater::__construct","markdownextended\\templater::__tostring","markdownextended\\templater::load","markdownextended\\templater::loadcollection","markdownextended\\templater::getcontent","markdownextended\\templater::gettemplate","markdownextended\\templater::buildtemplate","markdownextended\\templater::parse","markdownextended\\templater::parsecollection","markdownextended\\templater::parsecontent","markdownextended\\templater::parsetemplate","markdownextended\\templater::autoinsert","markdownextended\\util\\compiler::getdefaultfinder","markdownextended\\util\\compiler::compile","markdownextended\\util\\menuitemiterator::__construct","markdownextended\\util\\menuitemiterator::init","markdownextended\\util\\menuitemiterator::getdefault","markdownextended\\util\\menuitemiterator::setlevel","markdownextended\\util\\menuitemiterator::getlevel","markdownextended\\util\\menuitemiterator::setcontent","markdownextended\\util\\menuitemiterator::getcontent","markdownextended\\util\\menuitemiterator::setattributes","markdownextended\\util\\menuitemiterator::addattribute","markdownextended\\util\\menuitemiterator::hasattributes","markdownextended\\util\\menuitemiterator::getattributes","markdownextended\\util\\menuitemiterator::setchildren","markdownextended\\util\\menuitemiterator::addchild","markdownextended\\util\\menuitemiterator::haschildren","markdownextended\\util\\menuitemiterator::haschild","markdownextended\\util\\menuitemiterator::getchildren","markdownextended\\util\\menuitemiterator::getchild","markdownextended\\util\\menuitemiterator::offsetset","markdownextended\\util\\menuitemiterator::offsetunset","markdownextended\\util\\menuitemiterator::offsetget","markdownextended\\util\\menuitemiterator::offsetexists","markdownextended\\util\\menuitemiterator::append","markdownextended\\util\\recursivemenuiterator::__construct","markdownextended\\util\\recursivemenuiterator::next","markdownextended\\util\\recursivemenuiterator::previous","markdownextended\\util\\recursivemenuiterator::rewind","markdownextended\\util\\recursivemenuiterator::seek","markdownextended\\util\\recursivemenuiterator::position","markdownextended\\util\\recursivemenuiterator::append","markdownextended\\util\\recursivemenuiterator::getarraycopy","markdownextended\\util\\recursivemenuiterator::menukeyset","markdownextended\\util\\recursivemenuiterator::menuoffsetset","markdownextended\\util\\recursivemenuiterator::menuoffsetsetrecursive","patterns\\abstracts\\abstractaccessible::__set","patterns\\abstracts\\abstractaccessible::__get","patterns\\abstracts\\abstractaccessible::__isset","patterns\\abstracts\\abstractaccessible::__unset","patterns\\abstracts\\abstractoptionable::setoptions","patterns\\abstracts\\abstractoptionable::setoption","patterns\\abstracts\\abstractoptionable::getoptions","patterns\\abstracts\\abstractoptionable::getoption","patterns\\abstracts\\abstractresponse::setbody","patterns\\abstracts\\abstractresponse::getbody","patterns\\abstracts\\abstractresponse::setheaders","patterns\\abstracts\\abstractresponse::addheader","patterns\\abstracts\\abstractresponse::getheaders","patterns\\abstracts\\abstractresponse::getheader","patterns\\abstracts\\abstractresponse::hasheader","patterns\\abstracts\\abstractresponse::renderheaders","patterns\\abstracts\\abstractresponse::redirect","patterns\\abstracts\\abstractresponse::send","patterns\\abstracts\\abstractresponse::download","patterns\\abstracts\\abstractresponse::flush","patterns\\abstracts\\abstractsingleton::getinstance","patterns\\abstracts\\abstractsingleton::getinstancebyclassname","patterns\\abstracts\\abstractsingleton::__clone","patterns\\abstracts\\abstractstaticcreator::init","patterns\\abstracts\\abstractstaticcreator::__construct","patterns\\abstracts\\abstractstaticcreator::create","patterns\\abstracts\\abstractview::setview","patterns\\abstracts\\abstractview::getview","patterns\\abstracts\\abstractview::setoutput","patterns\\abstracts\\abstractview::appendoutput","patterns\\abstracts\\abstractview::prependoutput","patterns\\abstracts\\abstractview::getoutput","patterns\\abstracts\\abstractview::resetparams","patterns\\abstracts\\abstractview::setparams","patterns\\abstracts\\abstractview::addparam","patterns\\abstracts\\abstractview::getparams","patterns\\abstracts\\abstractview::getparam","patterns\\abstracts\\abstractview::render","patterns\\abstracts\\abstractview::getdefaultviewparams","patterns\\abstracts\\abstractview::gettemplate","patterns\\commons\\collection::__construct","patterns\\commons\\collection::setcollection","patterns\\commons\\collection::getcollection","patterns\\commons\\collection::rewind","patterns\\commons\\collection::reset","patterns\\commons\\collection::end","patterns\\commons\\collection::next","patterns\\commons\\collection::prev","patterns\\commons\\collection::valid","patterns\\commons\\collection::current","patterns\\commons\\collection::pos","patterns\\commons\\collection::key","patterns\\commons\\collection::seek","patterns\\commons\\collection::offsetset","patterns\\commons\\collection::offsetexists","patterns\\commons\\collection::offsetunset","patterns\\commons\\collection::offsetget","patterns\\commons\\collection::push","patterns\\commons\\collection::count","patterns\\commons\\collection::shift","patterns\\commons\\collection::pop","patterns\\commons\\collection::unshift","patterns\\commons\\collection::each","patterns\\commons\\collection::in_array","patterns\\commons\\collection::key_exists","patterns\\commons\\collection::values","patterns\\commons\\collection::keys","patterns\\commons\\collection::getentry","patterns\\commons\\collection::setentry","patterns\\commons\\collection::addentry","patterns\\commons\\collection::issetentry","patterns\\commons\\collection::unsetentry","patterns\\commons\\configurationregistry::__construct","patterns\\commons\\configurationregistry::set","patterns\\commons\\configurationregistry::get","patterns\\commons\\configurationregistry::setconfigs","patterns\\commons\\configurationregistry::setconfig","patterns\\commons\\configurationregistry::addconfig","patterns\\commons\\configurationregistry::getconfigs","patterns\\commons\\configurationregistry::getconfig","patterns\\commons\\registry::dump","patterns\\commons\\registry::__set","patterns\\commons\\registry::__get","patterns\\commons\\registry::setentry","patterns\\commons\\registry::addentry","patterns\\commons\\registry::getentry","patterns\\commons\\registry::isentry","patterns\\commons\\registry::getkey","patterns\\commons\\registry::dumpstack","patterns\\commons\\registry::savestack","patterns\\commons\\registry::isstack","patterns\\commons\\registry::loadstack","patterns\\commons\\registry::getstackentry","patterns\\commons\\registry::getstackkey","patterns\\interfaces\\arrayinterface::shift","patterns\\interfaces\\arrayinterface::pop","patterns\\interfaces\\arrayinterface::unshift","patterns\\interfaces\\arrayinterface::push","patterns\\interfaces\\arrayinterface::count","patterns\\interfaces\\arrayinterface::each","patterns\\interfaces\\arrayinterface::in_array","patterns\\interfaces\\arrayinterface::key_exists","patterns\\interfaces\\arrayinterface::values","patterns\\interfaces\\arrayinterface::keys","patterns\\interfaces\\cachableinterface::getcachekey","patterns\\interfaces\\cachableinterface::iscached","patterns\\interfaces\\cachableinterface::getcache","patterns\\interfaces\\cachableinterface::setcache","patterns\\interfaces\\cachableinterface::invalidatecache","patterns\\interfaces\\collectioninterface::setcollection","patterns\\interfaces\\collectioninterface::getcollection","patterns\\interfaces\\collectioninterface::getentry","patterns\\interfaces\\collectioninterface::setentry","patterns\\interfaces\\collectioninterface::issetentry","patterns\\interfaces\\collectioninterface::unsetentry","patterns\\interfaces\\crudinterface::create","patterns\\interfaces\\crudinterface::read","patterns\\interfaces\\crudinterface::update","patterns\\interfaces\\crudinterface::delete","patterns\\interfaces\\debuggableinterface::setdebug","patterns\\interfaces\\debuggableinterface::getdebug","patterns\\interfaces\\debuggableinterface::isdebug","patterns\\interfaces\\iteratorinterface::reset","patterns\\interfaces\\iteratorinterface::end","patterns\\interfaces\\iteratorinterface::pos","patterns\\interfaces\\iteratorinterface::prev","patterns\\interfaces\\optionableinterface::setoptions","patterns\\interfaces\\optionableinterface::setoption","patterns\\interfaces\\optionableinterface::getoptions","patterns\\interfaces\\optionableinterface::getoption","patterns\\interfaces\\repositoryinterface::getall","patterns\\interfaces\\repositoryinterface::getoneby","patterns\\interfaces\\repositoryinterface::exists","patterns\\interfaces\\requestinterface::geturl","patterns\\interfaces\\requestinterface::getprotocol","patterns\\interfaces\\requestinterface::getmethod","patterns\\interfaces\\requestinterface::getheaders","patterns\\interfaces\\requestinterface::getarguments","patterns\\interfaces\\requestinterface::getdata","patterns\\interfaces\\requestinterface::getfiles","patterns\\interfaces\\requestinterface::getsession","patterns\\interfaces\\requestinterface::getcookies","patterns\\interfaces\\requestinterface::getauthentication","patterns\\interfaces\\responseinterface::redirect","patterns\\interfaces\\responseinterface::send","patterns\\interfaces\\responseinterface::download","patterns\\interfaces\\responseinterface::flush","patterns\\interfaces\\routerinterface::setroutes","patterns\\interfaces\\routerinterface::getroutes","patterns\\interfaces\\routerinterface::routeexists","patterns\\interfaces\\routerinterface::getroute","patterns\\interfaces\\routerinterface::generateurl","patterns\\interfaces\\routerinterface::matchurl","patterns\\interfaces\\routerinterface::distribute","patterns\\interfaces\\routerinterface::forward","patterns\\interfaces\\routerinterface::redirect","patterns\\interfaces\\staticcreatorinterface::create","patterns\\interfaces\\staticoptionableinterface::setoptions","patterns\\interfaces\\staticoptionableinterface::setoption","patterns\\interfaces\\staticoptionableinterface::getoptions","patterns\\interfaces\\staticoptionableinterface::getoption","patterns\\interfaces\\translatableinterface::setlanguage","patterns\\interfaces\\translatableinterface::getlanguage","patterns\\interfaces\\translatableinterface::translate","patterns\\interfaces\\translatableinterface::pluralize","patterns\\interfaces\\userinterface::authoring","patterns\\interfaces\\userinterface::signin","patterns\\interfaces\\userinterface::login","patterns\\interfaces\\userinterface::logout","patterns\\interfaces\\userinterface::islogged","patterns\\interfaces\\userinterface::setuserinfos","patterns\\interfaces\\userinterface::adduserinfo","patterns\\interfaces\\viewinterface::render","patterns\\interfaces\\viewinterface::getdefaultviewparams","patterns\\interfaces\\viewinterface::gettemplate","patterns\\interfaces\\webpageinterface::buildmenu","patterns\\interfaces\\webpageinterface::getmenu","patterns\\interfaces\\webpageinterface::buildtitle","patterns\\interfaces\\webpageinterface::gettitle","patterns\\interfaces\\webpageinterface::buildmetas","patterns\\interfaces\\webpageinterface::getmetas","patterns\\interfaces\\webpageinterface::getmeta","splclassloader::__construct","splclassloader::setnamespaceseparator","splclassloader::getnamespaceseparator","splclassloader::setincludepath","splclassloader::getincludepath","splclassloader::setfileextension","splclassloader::getfileextension","splclassloader::register","splclassloader::unregister","splclassloader::loadclass","webdocbook\\abstracts\\abstractcontroller::__construct","webdocbook\\abstracts\\abstractcontroller::setpath","webdocbook\\abstracts\\abstractcontroller::getpath","webdocbook\\abstracts\\abstractfrontcontroller::getterminal","webdocbook\\abstracts\\abstractfrontcontroller::getresponse","webdocbook\\abstracts\\abstractfrontcontroller::getrequest","webdocbook\\abstracts\\abstractfrontcontroller::setcontroller","webdocbook\\abstracts\\abstractfrontcontroller::getcontroller","webdocbook\\abstracts\\abstractfrontcontroller::settemplatebuilder","webdocbook\\abstracts\\abstractfrontcontroller::gettemplatebuilder","webdocbook\\abstracts\\abstractfrontcontroller::setmarkdownparser","webdocbook\\abstracts\\abstractfrontcontroller::getmarkdownparser","webdocbook\\abstracts\\abstractfrontcontroller::getsession","webdocbook\\abstracts\\abstractfrontcontroller::distribute","webdocbook\\abstracts\\abstractfrontcontroller::setinputfile","webdocbook\\abstracts\\abstractfrontcontroller::getinputfile","webdocbook\\abstracts\\abstractfrontcontroller::setinputpath","webdocbook\\abstracts\\abstractfrontcontroller::getinputpath","webdocbook\\abstracts\\abstractfrontcontroller::setquery","webdocbook\\abstracts\\abstractfrontcontroller::getquery","webdocbook\\abstracts\\abstractfrontcontroller::setaction","webdocbook\\abstracts\\abstractfrontcontroller::getaction","webdocbook\\composer\\exception::__construct","webdocbook\\composer\\manager::init","webdocbook\\composer\\manager::error","webdocbook\\composer\\manager::info","webdocbook\\composer\\scriptinterface::getname","webdocbook\\composer\\scriptinterface::run","webdocbook\\composer\\script\\clearcache::getname","webdocbook\\composer\\script\\clearcache::run","webdocbook\\composer\\script\\cleari18n::getname","webdocbook\\composer\\script\\cleari18n::run","webdocbook\\composer\\script\\initialize::getname","webdocbook\\composer\\script\\initialize::run","webdocbook\\controller\\defaultcontroller::indexaction","webdocbook\\controller\\defaultcontroller::directoryaction","webdocbook\\controller\\defaultcontroller::fileaction","webdocbook\\controller\\defaultcontroller::rssfeedaction","webdocbook\\controller\\defaultcontroller::sitemapaction","webdocbook\\controller\\defaultcontroller::htmlonlyaction","webdocbook\\controller\\defaultcontroller::plaintextaction","webdocbook\\controller\\defaultcontroller::downloadaction","webdocbook\\controller\\defaultcontroller::searchaction","webdocbook\\controller\\webdocbookcontroller::notfoundaction","webdocbook\\controller\\webdocbookcontroller::forbiddenaction","webdocbook\\controller\\webdocbookcontroller::erroraction","webdocbook\\controller\\webdocbookcontroller::creditsaction","webdocbook\\controller\\webdocbookcontroller::docbookdocaction","webdocbook\\controller\\webdocbookcontroller::adminaction","webdocbook\\controller\\webdocbookcontroller::saveadminaction","webdocbook\\exception\\exception::__construct","webdocbook\\exception\\notfoundexception::__construct","webdocbook\\exception\\runtimeexception::__construct","webdocbook\\frontcontroller::log","webdocbook\\frontcontroller::distribute","webdocbook\\frontcontroller::display","webdocbook\\frontcontroller::setinputfile","webdocbook\\frontcontroller::getinputfile","webdocbook\\frontcontroller::setinputpath","webdocbook\\frontcontroller::getinputpath","webdocbook\\frontcontroller::setquery","webdocbook\\frontcontroller::getquery","webdocbook\\frontcontroller::setaction","webdocbook\\frontcontroller::getaction","webdocbook\\frontcontroller::getmarkdownparser","webdocbook\\frontcontroller::gettemplate","webdocbook\\frontcontroller::getchapters","webdocbook\\helper::log","webdocbook\\helper::getsafeidstring","webdocbook\\helper::getslug","webdocbook\\helper::buildpagetitle","webdocbook\\helper::getbreadcrumbs","webdocbook\\helper::getsecuredrealpath","webdocbook\\helper::getrelativepath","webdocbook\\helper::getabsolutepath","webdocbook\\helper::getabsoluteroute","webdocbook\\helper::ensuredirectoryexists","webdocbook\\helper::getdatetimefromtimestamp","webdocbook\\helper::getroute","webdocbook\\helper::getdirectorysize","webdocbook\\helper::fetcharguments","webdocbook\\helper::makesearch","webdocbook\\helper::getfilelinescount","webdocbook\\helper::getprofiler","webdocbook\\helper::istranslationfile","webdocbook\\helper::isfilevalid","webdocbook\\helper::isdirvalid","webdocbook\\helper::getgitconfig","webdocbook\\helper::rssencode","webdocbook\\helper::getflatdirscans","webdocbook\\helper::geticon","webdocbook\\httpfundamental\\request::__construct","webdocbook\\httpfundamental\\request::setrouting","webdocbook\\httpfundamental\\request::getrouting","webdocbook\\httpfundamental\\request::parsewdbrequest","webdocbook\\httpfundamental\\request::getwdbrouting","webdocbook\\httpfundamental\\response::__construct","webdocbook\\httpfundamental\\response::send","webdocbook\\httpfundamental\\response::redirect","webdocbook\\kernel::debug","webdocbook\\kernel::__set_state","webdocbook\\kernel::init","webdocbook\\kernel::boot","webdocbook\\kernel::isdevmode","webdocbook\\kernel::getconfig","webdocbook\\kernel::setconfig","webdocbook\\kernel::get","webdocbook\\kernel::getpath","webdocbook\\kernel::finddocument","webdocbook\\kernel::findcontroller","webdocbook\\kernel::findtemplate","webdocbook\\kernel::fallbackfinder","webdocbook\\kernel::installconfig","webdocbook\\kernel::clearcache","webdocbook\\kernel::cleari18n","webdocbook\\kernel::ensurepathexists","webdocbook\\kernel::ensurepathiswritable","webdocbook\\kernel::parseinifile","webdocbook\\kernel::remove","webdocbook\\markdownextended\\outputformat\\webdocbook::buildtitle","webdocbook\\markdownextended\\outputformat\\webdocbook::buildmetadata","webdocbook\\markdownextended\\outputformat\\webdocbook::buildlink","webdocbook\\markdownextended\\outputformat\\webdocbook::addtitleaddon","webdocbook\\markdownextended\\outputformat\\webdocbookhelper::getconfigordefault","webdocbook\\markdownextended\\outputformat\\webdocbookhelper::gettoc","webdocbook\\templatebuilder::__construct","webdocbook\\templatebuilder::render","webdocbook\\templatebuilder::rendersafe","webdocbook\\templatebuilder::getdefaultviewparams","webdocbook\\templatebuilder::gettemplate","webdocbook\\templatebuilder::gettwigengine","webdocbook\\util\\filesystem::slashdirname","webdocbook\\util\\filesystem::isgitclone","webdocbook\\util\\filesystem::isdotpath","webdocbook\\util\\filesystem::ensureexists","webdocbook\\util\\filesystem::ensureiswritable","webdocbook\\util\\filesystem::remove","webdocbook\\util\\filesystem::parseini","webdocbook\\util\\filesystem::parsejson","webdocbook\\webfilesystem\\wdbfile::__construct","webdocbook\\webfilesystem\\wdbfile::setfile","webdocbook\\webfilesystem\\wdbfile::getfile","webdocbook\\webfilesystem\\wdbfile::gettype","webdocbook\\webfilesystem\\wdbfile::setisrootlink","webdocbook\\webfilesystem\\wdbfile::getisrootlink","webdocbook\\webfilesystem\\wdbfile::isrootlink","webdocbook\\webfilesystem\\wdbfile::ischildoflink","webdocbook\\webfilesystem\\wdbfile::getwdbpath","webdocbook\\webfilesystem\\wdbfile::getwdbscanstack","webdocbook\\webfilesystem\\wdbfile::getwdbstack","webdocbook\\webfilesystem\\wdbfile::getwdbfullstack","webdocbook\\webfilesystem\\wdbfile::findtranslations","webdocbook\\webfilesystem\\wdbfile::findnext","webdocbook\\webfilesystem\\wdbfile::findprevious","webdocbook\\webfilesystem\\wdbfile::gethumanreadablefilename","webdocbook\\webfilesystem\\wdbfile::findreadme","webdocbook\\webfilesystem\\wdbfile::findindex","webdocbook\\webfilesystem\\wdbfile::getdescription","webdocbook\\webfilesystem\\wdbfile::viewintroduction","webdocbook\\webfilesystem\\wdbfile::viewfileinfos","webdocbook\\webfilesystem\\wdbfile::getwdbtypebypath","webdocbook\\webfilesystem\\wdbfileinterface::viewfileinfos","webdocbook\\webfilesystem\\wdbfileinterface::getintroduction","webdocbook\\webfilesystem\\wdbfile\\wdbdefault::viewfileinfos","webdocbook\\webfilesystem\\wdbfile\\wdbdefault::getintroduction","webdocbook\\webfilesystem\\wdbfile\\wdbdirectory::viewfileinfos","webdocbook\\webfilesystem\\wdbfile\\wdbdirectory::getintroduction","webdocbook\\webfilesystem\\wdbfile\\wdbembed::viewfileinfos","webdocbook\\webfilesystem\\wdbfile\\wdbembed::getintroduction","webdocbook\\webfilesystem\\wdbfile\\wdbimage::viewfileinfos","webdocbook\\webfilesystem\\wdbfile\\wdbimage::getintroduction","webdocbook\\webfilesystem\\wdbfile\\wdbmarkdown::viewfileinfos","webdocbook\\webfilesystem\\wdbfile\\wdbmarkdown::getintroduction","webdocbook\\webfilesystem\\wdbrecursivedirectoryiterator::__construct","webdocbook\\webfilesystem\\wdbrecursivedirectoryiterator::filevalidation","webdocbook\\webfilesystem\\wdbrecursivedirectoryiterator::dirvalidation","webdocbook\\webfilesystem\\wdbrecursivedirectoryiterator::current","webdocbook_twig_extension::getname","webdocbook_twig_extension::getfilters","webdocbook_twig_extension::getfunctions","webfilesystem\\filetype\\webimage::__construct","webfilesystem\\filetype\\webimage::setthumbfilename","webfilesystem\\filetype\\webimage::getthumbfilename","webfilesystem\\filetype\\webimage::getthumbbasename","webfilesystem\\filetype\\webimage::setthumbrootdir","webfilesystem\\filetype\\webimage::getthumbrootdir","webfilesystem\\filetype\\webimage::setthumbpath","webfilesystem\\filetype\\webimage::getthumbpath","webfilesystem\\filetype\\webimage::getthumbpathname","webfilesystem\\filetype\\webimage::getthumbrealpath","webfilesystem\\filetype\\webimage::getthumbwebpath","webfilesystem\\filetype\\webimage::getthumbrealwebpath","webfilesystem\\filetype\\webimage::getinfos","webfilesystem\\filetype\\webimage::getimageinfos","webfilesystem\\filetype\\webimage::getiptcinfos","webfilesystem\\filetype\\webimage::getexifinfos","webfilesystem\\filetype\\webimage::exists","webfilesystem\\filetype\\webimage::thumbexists","webfilesystem\\filetype\\webimage::isimage","webfilesystem\\filetype\\webimage::getgps","webfilesystem\\filetype\\webimage::gps2num","webfilesystem\\filetype\\webimage::getdatefromexif","webfilesystem\\filetype\\webimage::getbase64content","webfilesystem\\filetype\\webimage::getheight","webfilesystem\\filetype\\webimage::getwidth","webfilesystem\\filetype\\webvideo::__construct","webfilesystem\\filetype\\webvideo::setthumbfilename","webfilesystem\\filetype\\webvideo::getthumbfilename","webfilesystem\\filetype\\webvideo::getthumbbasename","webfilesystem\\filetype\\webvideo::setthumbrootdir","webfilesystem\\filetype\\webvideo::getthumbrootdir","webfilesystem\\filetype\\webvideo::setthumbpath","webfilesystem\\filetype\\webvideo::getthumbpath","webfilesystem\\filetype\\webvideo::getthumbpathname","webfilesystem\\filetype\\webvideo::getthumbrealpath","webfilesystem\\filetype\\webvideo::getthumbwebpath","webfilesystem\\filetype\\webvideo::getthumbrealwebpath","webfilesystem\\filetype\\webvideo::getinfos","webfilesystem\\filetype\\webvideo::getvideoinfos","webfilesystem\\filetype\\webvideo::exists","webfilesystem\\filetype\\webvideo::thumbexists","webfilesystem\\filetype\\webvideo::isvideo","webfilesystem\\filetype\\webvideo::getdatefromexif","webfilesystem\\finder::init","webfilesystem\\finder::reset","webfilesystem\\finder::setinited","webfilesystem\\finder::isinited","webfilesystem\\finder::setrootdir","webfilesystem\\finder::getrootdir","webfilesystem\\finder::adddirectory","webfilesystem\\finder::setdirectories","webfilesystem\\finder::getdirectories","webfilesystem\\finder::addexcludeddirectory","webfilesystem\\finder::setexcludeddirectories","webfilesystem\\finder::getexcludeddirectories","webfilesystem\\finder::addnamemask","webfilesystem\\finder::setnamemasks","webfilesystem\\finder::getnamemasks","webfilesystem\\finder::addexcludednamemask","webfilesystem\\finder::setexcludednamemasks","webfilesystem\\finder::getexcludednamemasks","webfilesystem\\finder::addextensionmask","webfilesystem\\finder::setextensionmasks","webfilesystem\\finder::getextensionmasks","webfilesystem\\finder::addexcludedextensionmask","webfilesystem\\finder::setexcludedextensionmasks","webfilesystem\\finder::getexcludedextensionmasks","webfilesystem\\finder::setdepth","webfilesystem\\finder::getdepth","webfilesystem\\finder::setiteratorflags","webfilesystem\\finder::getiteratorflags","webfilesystem\\finder::setflag","webfilesystem\\finder::getflag","webfilesystem\\finder::files","webfilesystem\\finder::dirs","webfilesystem\\finder::links","webfilesystem\\finder::dots","webfilesystem\\finder::depth","webfilesystem\\finder::name","webfilesystem\\finder::notname","webfilesystem\\finder::extension","webfilesystem\\finder::notextension","webfilesystem\\finder::in","webfilesystem\\finder::notin","webfilesystem\\finder::root","webfilesystem\\finder::images","webfilesystem\\finder::videos","webfilesystem\\finder::is","webfilesystem\\finder::isfile","webfilesystem\\finder::isdir","webfilesystem\\finder::islink","webfilesystem\\finder::isimage","webfilesystem\\finder::isvideo","webfilesystem\\finder::isdotfile","webfilesystem\\finder::getiterator","webfilesystem\\finder::current","webfilesystem\\finder::key","webfilesystem\\finder::next","webfilesystem\\finder::rewind","webfilesystem\\finder::valid","webfilesystem\\webfileinfo::__construct","webfilesystem\\webfileinfo::setflags","webfilesystem\\webfileinfo::getflags","webfilesystem\\webfileinfo::getextension","webfilesystem\\webfileinfo::getrealpath","webfilesystem\\webfileinfo::getfilename","webfilesystem\\webfileinfo::setrootdir","webfilesystem\\webfileinfo::getrootdir","webfilesystem\\webfileinfo::setwebpath","webfilesystem\\webfileinfo::getwebpath","webfilesystem\\webfileinfo::getrealwebpath","webfilesystem\\webfileinfo::exists","webfilesystem\\webfileinfo::pathexists","webfilesystem\\webfileinfo::rootdirexists","webfilesystem\\webfileinfo::gethumanreadablefilename","webfilesystem\\webfileinfo::getstat","webfilesystem\\webfileinfo::getmimetype","webfilesystem\\webfileinfo::getcharset","webfilesystem\\webfileinfo::getmime","webfilesystem\\webfilesystem::slashdirname","webfilesystem\\webfilesystem::gethumanreadablename","webfilesystem\\webfilesystem::getextensionname","webfilesystem\\webfilesystem::gettransformedfilesize","webfilesystem\\webfilesystem::getdatetimefromtimestamp","webfilesystem\\webfilesystem::iscommonfile","webfilesystem\\webfilesystem::isdotfile","webfilesystem\\webfilesystem::iscommonimage","webfilesystem\\webfilesystem::iscommonvideo","webfilesystem\\webfilesystemiterator::__construct","webfilesystem\\webfilesystemiterator::setflags","webfilesystem\\webfilesystemiterator::getflags","webfilesystem\\webfilesystemiterator::current","webfilesystem\\webfilesystemiterator::rewind","webfilesystem\\webfilesystemiterator::next","webfilesystem\\webfilesystemiterator::count","webfilesystem\\webrecursivedirectoryiterator::__construct","webfilesystem\\webrecursivedirectoryiterator::setfileclass","webfilesystem\\webrecursivedirectoryiterator::getfileclass","webfilesystem\\webrecursivedirectoryiterator::setfilevalidationcallback","webfilesystem\\webrecursivedirectoryiterator::getfilevalidationcallback","webfilesystem\\webrecursivedirectoryiterator::setdirectoryvalidationcallback","webfilesystem\\webrecursivedirectoryiterator::getdirectoryvalidationcallback","webfilesystem\\webrecursivedirectoryiterator::getchildren","webfilesystem\\webrecursivedirectoryiterator::getsubpath","webfilesystem\\webrecursivedirectoryiterator::getsubpathname","webfilesystem\\webrecursivedirectoryiterator::haschildren","webfilesystem\\webrecursivedirectoryiterator::seek","webfilesystem\\webrecursivedirectoryiterator::current","webfilesystem\\webrecursivedirectoryiterator::rewind","webfilesystem\\webrecursivedirectoryiterator::next","webfilesystem\\webrecursivedirectoryiterator::recursivecount","markdown\\markdownparser::render","markdown\\markdownparser::transform","markdown\\markdownparser::transformmarkdown","markdown\\markdownparser::defaulttransform","markdown\\markdownparser::text","markdown\\markdownparser::line","markdown\\markdownparsercompatibilityinterface::render","markdown\\markdownparsercompatibilityinterface::transform","markdown\\markdownparsercompatibilityinterface::transformmarkdown","markdown\\markdownparsercompatibilityinterface::defaulttransform","markdown\\markdownparsercompatibilityinterface::text","markdown\\markdownparsercompatibilityinterface::line"],
        'info': [["","",".html","","",3],["I18n","","I18n.html","","",3],["I18n\\Generator","","I18n\/Generator.html","","",3],["I18n\\Twig","","I18n\/Twig.html","","",3],["Library","","Library.html","","",3],["Library\\CommandLine","","Library\/CommandLine.html","","",3],["Library\\Converter","","Library\/Converter.html","","",3],["Library\\Helper","","Library\/Helper.html","","",3],["Library\\HttpFundamental","","Library\/HttpFundamental.html","","",3],["Library\\HttpFundamental\\ContentType","","Library\/HttpFundamental\/ContentType.html","","",3],["Library\\Object","","Library\/Object.html","","",3],["Library\\ReporterAdapter","","Library\/ReporterAdapter.html","","",3],["Library\\Session","","Library\/Session.html","","",3],["Library\\StaticConfiguration","","Library\/StaticConfiguration.html","","",3],["Library\\Tool","","Library\/Tool.html","","",3],["MarkdownExtended","","MarkdownExtended.html","","",3],["MarkdownExtended\\API","","MarkdownExtended\/API.html","","",3],["MarkdownExtended\\CommandLine","","MarkdownExtended\/CommandLine.html","","",3],["MarkdownExtended\\Exception","","MarkdownExtended\/Exception.html","","",3],["MarkdownExtended\\Grammar","","MarkdownExtended\/Grammar.html","","",3],["MarkdownExtended\\Grammar\\Filter","","MarkdownExtended\/Grammar\/Filter.html","","",3],["MarkdownExtended\\Grammar\\Tool","","MarkdownExtended\/Grammar\/Tool.html","","",3],["MarkdownExtended\\OutputFormat","","MarkdownExtended\/OutputFormat.html","","",3],["MarkdownExtended\\Util","","MarkdownExtended\/Util.html","","",3],["Patterns","","Patterns.html","","",3],["Patterns\\Abstracts","","Patterns\/Abstracts.html","","",3],["Patterns\\Commons","","Patterns\/Commons.html","","",3],["Patterns\\Interfaces","","Patterns\/Interfaces.html","","",3],["WebDocBook","","WebDocBook.html","","",3],["WebDocBook\\Abstracts","","WebDocBook\/Abstracts.html","","",3],["WebDocBook\\Composer","","WebDocBook\/Composer.html","","",3],["WebDocBook\\Composer\\Script","","WebDocBook\/Composer\/Script.html","","",3],["WebDocBook\\Controller","","WebDocBook\/Controller.html","","",3],["WebDocBook\\Exception","","WebDocBook\/Exception.html","","",3],["WebDocBook\\HttpFundamental","","WebDocBook\/HttpFundamental.html","","",3],["WebDocBook\\MarkdownExtended","","WebDocBook\/MarkdownExtended.html","","",3],["WebDocBook\\MarkdownExtended\\OutputFormat","","WebDocBook\/MarkdownExtended\/OutputFormat.html","","",3],["WebDocBook\\Util","","WebDocBook\/Util.html","","",3],["WebDocBook\\WebFilesystem","","WebDocBook\/WebFilesystem.html","","",3],["WebDocBook\\WebFilesystem\\WDBFile","","WebDocBook\/WebFilesystem\/WDBFile.html","","",3],["WebFilesystem","","WebFilesystem.html","","",3],["WebFilesystem\\FileType","","WebFilesystem\/FileType.html","","",3],["markdown","","markdown.html","","",3],["Generator","I18n","I18n\/Generator.html","","",1],["GeneratorInterface","I18n","I18n\/GeneratorInterface.html","","",1],["Csv","I18n\\Generator","I18n\/Generator\/Csv.html","","",1],["I18n","I18n","I18n\/I18n.html"," < AbstractSingleton","Internationalization class",1],["I18nException","I18n","I18n\/I18nException.html"," < Exception","",1],["I18nInvalidArgumentException","I18n","I18n\/I18nInvalidArgumentException.html"," < InvalidArgumentException","",1],["I18nRuntimeException","I18n","I18n\/I18nRuntimeException.html"," < RuntimeException","",1],["Iana","I18n","I18n\/Iana.html","","Locale codes DB from ",1],["Loader","I18n","I18n\/Loader.html"," < AbstractOptionable","",1],["LoaderInterface","I18n","I18n\/LoaderInterface.html","","",1],["I18nExtension","I18n\\Twig","I18n\/Twig\/I18nExtension.html"," < Twig_Extension","",1],["PluralizeNode","I18n\\Twig","I18n\/Twig\/PluralizeNode.html"," < Twig_Node","",1],["PluralizeTokenParser","I18n\\Twig","I18n\/Twig\/PluralizeTokenParser.html"," < Twig_TokenParser","Use the I18n\\I18n::translate function",1],["TranslateNode","I18n\\Twig","I18n\/Twig\/TranslateNode.html"," < Twig_Node","",1],["TranslateTokenParser","I18n\\Twig","I18n\/Twig\/TranslateTokenParser.html"," < Twig_TokenParser","Use the I18n\\I18n::translate function",1],["AbstractReporterAdapter","Library","Library\/AbstractReporterAdapter.html","","Reporter Adapters interface",1],["CodeParser","Library","Library\/CodeParser.html","","Source code parser",1],["Command","Library","Library\/Command.html","","Largely inspired from ",1],["AbstractCommandLineController","Library\\CommandLine","Library\/CommandLine\/AbstractCommandLineController.html","","Basic command line controller",1],["CommandLineControllerInterface","Library\\CommandLine","Library\/CommandLine\/CommandLineControllerInterface.html","","CommandLine controller interface",1],["Formater","Library\\CommandLine","Library\/CommandLine\/Formater.html","","",1],["Helper","Library\\CommandLine","Library\/CommandLine\/Helper.html","","",1],["Stream","Library\\CommandLine","Library\/CommandLine\/Stream.html","","Command line streams manager",1],["CommandNotFoundException","Library","Library\/CommandNotFoundException.html"," < RuntimeException","",1],["AbstractConverter","Library\\Converter","Library\/Converter\/AbstractConverter.html","","",1],["Array2INI","Library\\Converter","Library\/Converter\/Array2INI.html"," < AbstractConverter","Array to INI format converter",1],["Html2Text","Library\\Converter","Library\/Converter\/Html2Text.html"," < AbstractConverter","HTML to plain text converter",1],["Xml2Array","Library\\Converter","Library\/Converter\/Xml2Array.html"," < AbstractConverter","XML to array converter",1],["Crypt","Library","Library\/Crypt.html","","Simple crypter",1],["Factory","Library","Library\/Factory.html"," < AbstractStaticCreator","Factory will try to create an object following user",1],["FactoryInterface","Library","Library\/FactoryInterface.html","","",1],["FileRotator","Library","Library\/FileRotator.html","","Rotate system for files",1],["Code","Library\\Helper","Library\/Helper\/Code.html","","Code helper",1],["ConditionalComment","Library\\Helper","Library\/Helper\/ConditionalComment.html","","Internet Explorer conditional HTML comment",1],["Directory","Library\\Helper","Library\/Helper\/Directory.html","","Directory helper",1],["File","Library\\Helper","Library\/Helper\/File.html","","File helper",1],["Filesystem","Library\\Helper","Library\/Helper\/Filesystem.html","","File helper",1],["Html","Library\\Helper","Library\/Helper\/Html.html","","HTML language helper",1],["Number","Library\\Helper","Library\/Helper\/Number.html","","Number helper",1],["Regex","Library\\Helper","Library\/Helper\/Regex.html","","Regex helper",1],["Request","Library\\Helper","Library\/Helper\/Request.html","","Request helper",1],["Text","Library\\Helper","Library\/Helper\/Text.html","","Text helper",1],["Url","Library\\Helper","Library\/Helper\/Url.html","","URL common methods",1],["ContentType","Library\\HttpFundamental","Library\/HttpFundamental\/ContentType.html","","",1],["ContentTypeInterface","Library\\HttpFundamental","Library\/HttpFundamental\/ContentTypeInterface.html","","",1],["Html","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/Html.html","","",1],["Json","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/Json.html","","",1],["PlainText","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/PlainText.html","","",1],["Xml","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType\/Xml.html","","",1],["Cookie","Library\\HttpFundamental","Library\/HttpFundamental\/Cookie.html","","",1],["Request","Library\\HttpFundamental","Library\/HttpFundamental\/Request.html","","The global request class",1],["Response","Library\\HttpFundamental","Library\/HttpFundamental\/Response.html","","The global response class",1],["Logger","Library","Library\/Logger.html"," < AbstractLogger","Write some log infos in log files",1],["AbstractInvokable","Library\\Object","Library\/Object\/AbstractInvokable.html","","Magic handling of properties access",1],["InvokableAccessException","Library\\Object","Library\/Object\/InvokableAccessException.html"," < OutOfBoundsException","",1],["InvokableInterface","Library\\Object","Library\/Object\/InvokableInterface.html","","Magic handling of properties access interface",1],["RegistryInvokable","Library\\Object","Library\/Object\/RegistryInvokable.html","","Magic handling of properties access",1],["Reporter","Library","Library\/Reporter.html","","",1],["Html","Library\\ReporterAdapter","Library\/ReporterAdapter\/Html.html"," < AbstractReporterAdapter","",1],["Router","Library","Library\/Router.html","","The global router class",1],["FlashSession","Library\\Session","Library\/Session\/FlashSession.html"," < Session","Session manager class",1],["Session","Library\\Session","Library\/Session\/Session.html","","Session manager class",1],["SessionInterface","Library\\Session","Library\/Session\/SessionInterface.html","","",1],["Config","Library\\StaticConfiguration","Library\/StaticConfiguration\/Config.html","","Static global configuration object manager",1],["ConfiguratorInterface","Library\\StaticConfiguration","Library\/StaticConfiguration\/ConfiguratorInterface.html","","Config class interface to use with \\Library\\StaticConfiguration\\Config",1],["MorseCode","Library\\Tool","Library\/Tool\/MorseCode.html","","",1],["Pagination","Library\\Tool","Library\/Tool\/Pagination.html","","",1],["Table","Library\\Tool","Library\/Tool\/Table.html","","Table helper tool",1],["API","MarkdownExtended","MarkdownExtended\/API.html","","The API defines all required interfaces",1],["CollectionInterface","MarkdownExtended\\API","MarkdownExtended\/API\/CollectionInterface.html","","Interface CollectionInterface",1],["ContentInterface","MarkdownExtended\\API","MarkdownExtended\/API\/ContentInterface.html","","Interface to implement for `MarkdownExtended\\Content`",1],["GamutInterface","MarkdownExtended\\API","MarkdownExtended\/API\/GamutInterface.html","","Interface GamutInterface",1],["KernelInterface","MarkdownExtended\\API","MarkdownExtended\/API\/KernelInterface.html","","Interface that defines a \"kernel\" principle",1],["OutputFormatHelperInterface","MarkdownExtended\\API","MarkdownExtended\/API\/OutputFormatHelperInterface.html","","PHP Markdown Extended OutputFormat helper interface",1],["OutputFormatInterface","MarkdownExtended\\API","MarkdownExtended\/API\/OutputFormatInterface.html","","PHP Markdown Extended OutputFormat interface",1],["ParserInterface","MarkdownExtended\\API","MarkdownExtended\/API\/ParserInterface.html","","Interface for a content parser",1],["TemplaterInterface","MarkdownExtended\\API","MarkdownExtended\/API\/TemplaterInterface.html","","Interface TemplaterInterface",1],["AbstractConsole","MarkdownExtended\\CommandLine","MarkdownExtended\/CommandLine\/AbstractConsole.html","","Command line controller\/interface base",1],["Console","MarkdownExtended\\CommandLine","MarkdownExtended\/CommandLine\/Console.html"," < AbstractConsole","Command line controller\/interface for MarkdownExtended",1],["Reminders","MarkdownExtended\\CommandLine","MarkdownExtended\/CommandLine\/Reminders.html"," < AbstractConsole","Command line controller to rebuild the MarkdownExtended",1],["Config","MarkdownExtended","MarkdownExtended\/Config.html"," < Registry","Global configuration registry",1],["Content","MarkdownExtended","MarkdownExtended\/Content.html","","Class defining a content object for the Parser",1],["ContentCollection","MarkdownExtended","MarkdownExtended\/ContentCollection.html","","Class defining a collection of content objects",1],["DomainException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/DomainException.html"," < DomainException","Class DomainException",1],["Exception","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/Exception.html"," < Exception","Class Exception",1],["InvalidArgumentException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","Class InvalidArgumentException",1],["RuntimeException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/RuntimeException.html"," < RuntimeException","Class RuntimeException",1],["UnexpectedValueException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/UnexpectedValueException.html"," < UnexpectedValueException","Class UnexpectedValueException",1],["AbstractGamut","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/AbstractGamut.html","","The base class for all Filters and Tools",1],["Filter","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Filter.html"," < AbstractGamut","Base class for all Filters",1],["Abbreviation","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html"," < Filter","Process Markdown abbreviations",1],["Anchor","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Anchor.html"," < Filter","Process Markdown links",1],["AutoLink","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/AutoLink.html"," < Filter","Process Markdown automatic links",1],["BlockInclusion","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/BlockInclusion.html"," < Filter","Process the inclusion of third-party Markdown files",1],["BlockQuote","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/BlockQuote.html"," < Filter","Process Markdown blockquotes",1],["CodeBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html"," < Filter","Process Markdown code blocks",1],["DefinitionList","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html"," < Filter","Process Markdown definitions lists",1],["Emphasis","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Emphasis.html"," < Filter","Process Markdown emphasis: bold & italic",1],["FencedCodeBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/FencedCodeBlock.html"," < Filter","Process Markdown fenced code blocks",1],["HTML","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HTML.html"," < Filter","Process Markdown in-text HTML",1],["HardBreak","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HardBreak.html"," < Filter","Process Markdown hard breaks",1],["Header","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Header.html"," < Filter","Process Markdown headers",1],["HorizontalRule","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HorizontalRule.html"," < Filter","Process Markdown horizontal rules",1],["Image","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Image.html"," < Filter","Process Markdown images",1],["LinkDefinition","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html"," < Filter","Process Markdown definitions links",1],["ListItem","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/ListItem.html"," < Filter","Process Markdown list items",1],["Maths","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Maths.html"," < Filter","Process Markdown mathematics",1],["MetaData","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/MetaData.html"," < Filter","Process Markdown meta data",1],["Note","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Note.html"," < Filter","Process Markdown notes: footnotes, glossary and bibliography",1],["Span","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Span.html"," < Filter","Process Markdown spans",1],["Table","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Table.html"," < Filter","Process Markdown tables",1],["TableOfContents","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/TableOfContents.html"," < Filter","Construct the global Table of Contents (hierarchical",1],["Gamut","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Gamut.html","","Central class to execute Filters and Tools methods",1],["Tool","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Tool.html"," < AbstractGamut","Abstract base class for Tools",1],["AppendEndingNewLines","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/AppendEndingNewLines.html"," < Tool","Class AppendEndingNewLines",1],["Detab","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/Detab.html"," < Tool","Class Detab",1],["EncodeAmpAndAngle","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/EncodeAmpAndAngle.html"," < Tool","Class EncodeAmpAndAngle",1],["EncodeAttribute","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/EncodeAttribute.html"," < Tool","Class EncodeAttribute",1],["ExtractAttributes","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/ExtractAttributes.html"," < Tool","Class ExtractAttributes",1],["Outdent","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/Outdent.html"," < Tool","Class Outdent",1],["RebuildParagraph","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/RebuildParagraph.html"," < Tool","Class RebuildParagraph",1],["RemoveUtf8Marker","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/RemoveUtf8Marker.html"," < Tool","Class RemoveUtf8Marker",1],["StandardizeLineEnding","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/StandardizeLineEnding.html"," < Tool","Class StandardizeLineEnding",1],["StripSpacedLines","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/StripSpacedLines.html"," < Tool","Class StripSpacedLines",1],["Helper","MarkdownExtended","MarkdownExtended\/Helper.html","","Global Markdown Extended Helper",1],["MarkdownExtended","MarkdownExtended","MarkdownExtended\/MarkdownExtended.html","","PHP Markdown Extended Mother Class",1],["OutputFormatBag","MarkdownExtended","MarkdownExtended\/OutputFormatBag.html","","PHP Markdown Extended OutputFormat container",1],["AbstractOutputFormat","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html","","Class AbstractOutputFormat",1],["DefaultHelper","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/DefaultHelper.html","","Default Markdown Extended output Helper",1],["HTML","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/HTML.html"," < AbstractOutputFormat","Format a content in full HTML",1],["HTMLHelper","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/HTMLHelper.html","","HTML output Helper",1],["Man","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/Man.html"," < AbstractOutputFormat","Format a content in UNIX Manpage format",1],["ManHelper","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/ManHelper.html"," < DefaultHelper","Manpages Markdown Extended output Helper",1],["Parser","MarkdownExtended","MarkdownExtended\/Parser.html","","PHP Markdown Extended Parser Class",1],["Registry","MarkdownExtended","MarkdownExtended\/Registry.html","","Class Registry",1],["Templater","MarkdownExtended","MarkdownExtended\/Templater.html","","Class Templater",1],["Compiler","MarkdownExtended\\Util","MarkdownExtended\/Util\/Compiler.html","","The Compiler class compiles the whole markdown into",1],["MenuItemIterator","MarkdownExtended\\Util","MarkdownExtended\/Util\/MenuItemIterator.html"," < ArrayIterator","This class defines each `RecursiveMenuIterator` item",1],["RecursiveMenuIterator","MarkdownExtended\\Util","MarkdownExtended\/Util\/RecursiveMenuIterator.html"," < RecursiveArrayIterator","Class RecursiveMenuIterator",1],["AbstractAccessible","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractAccessible.html","","Magic properties accessors  This abstract class defines",1],["AbstractOptionable","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractOptionable.html","","A simple object options manager  This class is a helper",1],["AbstractResponse","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractResponse.html","","Global HTML response class  This class defines a very",1],["AbstractSingleton","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractSingleton.html","","A singleton abstract class",1],["AbstractStaticCreator","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractStaticCreator.html","","This class allows to create objects that can be statically",1],["AbstractView","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractView.html","","",1],["Collection","Patterns\\Commons","Patterns\/Commons\/Collection.html","","Collection manager : allows to set, get, loop and seek",1],["ConfigurationRegistry","Patterns\\Commons","Patterns\/Commons\/ConfigurationRegistry.html","","A manager for a configuration registry as an array",1],["Registry","Patterns\\Commons","Patterns\/Commons\/Registry.html","","A classic registry manager  This class handles a set",1],["ArrayInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ArrayInterface.html","","Array interface",1],["CachableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CachableInterface.html","","Manage a cachable item object",1],["CollectionInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CollectionInterface.html","","Collection interface",1],["CrudInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CrudInterface.html","","An interface for a basic CRUD model",1],["DebuggableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/DebuggableInterface.html","","A simple interface to manage a debuggable object",1],["IteratorInterface","Patterns\\Interfaces","Patterns\/Interfaces\/IteratorInterface.html","","Iterator interface",1],["OptionableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/OptionableInterface.html","","A simple interface to manage a set of options",1],["RepositoryInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RepositoryInterface.html","","",1],["RequestInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RequestInterface.html","","Interface for classic request handling",1],["ResponseInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ResponseInterface.html","","Interface for classic response handling",1],["RouterInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RouterInterface.html","","",1],["StaticCreatorInterface","Patterns\\Interfaces","Patterns\/Interfaces\/StaticCreatorInterface.html","","This interface allows to create objects that can be",1],["StaticOptionableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/StaticOptionableInterface.html","","A simple interface to manage a set of options statically",1],["TranslatableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/TranslatableInterface.html","","This work is BETA (not fully tested)",1],["UserInterface","Patterns\\Interfaces","Patterns\/Interfaces\/UserInterface.html","","This work is BETA (not fully tested)",1],["ViewInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ViewInterface.html","","This work is BETA (not fully tested)",1],["WebPageInterface","Patterns\\Interfaces","Patterns\/Interfaces\/WebPageInterface.html","","This work is BETA (not fully tested)",1],["SplClassLoader","","SplClassLoader.html","","SplClassLoader implementation that implements the technical",1],["AbstractController","WebDocBook\\Abstracts","WebDocBook\/Abstracts\/AbstractController.html","","Class AbstractController",1],["AbstractFrontController","WebDocBook\\Abstracts","WebDocBook\/Abstracts\/AbstractFrontController.html"," < AbstractSingleton","Class AbstractFrontController",1],["Exception","WebDocBook\\Composer","WebDocBook\/Composer\/Exception.html"," < Exception","Class Exception",1],["Manager","WebDocBook\\Composer","WebDocBook\/Composer\/Manager.html","","Class Manager",1],["ScriptInterface","WebDocBook\\Composer","WebDocBook\/Composer\/ScriptInterface.html","","Interface ScriptInterface",1],["ClearCache","WebDocBook\\Composer\\Script","WebDocBook\/Composer\/Script\/ClearCache.html","","Class ClearCache",1],["ClearI18n","WebDocBook\\Composer\\Script","WebDocBook\/Composer\/Script\/ClearI18n.html","","Class ClearI18n",1],["Initialize","WebDocBook\\Composer\\Script","WebDocBook\/Composer\/Script\/Initialize.html","","Class Initialize",1],["DefaultController","WebDocBook\\Controller","WebDocBook\/Controller\/DefaultController.html"," < AbstractController","Class DefaultController",1],["WebDocBookController","WebDocBook\\Controller","WebDocBook\/Controller\/WebDocBookController.html"," < AbstractController","Class WebDocBookController",1],["Exception","WebDocBook\\Exception","WebDocBook\/Exception\/Exception.html"," < Exception","Class Exception",1],["NotFoundException","WebDocBook\\Exception","WebDocBook\/Exception\/NotFoundException.html"," < Exception","Class NotFoundException",1],["RuntimeException","WebDocBook\\Exception","WebDocBook\/Exception\/RuntimeException.html"," < RuntimeException","Class RuntimeException",1],["FrontController","WebDocBook","WebDocBook\/FrontController.html"," < AbstractFrontController","Class FrontController",1],["Helper","WebDocBook","WebDocBook\/Helper.html","","Class Helper",1],["Request","WebDocBook\\HttpFundamental","WebDocBook\/HttpFundamental\/Request.html"," < Request","Class Request",1],["Response","WebDocBook\\HttpFundamental","WebDocBook\/HttpFundamental\/Response.html"," < Response","Class Response",1],["Kernel","WebDocBook","WebDocBook\/Kernel.html","","Class Kernel",1],["WebDocBook","WebDocBook\\MarkdownExtended\\OutputFormat","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBook.html"," < HTML","All '$_defaults' entries can be overwritten in config.",1],["WebDocBookHelper","WebDocBook\\MarkdownExtended\\OutputFormat","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBookHelper.html"," < HTMLHelper","WebDocBook output Helper",1],["TemplateBuilder","WebDocBook","WebDocBook\/TemplateBuilder.html"," < AbstractView","Class TemplateBuilder",1],["Filesystem","WebDocBook\\Util","WebDocBook\/Util\/Filesystem.html","","Class Filesystem",1],["WDBFile","WebDocBook\\WebFilesystem","WebDocBook\/WebFilesystem\/WDBFile.html"," < WebFileInfo","Class WDBFile",1],["WDBFileInterface","WebDocBook\\WebFilesystem","WebDocBook\/WebFilesystem\/WDBFileInterface.html","","Interface WDBFileInterface",1],["WDBDefault","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile\/WDBDefault.html"," < WebFileInfo","Class WDBDefault",1],["WDBDirectory","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile\/WDBDirectory.html"," < WebFileInfo","Class WDBDirectory",1],["WDBEmbed","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile\/WDBEmbed.html"," < WebFileInfo","Class WDBEmbed",1],["WDBImage","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile\/WDBImage.html"," < WebImage","Class WDBImage",1],["WDBMarkdown","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile\/WDBMarkdown.html"," < WebFileInfo","Class WDBMarkdown",1],["WDBRecursiveDirectoryIterator","WebDocBook\\WebFilesystem","WebDocBook\/WebFilesystem\/WDBRecursiveDirectoryIterator.html"," < WebRecursiveDirectoryIterator","Class WDBRecursiveDirectoryIterator",1],["WebDocBook_Twig_Extension","","WebDocBook_Twig_Extension.html"," < Twig_Extension","Class WebDocBook_Twig_Extension",1],["WebImage","WebFilesystem\\FileType","WebFilesystem\/FileType\/WebImage.html"," < WebFileInfo","",1],["WebVideo","WebFilesystem\\FileType","WebFilesystem\/FileType\/WebVideo.html"," < WebFileInfo","",1],["Finder","WebFilesystem","WebFilesystem\/Finder.html"," < AbstractStaticCreator","",1],["WebFileInfo","WebFilesystem","WebFilesystem\/WebFileInfo.html"," < SplFileInfo","Special web's version of the PHP >=5.1.2 standard class",1],["WebFilesystem","WebFilesystem","WebFilesystem\/WebFilesystem.html","","Commons static functions for the whole package",1],["WebFilesystemIterator","WebFilesystem","WebFilesystem\/WebFilesystemIterator.html"," < FilesystemIterator","Special web's version of the PHP >=5.3 standard class",1],["WebRecursiveDirectoryIterator","WebFilesystem","WebFilesystem\/WebRecursiveDirectoryIterator.html"," < WebFilesystemIterator","",1],["MarkdownExtendedParser","markdown","markdown\/MarkdownExtendedParser.html"," < MarkdownParser","Class MarkdownExtendedParser",1],["MarkdownExtraParser","markdown","markdown\/MarkdownExtraParser.html"," < MarkdownParser","Class MarkdownExtraParser",1],["MarkdownParser","markdown","markdown\/MarkdownParser.html","","Class MarkdownParser",1],["MarkdownParserCompatibilityInterface","markdown","markdown\/MarkdownParserCompatibilityInterface.html","","Interface MarkdownParserCompatibilityInterface",1],["MultiMarkdownParser","markdown","markdown\/MultiMarkdownParser.html"," < MarkdownParser","Class MultiMarkdownParser",1],["Generator::__construct","I18n\\Generator","I18n\/Generator.html#method___construct","(string $db_filepath = null, string $generator = &#039;csv&#039;)","",2],["Generator::setDbFilepath","I18n\\Generator","I18n\/Generator.html#method_setDbFilepath","(<abbr title=\"I18n\\$path\">$path<\/abbr> $path)","",2],["Generator::getDbFilepath","I18n\\Generator","I18n\/Generator.html#method_getDbFilepath","()","",2],["Generator::setGenerator","I18n\\Generator","I18n\/Generator.html#method_setGenerator","(<abbr title=\"I18n\\$name\">$name<\/abbr> $name)","",2],["Generator::getGenerator","I18n\\Generator","I18n\/Generator.html#method_getGenerator","()","",2],["Generator::generate","I18n\\Generator","I18n\/Generator.html#method_generate","()","",2],["GeneratorInterface::generate","I18n\\GeneratorInterface","I18n\/GeneratorInterface.html#method_generate","(string $from_file, <abbr title=\"I18n\\I18n\\I18n\">I18n<\/abbr> $i18n)","",2],["Csv::generate","I18n\\Generator\\Csv","I18n\/Generator\/Csv.html#method_generate","(string $from_file, <abbr title=\"I18n\\Generator\\I18n\\I18n\">I18n<\/abbr> $i18n)","",2],["I18n::setLoader","I18n\\I18n","I18n\/I18n.html#method_setLoader","(<a href=\"I18n\/LoaderInterface.html\"><abbr title=\"I18n\\LoaderInterface\">LoaderInterface<\/abbr><\/a> $loader)","Store the loader",2],["I18n::getLoader","I18n\\I18n","I18n\/I18n.html#method_getLoader","()","Gets the loader",2],["I18n::loadFile","I18n\\I18n","I18n\/I18n.html#method_loadFile","(string $file_name, null|string $dir_name = null)","Load a new language file",2],["I18n::setLanguage","I18n\\I18n","I18n\/I18n.html#method_setLanguage","(string $lang, bool $throw_errors = true, bool $force_rebuild = false)","Loads a new language",2],["I18n::getLanguage","I18n\\I18n","I18n\/I18n.html#method_getLanguage","()","Get the current language code used",2],["I18n::setDefaultFromHttp","I18n\\I18n","I18n\/I18n.html#method_setDefaultFromHttp","()","Try to get the browser default locale and use it",2],["I18n::isAvailableLanguage","I18n\\I18n","I18n\/I18n.html#method_isAvailableLanguage","(string $lang)","Check if a language code is available in the Loader",2],["I18n::getAvailableLocale","I18n\\I18n","I18n\/I18n.html#method_getAvailableLocale","(string $lang)","Get the full locale info for a language code",2],["I18n::getAvailableLanguages","I18n\\I18n","I18n\/I18n.html#method_getAvailableLanguages","()","Get the list of `Loader::available_languages`",2],["I18n::setLocale","I18n\\I18n","I18n\/I18n.html#method_setLocale","(string $locale)","Define a new locale for the system",2],["I18n::getLocale","I18n\\I18n","I18n\/I18n.html#method_getLocale","()","Get the current locale used by the system",2],["I18n::setTimezone","I18n\\I18n","I18n\/I18n.html#method_setTimezone","(string $timezone)","Define a new timezone for the system",2],["I18n::getTimezone","I18n\\I18n","I18n\/I18n.html#method_getTimezone","()","Get the current timezone used by the system",2],["I18n::hasLocalizedString","I18n\\I18n","I18n\/I18n.html#method_hasLocalizedString","(string $index)","Check if a translation exists for an index",2],["I18n::getLocalizedString","I18n\\I18n","I18n\/I18n.html#method_getLocalizedString","(string $index)","Get the translation of an index",2],["I18n::parseString","I18n\\I18n","I18n\/I18n.html#method_parseString","(string $str, array $arguments = null)","Parse a translated string making some parameters replacements",2],["I18n::parseStringMetadata","I18n\\I18n","I18n\/I18n.html#method_parseStringMetadata","(string $str)","Get the meta-data of a language string",2],["I18n::getCurrency","I18n\\I18n","I18n\/I18n.html#method_getCurrency","(string $lang = null)","Get the currency of the current locale",2],["I18n::getHttpHeaderLocale","I18n\\I18n","I18n\/I18n.html#method_getHttpHeaderLocale","()","Get the browser requested locale if so",2],["I18n::getAvailableLanguagesNames","I18n\\I18n","I18n\/I18n.html#method_getAvailableLanguagesNames","(string $lang = null)","Get the full list of `Loader::available_languages`",2],["I18n::getLanguageCode","I18n\\I18n","I18n\/I18n.html#method_getLanguageCode","(string $lang = null)","Get the language code of the current locale",2],["I18n::getRegionCode","I18n\\I18n","I18n\/I18n.html#method_getRegionCode","(string $lang = null)","Get the region code of the current locale",2],["I18n::getScriptCode","I18n\\I18n","I18n\/I18n.html#method_getScriptCode","(string $lang = null)","Get the script code of the current locale",2],["I18n::getKeywords","I18n\\I18n","I18n\/I18n.html#method_getKeywords","(string $lang = null)","Get the keywords of the current locale",2],["I18n::getKeyword","I18n\\I18n","I18n\/I18n.html#method_getKeyword","(string $keyword, string $lang = null)","Get one keyword value of the current locale",2],["I18n::getPrimaryLanguage","I18n\\I18n","I18n\/I18n.html#method_getPrimaryLanguage","(string $for_locale = null, string $lang = null)","Get the primary language of a locale",2],["I18n::getLanguageName","I18n\\I18n","I18n\/I18n.html#method_getLanguageName","(string $for_locale = null, string $lang = null)","Get the language name of a locale",2],["I18n::getCountryName","I18n\\I18n","I18n\/I18n.html#method_getCountryName","(string $for_locale = null, string $lang = null)","Get the country name of a locale",2],["I18n::getLocaleScript","I18n\\I18n","I18n\/I18n.html#method_getLocaleScript","(string $for_locale = null, string $lang = null)","Get the script name of a locale",2],["I18n::getLocaleVariant","I18n\\I18n","I18n\/I18n.html#method_getLocaleVariant","(string $for_locale = null, string $lang = null)","Get the variant name of a locale",2],["I18n::getLocalizedNumberString","I18n\\I18n","I18n\/I18n.html#method_getLocalizedNumberString","(int $number, string $lang = null)","Get a localized number value",2],["I18n::getLocalizedPriceString","I18n\\I18n","I18n\/I18n.html#method_getLocalizedPriceString","(int $number, string $lang = null)","Get a localized price value",2],["I18n::getLocalizedDateString","I18n\\I18n","I18n\/I18n.html#method_getLocalizedDateString","(<a href=\"http:\/\/php.net\/DateTime\"><abbr title=\"DateTime\">DateTime<\/abbr><\/a> $date, string $mask = null, string $charset = &#039;UTF-8&#039;, string $lang = null)","Get a localized date value",2],["I18n::translate","I18n\\I18n","I18n\/I18n.html#method_translate","(string $index, array $args = null, string $lang = null)","Process a translation with arguments",2],["I18n::pluralize","I18n\\I18n","I18n\/I18n.html#method_pluralize","(array $indexes = array(), int $number, array $args = null, string $lang = null)","Process a translation with arguments depending on a",2],["Iana::__construct","I18n\\Iana","I18n\/Iana.html#method___construct","($db_file = null, $db_dir = null)","",2],["Iana::setDbFilepath","I18n\\Iana","I18n\/Iana.html#method_setDbFilepath","($path)","",2],["Iana::getDbFilepath","I18n\\Iana","I18n\/Iana.html#method_getDbFilepath","()","",2],["Iana::setDbFilename","I18n\\Iana","I18n\/Iana.html#method_setDbFilename","($name)","",2],["Iana::getDbFilename","I18n\\Iana","I18n\/Iana.html#method_getDbFilename","()","",2],["Iana::getDbRealpath","I18n\\Iana","I18n\/Iana.html#method_getDbRealpath","()","",2],["Iana::update","I18n\\Iana","I18n\/Iana.html#method_update","()","",2],["Iana::read","I18n\\Iana","I18n\/Iana.html#method_read","()","",2],["Iana::getDb","I18n\\Iana","I18n\/Iana.html#method_getDb","()","",2],["Iana::getLanguages","I18n\\Iana","I18n\/Iana.html#method_getLanguages","()","",2],["Iana::getRegions","I18n\\Iana","I18n\/Iana.html#method_getRegions","()","",2],["Iana::getScripts","I18n\\Iana","I18n\/Iana.html#method_getScripts","()","",2],["Iana::getExtlangs","I18n\\Iana","I18n\/Iana.html#method_getExtlangs","()","",2],["Loader::__construct","I18n\\Loader","I18n\/Loader.html#method___construct","(array $user_options = array())","Creation of a Loader with an optional user defined",2],["Loader::addPath","I18n\\Loader","I18n\/Loader.html#method_addPath","(null|string $db_filename = null, null|string $db_directory = null, null|string $file = null)","Add a path to the registry",2],["Loader::getParsedOption","I18n\\Loader","I18n\/Loader.html#method_getParsedOption","(string $name, string|array $lang = null, mixed $default = null)","Parse an option value replacing `%s` by the actual",2],["Loader::buildLanguageFileName","I18n\\Loader","I18n\/Loader.html#method_buildLanguageFileName","(string $lang, string $db_filename = null)","Build the file name for the language database",2],["Loader::buildLanguageDirName","I18n\\Loader","I18n\/Loader.html#method_buildLanguageDirName","(string $lang)","Build the directory name for the language database",2],["Loader::buildLanguageFilePath","I18n\\Loader","I18n\/Loader.html#method_buildLanguageFilePath","(string $lang)","Build the absolute file path for the language database",2],["Loader::buildLanguageVarname","I18n\\Loader","I18n\/Loader.html#method_buildLanguageVarname","(string $lang)","Build the variable name for the language database",2],["Loader::buildLanguageDBFileName","I18n\\Loader","I18n\/Loader.html#method_buildLanguageDBFileName","()","Build the file name for the language CSV database",2],["Loader::buildLanguageDBDirName","I18n\\Loader","I18n\/Loader.html#method_buildLanguageDBDirName","()","Build the directory name for the language CSV database",2],["Loader::buildLanguageDBFilePath","I18n\\Loader","I18n\/Loader.html#method_buildLanguageDBFilePath","()","Build the file path for the language CSV database",2],["Loader::findLanguageDBFile","I18n\\Loader","I18n\/Loader.html#method_findLanguageDBFile","(string $db_filename = null, string $db_directory = null)","Find (and add if needed) a language file from options",2],["LoaderInterface::getOption","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_getOption","(string $name, mixed $default = null)","Get the value of a specific option",2],["LoaderInterface::buildLanguageFileName","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_buildLanguageFileName","(string $lang, string $db_filename = null)","Build the file name for the language database",2],["LoaderInterface::buildLanguageDirName","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_buildLanguageDirName","(string $lang)","Build the directory name for the language database",2],["LoaderInterface::buildLanguageFilePath","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_buildLanguageFilePath","(string $lang)","Build the absolute file path for the language database",2],["LoaderInterface::buildLanguageVarname","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_buildLanguageVarname","(string $lang)","Build the variable name for the language database",2],["LoaderInterface::buildLanguageDBFileName","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_buildLanguageDBFileName","()","Build the file name for the language CSV database",2],["LoaderInterface::buildLanguageDBDirName","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_buildLanguageDBDirName","()","Build the directory name for the language CSV database",2],["LoaderInterface::buildLanguageDBFilePath","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_buildLanguageDBFilePath","()","Build the absolute file path for the language CSV database",2],["LoaderInterface::findLanguageDBFile","I18n\\LoaderInterface","I18n\/LoaderInterface.html#method_findLanguageDBFile","(string $db_filename = null, string $db_directory = null)","Find a language file from options directories",2],["I18nExtension::__construct","I18n\\Twig\\I18nExtension","I18n\/Twig\/I18nExtension.html#method___construct","($arg)","You can construct this extension by passing a `\\I18n\\I18n`",2],["I18nExtension::getName","I18n\\Twig\\I18nExtension","I18n\/Twig\/I18nExtension.html#method_getName","()","",2],["I18nExtension::getGlobals","I18n\\Twig\\I18nExtension","I18n\/Twig\/I18nExtension.html#method_getGlobals","()","",2],["I18nExtension::getFilters","I18n\\Twig\\I18nExtension","I18n\/Twig\/I18nExtension.html#method_getFilters","()","",2],["I18nExtension::getFunctions","I18n\\Twig\\I18nExtension","I18n\/Twig\/I18nExtension.html#method_getFunctions","()","",2],["I18nExtension::getTokenParsers","I18n\\Twig\\I18nExtension","I18n\/Twig\/I18nExtension.html#method_getTokenParsers","()","",2],["PluralizeNode::__construct","I18n\\Twig\\PluralizeNode","I18n\/Twig\/PluralizeNode.html#method___construct","(<abbr title=\"Twig_Node_Expression_Array\">Twig_Node_Expression_Array<\/abbr> $choices, <abbr title=\"Twig_Node_Expression_Constant\">Twig_Node_Expression_Constant<\/abbr> $counter, <abbr title=\"Twig_Node_Expression_Array\">Twig_Node_Expression_Array<\/abbr> $params, <abbr title=\"Twig_Node_Expression_Constant\">Twig_Node_Expression_Constant<\/abbr> $lang, $lineno, $tag = null)","",2],["PluralizeNode::compile","I18n\\Twig\\PluralizeNode","I18n\/Twig\/PluralizeNode.html#method_compile","(<abbr title=\"Twig_Compiler\">Twig_Compiler<\/abbr> $compiler)","",2],["PluralizeTokenParser::parse","I18n\\Twig\\PluralizeTokenParser","I18n\/Twig\/PluralizeTokenParser.html#method_parse","(<abbr title=\"Twig_Token\">Twig_Token<\/abbr> $token)","",2],["PluralizeTokenParser::getTag","I18n\\Twig\\PluralizeTokenParser","I18n\/Twig\/PluralizeTokenParser.html#method_getTag","()","",2],["PluralizeTokenParser::isEndTag","I18n\\Twig\\PluralizeTokenParser","I18n\/Twig\/PluralizeTokenParser.html#method_isEndTag","(<abbr title=\"Twig_Token\">Twig_Token<\/abbr> $token)","",2],["TranslateNode::__construct","I18n\\Twig\\TranslateNode","I18n\/Twig\/TranslateNode.html#method___construct","(<abbr title=\"Twig_NodeInterface\">Twig_NodeInterface<\/abbr> $body, <abbr title=\"Twig_Node_Expression_Array\">Twig_Node_Expression_Array<\/abbr> $params, <abbr title=\"Twig_Node_Expression_Constant\">Twig_Node_Expression_Constant<\/abbr> $lang, $lineno, $tag = null)","",2],["TranslateNode::compile","I18n\\Twig\\TranslateNode","I18n\/Twig\/TranslateNode.html#method_compile","(<abbr title=\"Twig_Compiler\">Twig_Compiler<\/abbr> $compiler)","",2],["TranslateTokenParser::parse","I18n\\Twig\\TranslateTokenParser","I18n\/Twig\/TranslateTokenParser.html#method_parse","(<abbr title=\"Twig_Token\">Twig_Token<\/abbr> $token)","",2],["TranslateTokenParser::getTag","I18n\\Twig\\TranslateTokenParser","I18n\/Twig\/TranslateTokenParser.html#method_getTag","()","",2],["TranslateTokenParser::isEndTag","I18n\\Twig\\TranslateTokenParser","I18n\/Twig\/TranslateTokenParser.html#method_isEndTag","(<abbr title=\"Twig_Token\">Twig_Token<\/abbr> $token)","",2],["AbstractReporterAdapter::newLine","Library\\AbstractReporterAdapter","Library\/AbstractReporterAdapter.html#method_newLine","()","Adapter new line sign",2],["AbstractReporterAdapter::tab","Library\\AbstractReporterAdapter","Library\/AbstractReporterAdapter.html#method_tab","()","Adapter new tabulation",2],["AbstractReporterAdapter::renderTag","Library\\AbstractReporterAdapter","Library\/AbstractReporterAdapter.html#method_renderTag","(string $content, string $tag_type = &#039;default&#039;)","Render a content with a specific tag mask",2],["CodeParser::__construct","Library\\CodeParser","Library\/CodeParser.html#method___construct","(string $object_name = null, int $object_type = self::PARSE_CLASS)","Construct a code parser object",2],["CodeParser::set_objectName","Library\\CodeParser","Library\/CodeParser.html#method_set_objectName","($object_name = null)","",2],["CodeParser::get_objectName","Library\\CodeParser","Library\/CodeParser.html#method_get_objectName","()","",2],["CodeParser::set_objectType","Library\\CodeParser","Library\/CodeParser.html#method_set_objectType","($object_type = null)","",2],["CodeParser::get_objectType","Library\\CodeParser","Library\/CodeParser.html#method_get_objectType","()","",2],["CodeParser::get_shortDescription","Library\\CodeParser","Library\/CodeParser.html#method_get_shortDescription","($object_name = null, $object_type = null)","",2],["CodeParser::get_longDescription","Library\\CodeParser","Library\/CodeParser.html#method_get_longDescription","($object_name = null, $object_type = null)","",2],["Command::addCache","Library\\Command","Library\/Command.html#method_addCache","($command, $result, $error, $status, $cwd = null, $env = null, $options = null)","",2],["Command::isCached","Library\\Command","Library\/Command.html#method_isCached","($command, $cwd = null)","",2],["Command::getCached","Library\\Command","Library\/Command.html#method_getCached","($command, $cwd = null)","",2],["Command::getCache","Library\\Command","Library\/Command.html#method_getCache","()","",2],["Command::run","Library\\Command","Library\/Command.html#method_run","(string $command, string $path = null, bool $force = false)","Run a command on a Linux\/UNIX system reading it from",2],["Command::runCommand","Library\\Command","Library\/Command.html#method_runCommand","(string $command, string $path = null)","Run a command on a Linux\/UNIX system",2],["Command::getCommandPath","Library\\Command","Library\/Command.html#method_getCommandPath","(string $cmd)","Get the system path of a command",2],["AbstractCommandLineController::__construct","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method___construct","(array $options = array())","",2],["AbstractCommandLineController::__toString","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method___toString","()","Magic distribution when printing object",2],["AbstractCommandLineController::distribute","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_distribute","()","Distribution of the work",2],["AbstractCommandLineController::setDebug","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setDebug","(bool $dbg = true)","",2],["AbstractCommandLineController::setVerbose","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setVerbose","(bool $vbr = true)","",2],["AbstractCommandLineController::setForce","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setForce","(bool $frc = true)","",2],["AbstractCommandLineController::setInteractive","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setInteractive","(bool $frc = true)","",2],["AbstractCommandLineController::setQuiet","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setQuiet","()","",2],["AbstractCommandLineController::addDoneMethod","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_addDoneMethod","(string $_cls_meth)","",2],["AbstractCommandLineController::getDoneMethods","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getDoneMethods","()","",2],["AbstractCommandLineController::setScript","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setScript","(string $script_name)","Set the current command line script called",2],["AbstractCommandLineController::getScript","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getScript","()","Get the current command line script called",2],["AbstractCommandLineController::setParameters","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_setParameters","(array $params)","Set the command line parameters",2],["AbstractCommandLineController::getParameters","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getParameters","()","Get the parameters collection",2],["AbstractCommandLineController::runHelpCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runHelpCommand","($opt = null)","List of all options and features of the command line",2],["AbstractCommandLineController::runVerboseCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runVerboseCommand","()","Run the command line in verbose mode,",2],["AbstractCommandLineController::runQuietCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runQuietCommand","()","Run the command line in quiet mode, trying",2],["AbstractCommandLineController::runDebugCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runDebugCommand","()","Run the command line in debug mode, writing",2],["AbstractCommandLineController::runForceCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runForceCommand","()","Run the command line in forced mode ;",2],["AbstractCommandLineController::runInteractiveCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runInteractiveCommand","()","Run the command line in interactive mode",2],["AbstractCommandLineController::runVersionCommand","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runVersionCommand","()","Get versions of system environment",2],["AbstractCommandLineController::write","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_write","(null $str = null, bool $new_line = true)","Format and write a string to STDOUT",2],["AbstractCommandLineController::error","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_error","(null $str = null, int $status = 1, bool $new_line = true)","Format and write an error message to STDOUT (or STDERR)",2],["AbstractCommandLineController::parseAndWrite","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_parseAndWrite","(string $str, null $type = null, bool $spaced = false)","Parse, format and write a message to STDOUT",2],["AbstractCommandLineController::writeError","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeError","(string $str)","",2],["AbstractCommandLineController::writeThinError","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeThinError","(string $str)","",2],["AbstractCommandLineController::writeInfo","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeInfo","(string $str)","",2],["AbstractCommandLineController::writeComment","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeComment","(string $str)","",2],["AbstractCommandLineController::writeHighlight","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeHighlight","(string $str)","",2],["AbstractCommandLineController::writeBreak","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeBreak","()","",2],["AbstractCommandLineController::writeStop","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeStop","()","",2],["AbstractCommandLineController::verboseWrite","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_verboseWrite","(null $str = null, bool $new_line = true)","Write a string only in verbose mode",2],["AbstractCommandLineController::debugWrite","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_debugWrite","(null $str = null, bool $new_line = true)","Write a string only in debug mode",2],["AbstractCommandLineController::prompt","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_prompt","(string|null $str = null, mixed|null $default = null)","Prompt user input",2],["AbstractCommandLineController::getPrompt","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getPrompt","()","Get last user input",2],["AbstractCommandLineController::writeIntro","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeIntro","()","",2],["AbstractCommandLineController::getVersionString","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getVersionString","()","",2],["AbstractCommandLineController::writeNothingToDo","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_writeNothingToDo","()","",2],["AbstractCommandLineController::runArgumentHelp","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_runArgumentHelp","($arg = null)","",2],["AbstractCommandLineController::usage","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_usage","($opt = null)","",2],["AbstractCommandLineController::getopt","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getopt","()","",2],["AbstractCommandLineController::getOptionMethod","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getOptionMethod","($arg = null)","",2],["AbstractCommandLineController::getOptionDescription","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getOptionDescription","($arg = null)","",2],["AbstractCommandLineController::getOptionHelp","Library\\CommandLine\\AbstractCommandLineController","Library\/CommandLine\/AbstractCommandLineController.html#method_getOptionHelp","($arg = null)","",2],["CommandLineControllerInterface::addDoneMethod","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_addDoneMethod","(string $method_name)","Adding a method in the collection of done methods",2],["CommandLineControllerInterface::getDoneMethods","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_getDoneMethods","()","Get the collection of done methods",2],["CommandLineControllerInterface::setScript","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_setScript","(string $script_name)","Set the current command line script called",2],["CommandLineControllerInterface::getScript","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_getScript","()","Get the current command line script called",2],["CommandLineControllerInterface::setParameters","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_setParameters","(array $params)","Set the command line parameters",2],["CommandLineControllerInterface::getParameters","Library\\CommandLine\\CommandLineControllerInterface","Library\/CommandLine\/CommandLineControllerInterface.html#method_getParameters","()","Get the parameters collection",2],["Formater::__construct","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method___construct","(array $options = array())","",2],["Formater::__toString","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method___toString","()","",2],["Formater::__destruct","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method___destruct","()","",2],["Formater::addOption","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_addOption","($option_name, $option_value)","",2],["Formater::setAutospaced","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setAutospaced","($autospaced = null)","",2],["Formater::setForegroundColor","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setForegroundColor","($foreground = null)","",2],["Formater::setBackgroundColor","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setBackgroundColor","($background = null)","",2],["Formater::setTextOption","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setTextOption","($option = null)","",2],["Formater::setMessage","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_setMessage","($text = null, $foreground = null, $background = null, $option = null)","",2],["Formater::newLine","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_newLine","()","",2],["Formater::message","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_message","($text = null, $foreground = null, $background = null, $option = null)","",2],["Formater::prompt","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_prompt","($text = null, $default = null)","",2],["Formater::buildTaggedString","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_buildTaggedString","($str, $type = null)","",2],["Formater::parse","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_parse","($message)","",2],["Formater::spacedStr","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_spacedStr","($str, $type = null, $newLines = false)","",2],["Formater::format","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_format","($text = null, $foreground = null, $background = null, $option = null)","",2],["Formater::fetch","Library\\CommandLine\\Formater","Library\/CommandLine\/Formater.html#method_fetch","($display = true, $exit = false, $last_nl = true)","",2],["Helper::getopt","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getopt","(array $options)","",2],["Helper::getOptionMethod","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getOptionMethod","(array $options, $arg = null)","",2],["Helper::getOptionDescription","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getOptionDescription","($arg, $caller)","",2],["Helper::treatOptions","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_treatOptions","(array $options, $caller)","",2],["Helper::getOptionHelp","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getOptionHelp","($arg, $caller)","",2],["Helper::getHelpInfo","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_getHelpInfo","(array $options = array(), <a href=\"Library\/CommandLine\/Formater.html\"><abbr title=\"Library\\CommandLine\\Formater\">Formater<\/abbr><\/a> $formater, $caller)","",2],["Helper::formatHelpString","Library\\CommandLine\\Helper","Library\/CommandLine\/Helper.html#method_formatHelpString","($title = null, $contents = null, <a href=\"Library\/CommandLine\/Formater.html\"><abbr title=\"Library\\CommandLine\\Formater\">Formater<\/abbr><\/a> $formater)","",2],["Stream::__construct","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method___construct","()","The three streams are initiated",2],["Stream::__exit","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method___exit","(string $str = null)","Exit the script execution",2],["Stream::error","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_error","(string $str, int $status = 1, bool $new_line = true)","Write a message on `STDERR` and exit with an error",2],["Stream::write","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_write","(string $str, bool $new_line = true)","Write a message on `STDOUT`",2],["Stream::prompt","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_prompt","(string $str)","Write a message on `STDOUT` and wait for a user input",2],["Stream::getUserResponse","Library\\CommandLine\\Stream","Library\/CommandLine\/Stream.html#method_getUserResponse","()","Get last user input on `STDIN`",2],["CommandNotFoundException::__construct","Library\\CommandNotFoundException","Library\/CommandNotFoundException.html#method___construct","($command = &#039;&#039;, $code, <abbr title=\"Library\\Exception\">Exception<\/abbr> $previous = null)","",2],["AbstractConverter::convert","Library\\Converter\\AbstractConverter","Library\/Converter\/AbstractConverter.html#method_convert","(mixed $content)","Process a content conversion",2],["Array2INI::convert","Library\\Converter\\Array2INI","Library\/Converter\/Array2INI.html#method_convert","($data)","Process a content conversion",2],["Array2INI::doConvert","Library\\Converter\\Array2INI","Library\/Converter\/Array2INI.html#method_doConvert","(array $data, array $parent = array())","",2],["Html2Text::setAllowedTags","Library\\Converter\\Html2Text","Library\/Converter\/Html2Text.html#method_setAllowedTags","($tags)","",2],["Html2Text::setLineWidth","Library\\Converter\\Html2Text","Library\/Converter\/Html2Text.html#method_setLineWidth","($line_width)","",2],["Html2Text::convert","Library\\Converter\\Html2Text","Library\/Converter\/Html2Text.html#method_convert","(mixed $content, $allowed_tags = null, $line_width = null)","Process a content conversion",2],["Xml2Array::convert","Library\\Converter\\Xml2Array","Library\/Converter\/Xml2Array.html#method_convert","($xmlstr)","Process a content conversion",2],["Xml2Array::parse","Library\\Converter\\Xml2Array","Library\/Converter\/Xml2Array.html#method_parse","($node)","",2],["Crypt::__construct","Library\\Crypt","Library\/Crypt.html#method___construct","($salt = null)","",2],["Crypt::setSalt","Library\\Crypt","Library\/Crypt.html#method_setSalt","($salt)","",2],["Crypt::getSalt","Library\\Crypt","Library\/Crypt.html#method_getSalt","()","",2],["Crypt::encrypt","Library\\Crypt","Library\/Crypt.html#method_encrypt","($str = null, $key = null)","Encryption function      $Key=\"what\"     $MonTexte=\"Lorem",2],["Crypt::crypt","Library\\Crypt","Library\/Crypt.html#method_crypt","($str = null, $key = null)","Alias of self::encrypt",2],["Crypt::unencrypt","Library\\Crypt","Library\/Crypt.html#method_unencrypt","($str = null, $key = null)","Decryption function",2],["Crypt::uncrypt","Library\\Crypt","Library\/Crypt.html#method_uncrypt","($str = null, $key = null)","Alias of self::unencrypt",2],["Factory::init","Library\\Factory","Library\/Factory.html#method_init","(array $options = null)","Initialize the factory with an array of options",2],["Factory::__call","Library\\Factory","Library\/Factory.html#method___call","(string $name, array $arguments)","Magic method to allow usage of `$factory->propertyInCamelCase()`",2],["Factory::setOptions","Library\\Factory","Library\/Factory.html#method_setOptions","(array $options)","Set the object options like `property => value`",2],["Factory::build","Library\\Factory","Library\/Factory.html#method_build","(string $name, array $parameters = null, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Build the object instance following current factory",2],["Factory::findBuilder","Library\\Factory","Library\/Factory.html#method_findBuilder","(string $name, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Find the object builder class following current factory",2],["FactoryInterface::build","Library\\FactoryInterface","Library\/FactoryInterface.html#method_build","(string $name, array $parameters = null, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Build the object instance following current factory",2],["FactoryInterface::findBuilder","Library\\FactoryInterface","Library\/FactoryInterface.html#method_findBuilder","(string $name, int $flag = self::ERROR_ON_FAILURE, array $logs = array())","Find the object builder class following current factory",2],["FileRotator::__construct","Library\\FileRotator","Library\/FileRotator.html#method___construct","(string $file_path, int $flag = self::ROTATE_PERIODIC, array $user_options = array())","Creation of a new logger entry",2],["FileRotator::write","Library\\FileRotator","Library\/FileRotator.html#method_write","(string $content = &#039;&#039;)","Write a string in the file",2],["FileRotator::rotate","Library\\FileRotator","Library\/FileRotator.html#method_rotate","(bool $force = false)","Rotate file if so",2],["FileRotator::mustRotate","Library\\FileRotator","Library\/FileRotator.html#method_mustRotate","()","Is the current file needs to be rotated",2],["FileRotator::getFilename","Library\\FileRotator","Library\/FileRotator.html#method_getFilename","(string $file_name, int $rotation_index)","Get the name of a file to rotate",2],["Code::getPropertyName","Library\\Helper\\Code","Library\/Helper\/Code.html#method_getPropertyName","(string $name)","Transforms a property name from CamelCase to underscored",2],["Code::getPropertyMethodName","Library\\Helper\\Code","Library\/Helper\/Code.html#method_getPropertyMethodName","(string $name)","Transform a property name from underscored to CamelCase",2],["Code::impelementsInterface","Library\\Helper\\Code","Library\/Helper\/Code.html#method_impelementsInterface","(string|object $class_name, string $interface_name)","Check if a class implements a certain interface",2],["Code::extendsClass","Library\\Helper\\Code","Library\/Helper\/Code.html#method_extendsClass","(string|object $class_name, string $mother_name)","Check if a class extends a certain class",2],["Code::isClassInstance","Library\\Helper\\Code","Library\/Helper\/Code.html#method_isClassInstance","(object $object, string $class_name)","Check if a an object is an instance of a class",2],["Code::namespaceExists","Library\\Helper\\Code","Library\/Helper\/Code.html#method_namespaceExists","(string $namespace)","Test if a namespace can be found in declared classes",2],["Code::fetchArguments","Library\\Helper\\Code","Library\/Helper\/Code.html#method_fetchArguments","(string $method_name = null, mixed $arguments = null, string $class_name = null, array $logs = array())","Launch a function or class's method fetching it arguments",2],["Code::organizeArguments","Library\\Helper\\Code","Library\/Helper\/Code.html#method_organizeArguments","(string $method_name = null, mixed $arguments = null, string $class_name = null, array $logs = array())","Organize an array of arguments to pass to a function",2],["ConditionalComment::buildCondition","Library\\Helper\\ConditionalComment","Library\/Helper\/ConditionalComment.html#method_buildCondition","($content, $condition = &#039;if IE&#039;, $operator = &#039;OR&#039;, $global = false)","Build an HTML condition string for Internet Explorer",2],["ConditionalComment::writeCondition","Library\\Helper\\ConditionalComment","Library\/Helper\/ConditionalComment.html#method_writeCondition","(string $content, string $condition = null, bool $global = false)","Write an HTML condition for Internet Explorer around",2],["ConditionalComment::parseSingleCondition","Library\\Helper\\ConditionalComment","Library\/Helper\/ConditionalComment.html#method_parseSingleCondition","(string $condition)","Parse a single condition item replacing shortcuts",2],["Directory::slashDirname","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_slashDirname","(string $dirname = null)","Get a dirname with one and only trailing slash",2],["Directory::isGitClone","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_isGitClone","(string $path = null)","Test if a path seems to be a git clone",2],["Directory::isDotPath","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_isDotPath","(string $path = null)","Test if a filename seems to have a dot as first character",2],["Directory::ensureExists","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_ensureExists","(string $path, int $mode = self::DEFAULT_UNIX_CHMOD_DIRECTORIES, bool $recursive = true)","Build a directory with its whole hierarchy if necessary",2],["Directory::create","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_create","(string $path, int $mode = self::DEFAULT_UNIX_CHMOD_DIRECTORIES, bool $recursive = true)","Create a directory if necessary",2],["Directory::remove","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_remove","(string $path, array $logs = array())","Remove a directory with its whole contents",2],["Directory::purge","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_purge","(string $path, array $logs = array())","Remove a directory contents but not the directory itself",2],["Directory::chmod","Library\\Helper\\Directory","Library\/Helper\/Directory.html#method_chmod","(string $path, int $mode = self::DEFAULT_UNIX_CHMOD_DIRECTORIES, bool $recursive = true, int $file_mode = self::DEFAULT_UNIX_CHMOD_FILES, array $logs = array())","Change rights on a directory",2],["File::getUniqFilename","Library\\Helper\\File","Library\/Helper\/File.html#method_getUniqFilename","(string $filename = &#039;&#039;, string $dir = null, boolean $force_file = true, string $extension = &#039;txt&#039;)","Returns a filename or directory that does not exist",2],["File::formatFilename","Library\\Helper\\File","Library\/Helper\/File.html#method_formatFilename","(string $filename = &#039;&#039;, boolean $lowercase = false, string $delimiter = &#039;-&#039;)","Formatting file names",2],["File::getExtension","Library\\Helper\\File","Library\/Helper\/File.html#method_getExtension","(string $file_name = &#039;&#039;, bool $dot = false)","Returns the extension of a file name",2],["File::getHumanReadableFilename","Library\\Helper\\File","Library\/Helper\/File.html#method_getHumanReadableFilename","(string $file_name = &#039;&#039;)","Render a human readable string from a file name",2],["File::getTransformedFilesize","Library\\Helper\\File","Library\/Helper\/File.html#method_getTransformedFilesize","(float $size, int $round = 3, string $dec_delimiter = &#039;,&#039;)","Returns a formatted file size in bytes or derived unit",2],["File::touch","Library\\Helper\\File","Library\/Helper\/File.html#method_touch","(string $file_path, array $logs = array())","Create an empty file or touch an existing file",2],["File::remove","Library\\Helper\\File","Library\/Helper\/File.html#method_remove","(string $file_path, array $logs = array())","Remove a file if it exists",2],["File::copy","Library\\Helper\\File","Library\/Helper\/File.html#method_copy","(string $file_path, string $target_path, bool $force = false, array $logs = array())","Copy file `$file_path` if it exists to `$target_path`",2],["File::write","Library\\Helper\\File","Library\/Helper\/File.html#method_write","(string $file_path, string $content, string $type = &#039;a&#039;, bool $force = false, array $logs = array())","Write a content in a file",2],["Filesystem::resolveRelatedPath","Library\\Helper\\Filesystem","Library\/Helper\/Filesystem.html#method_resolveRelatedPath","(string $from, string $to)","Returns a relative path between two filesystem realpaths",2],["Filesystem::getOctal","Library\\Helper\\Filesystem","Library\/Helper\/Filesystem.html#method_getOctal","(int $int)","Get safely the octal form of `$int` if necessary",2],["Html::hasId","Library\\Helper\\Html","Library\/Helper\/Html.html#method_hasId","(string $reference)","Verify if a reference is already defined in the DOM",2],["Html::getId","Library\\Helper\\Html","Library\/Helper\/Html.html#method_getId","(string $reference = null, string|bool $base_id = null)","Get a DOM unique ID",2],["Html::getNewId","Library\\Helper\\Html","Library\/Helper\/Html.html#method_getNewId","(string $reference = null, string|bool $base_id = null)","Create and get a new DOM unique ID",2],["Html::setHtmlTagClosure","Library\\Helper\\Html","Library\/Helper\/Html.html#method_setHtmlTagClosure","(string $closure)","Set the HTML tags closure (` \/>` by default)",2],["Html::writeHtmlTag","Library\\Helper\\Html","Library\/Helper\/Html.html#method_writeHtmlTag","(string $tag_name, string $content = &#039;&#039;, array $attrs = array(), bool $intag_close = false)","Build an HTML string for a specific tag with attributes",2],["Html::parseAttributes","Library\\Helper\\Html","Library\/Helper\/Html.html#method_parseAttributes","(array $attrs = array())","Build an attributes HTML string from an array like",2],["Html::javascriptProtect","Library\\Helper\\Html","Library\/Helper\/Html.html#method_javascriptProtect","(string $str = &#039;&#039;, bool $protect_quotes = false)","Build an HTML string to use in javascripts attributes",2],["Number::isOdd","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isOdd","(int $val)","Test if an integer is an \"odd number\"",2],["Number::isEven","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isEven","(int $val)","Test if an integer is an \"even number\"",2],["Number::isPrime","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isPrime","(int $val)","Test if an integer is a \"prime number\"",2],["Number::isPrimordial","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isPrimordial","(int $val)","Test if an integer is a \"primordial number\"",2],["Number::getFibonacciItem","Library\\Helper\\Number","Library\/Helper\/Number.html#method_getFibonacciItem","(int $val)","Get the `$val` element of the Fibonacci suite",2],["Number::getLuhnKey","Library\\Helper\\Number","Library\/Helper\/Number.html#method_getLuhnKey","(int $val)","Luhn formula",2],["Number::isLuhn","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isLuhn","(int $val)","Check id last number in a suite is a Luhn key",2],["Number::getSumOfDigits","Library\\Helper\\Number","Library\/Helper\/Number.html#method_getSumOfDigits","(<abbr title=\"Library\\Helper\\$a\">$a<\/abbr> $a)","Calculate the sum of the digits of a number (its absolute",2],["Number::isSelfDescribing","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isSelfDescribing","(<abbr title=\"Library\\Helper\\$a\">$a<\/abbr> $a)","Test if a number is \"self-describing\":",2],["Number::isJollyJumperSeries","Library\\Helper\\Number","Library\/Helper\/Number.html#method_isJollyJumperSeries","(array $a)","Test if a series of numbers is a \"Jolly Jumper\":",2],["Number::getRomanNumeralsNotation","Library\\Helper\\Number","Library\/Helper\/Number.html#method_getRomanNumeralsNotation","(<abbr title=\"Library\\Helper\\$a\">$a<\/abbr> $a)","Get the roman notation of a number inferior to 5000",2],["Regex::getPattern","Library\\Helper\\Regex","Library\/Helper\/Regex.html#method_getPattern","(string $string = &#039;&#039;, string $delimiter = &#039;#&#039;, string $options = &#039;i&#039;, bool $strict = false)","Get a read-to-use regular expression from a string",2],["Request::isCli","Library\\Helper\\Request","Library\/Helper\/Request.html#method_isCli","()","Check if the request is sent by command line interface",2],["Request::isAjax","Library\\Helper\\Request","Library\/Helper\/Request.html#method_isAjax","()","Check if the request is sent via AJAX",2],["Request::getUserIp","Library\\Helper\\Request","Library\/Helper\/Request.html#method_getUserIp","()","Get the IP address of request device",2],["Text::cut","Library\\Helper\\Text","Library\/Helper\/Text.html#method_cut","(string $string = &#039;&#039;, int $length = 120, string $end_str = &#039; ...&#039;)","Truncate a string at a maximum length, adding it a",2],["Text::stripSpecialChars","Library\\Helper\\Text","Library\/Helper\/Text.html#method_stripSpecialChars","(string $string = &#039;&#039;, string $authorized = &#039;&#039;)","Strip all special characters in a string",2],["Text::slugify","Library\\Helper\\Text","Library\/Helper\/Text.html#method_slugify","(string $string = &#039;&#039;)","Get a slugified string",2],["Text::getHumanReadable","Library\\Helper\\Text","Library\/Helper\/Text.html#method_getHumanReadable","(string $string = &#039;&#039;)","Transform a string to a human readable one",2],["Text::toCamelCase","Library\\Helper\\Text","Library\/Helper\/Text.html#method_toCamelCase","(string $name = &#039;&#039;, string $replace = &#039;_&#039;, bool $capitalize_first_char = true)","Transform a name in CamelCase",2],["Text::fromCamelCase","Library\\Helper\\Text","Library\/Helper\/Text.html#method_fromCamelCase","(string $name = &#039;&#039;, string $replace = &#039;_&#039;, bool $lowerize_first_char = true)","Transform a name from CamelCase to other",2],["Url::getRequestUrl","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getRequestUrl","(bool $entities = false, bool $base = false, bool $no_file = false, bool $no_rewrite = false)","Get the current browser\/server URL",2],["Url::getHttpProtocol","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getHttpProtocol","()","Get the current 'http' or 'https' protocol",2],["Url::parse","Library\\Helper\\Url","Library\/Helper\/Url.html#method_parse","(string $url)","Parse an URL and returns its composition as an array,",2],["Url::resolvePath","Library\\Helper\\Url","Library\/Helper\/Url.html#method_resolvePath","(string $url, boolean $realpath = false)","Returns the URL with paths cleaned (`.\/` and `..\/`",2],["Url::resolveHttp","Library\\Helper\\Url","Library\/Helper\/Url.html#method_resolveHttp","(string $url)","Returns an URL with leading 'http:\/\/' if it was absent",2],["Url::getAbsoluteUrl","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getAbsoluteUrl","(string $url)","Returns if possible an absolute URL in the current",2],["Url::url","Library\\Helper\\Url","Library\/Helper\/Url.html#method_url","(<abbr title=\"Library\\Helper\\string\/array\/null\">string\/array\/null<\/abbr> $param = null, <abbr title=\"Library\\Helper\\string\/null\">string\/null<\/abbr> $value = null, <abbr title=\"Library\\Helper\\string\/null\">string\/null<\/abbr> $url = null)","Global URL builder",2],["Url::getParameter","Library\\Helper\\Url","Library\/Helper\/Url.html#method_getParameter","(<abbr title=\"Library\\Helper\\string\/bool\">string\/bool<\/abbr> $param = false, <abbr title=\"Library\\Helper\\string\/null\">string\/null<\/abbr> $url = false)","Get the value of an URL parameter",2],["Url::setParameter","Library\\Helper\\Url","Library\/Helper\/Url.html#method_setParameter","(<abbr title=\"Library\\Helper\\string\/bool\">string\/bool<\/abbr> $var = &#039;&#039;, <abbr title=\"Library\\Helper\\string\/false\">string\/false<\/abbr> $val = false, <abbr title=\"Library\\Helper\\string\/false\">string\/false<\/abbr> $url = false, bool $rebuild = true)","Set the value of an URL parameter",2],["Url::build","Library\\Helper\\Url","Library\/Helper\/Url.html#method_build","(array $url_components = null, <abbr title=\"Library\\Helper\\string\/array\/boolean\">string\/array\/boolean<\/abbr> $not_toput = null)","Rebuild a full URL string from an array of elements",2],["Url::isUrl","Library\\Helper\\Url","Library\/Helper\/Url.html#method_isUrl","(string $url = null, array $protocols = array(&#039;http&#039;, &#039;https&#039;, &#039;ftp&#039;), <abbr title=\"Library\\Helper\\bool\/string\">bool\/string<\/abbr> $localhost = false)","Validate an URL",2],["Url::isEmail","Library\\Helper\\Url","Library\/Helper\/Url.html#method_isEmail","(string $email = null)","Validate an email address",2],["ContentType::createFromContent","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_createFromContent","(string $content)","Create a new ContentType object extracting the type",2],["ContentType::guessContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_guessContentType","(string $content)","",2],["ContentType::__construct","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method___construct","(string $content_type)","Constructor : defines the current URL and gets the",2],["ContentType::__toString","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method___toString","()","",2],["ContentType::setContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_setContentType","(string $content_type)","",2],["ContentType::getContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_getContentType","()","",2],["ContentType::setContentTypeObject","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_setContentTypeObject","(<a href=\"Library\/HttpFundamental\/ContentTypeInterface.html\"><abbr title=\"Library\\HttpFundamental\\ContentTypeInterface\">ContentTypeInterface<\/abbr><\/a> $content_type_object)","",2],["ContentType::getContentTypeObject","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_getContentTypeObject","()","",2],["ContentType::prepareContentType","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_prepareContentType","(string $content_type)","",2],["ContentType::prepareResponse","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["ContentType::parseContent","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_parseContent","(string $content)","Parse an input content",2],["ContentType::prepareContent","Library\\HttpFundamental\\ContentType","Library\/HttpFundamental\/ContentType.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["ContentTypeInterface::prepareResponse","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["ContentTypeInterface::parseContent","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_parseContent","(string $content)","Parse an input content",2],["ContentTypeInterface::prepareContent","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_prepareContent","(string|array $content)","Prepare a content for output",2],["ContentTypeInterface::getContentType","Library\\HttpFundamental\\ContentTypeInterface","Library\/HttpFundamental\/ContentTypeInterface.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Html::prepareResponse","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Html::parseContent","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_parseContent","(string $content)","Parse an input content",2],["Html::prepareContent","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Html::getContentType","Library\\HttpFundamental\\ContentType\\Html","Library\/HttpFundamental\/ContentType\/Html.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Json::prepareResponse","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Json::parseContent","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_parseContent","(string $content)","Parse an input content",2],["Json::prepareContent","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Json::getContentType","Library\\HttpFundamental\\ContentType\\Json","Library\/HttpFundamental\/ContentType\/Json.html#method_getContentType","()","Get the \"content-Type\" header value",2],["PlainText::prepareResponse","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["PlainText::parseContent","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_parseContent","(string $content)","Parse an input content",2],["PlainText::prepareContent","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["PlainText::getContentType","Library\\HttpFundamental\\ContentType\\PlainText","Library\/HttpFundamental\/ContentType\/PlainText.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Xml::prepareResponse","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_prepareResponse","(<a href=\"Library\/HttpFundamental\/Response.html\"><abbr title=\"Library\\HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Xml::parseContent","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_parseContent","(string $content)","Parse an input content",2],["Xml::prepareContent","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Xml::getContentType","Library\\HttpFundamental\\ContentType\\Xml","Library\/HttpFundamental\/ContentType\/Xml.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Cookie::__construct","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method___construct","(string $cookie_name = null, string|array $cookie_value = null, int $flag = self::FLATNESS_ARRAY)","",2],["Cookie::setFlag","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setFlag","(int $flag)","",2],["Cookie::getFlag","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getFlag","()","",2],["Cookie::setName","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setName","(string $name)","",2],["Cookie::getName","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getName","()","",2],["Cookie::setValue","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setValue","(string $value)","",2],["Cookie::getValue","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getValue","()","",2],["Cookie::getSafeValue","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeValue","()","",2],["Cookie::setExpire","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setExpire","(int $expire)","",2],["Cookie::getExpire","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getExpire","()","",2],["Cookie::getSafeExpire","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeExpire","()","",2],["Cookie::setPath","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setPath","(string $path)","",2],["Cookie::getPath","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getPath","()","",2],["Cookie::getSafePath","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafePath","()","",2],["Cookie::setDomain","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setDomain","(string $domain)","",2],["Cookie::getDomain","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getDomain","()","",2],["Cookie::getSafeDomain","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeDomain","()","",2],["Cookie::setSecure","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setSecure","(string $secure)","",2],["Cookie::getSecure","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSecure","()","",2],["Cookie::getSafeSecure","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeSecure","()","",2],["Cookie::setHttponly","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setHttponly","(string $https)","",2],["Cookie::getHttponly","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getHttponly","()","",2],["Cookie::getSafeHttponly","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getSafeHttponly","()","",2],["Cookie::sendAsRaw","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_sendAsRaw","()","",2],["Cookie::sendAsEncoded","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_sendAsEncoded","()","",2],["Cookie::setCookieFuncArguments","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_setCookieFuncArguments","(array $args)","",2],["Cookie::getCookieFuncArguments","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getCookieFuncArguments","(bool $organize = true)","",2],["Cookie::getCookieFuncArgument","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_getCookieFuncArgument","(string $var)","",2],["Cookie::addCookieFuncArgument","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_addCookieFuncArgument","(string $var, mixed $val)","",2],["Cookie::clearCookieFuncArgument","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_clearCookieFuncArgument","(string $var)","",2],["Cookie::exists","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_exists","(string $cookie_name = null)","Test if a cookie exists",2],["Cookie::read","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_read","(string $cookie_name = null)","Get a cookie value",2],["Cookie::send","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_send","(string $cookie_name = null, string|array $cookie_value = null)","Set a cookie value",2],["Cookie::addInCookie","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_addInCookie","(string $variable_name, string $variable_value, string $cookie_name = null)","Add a variable value in a cookie",2],["Cookie::clear","Library\\HttpFundamental\\Cookie","Library\/HttpFundamental\/Cookie.html#method_clear","(string $cookie_name = null)","Clear a cookie",2],["Request::create","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_create","(string $url = null, int $flag = self::NO_REWRITE, string $protocol = &#039;http&#039;, string $method = &#039;get&#039;, array $headers = null, array $arguments = null, array $data = null, array $session = null, array $files = null, array $cookies = null)","Static constructor : defines the current URL and gets",2],["Request::__construct","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method___construct","(string $url = null, int $flag = self::NO_REWRITE)","Constructor : defines the request URL and the object",2],["Request::guessFromCurrent","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_guessFromCurrent","()","Populate the request object with current HTTP request",2],["Request::setFlag","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setFlag","(int $flag)","",2],["Request::getFlag","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getFlag","()","",2],["Request::setUrl","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setUrl","(string $url)","",2],["Request::getUrl","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getUrl","()","",2],["Request::setProtocol","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setProtocol","(string $protocol)","",2],["Request::getProtocol","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getProtocol","()","",2],["Request::setMethod","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setMethod","(string $method)","",2],["Request::getMethod","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getMethod","()","",2],["Request::setHeaders","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setHeaders","(array $headers = null)","",2],["Request::getHeaders","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getHeaders","()","",2],["Request::getHeader","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getHeader","(string $name)","",2],["Request::setArguments","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setArguments","(string|array $arguments = null)","",2],["Request::getArguments","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getArguments","()","",2],["Request::getArgument","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getArgument","(string $param = null, mixed $default = false, bool $clean = true, int $clean_flags = ENT_QUOTES, string $clean_encoding = &#039;UTF-8&#039;)","",2],["Request::setData","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setData","(array|string $data = null)","",2],["Request::getData","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getData","(string $param = null, mixed $default = false, bool $clean = true, int $clean_flags = ENT_QUOTES, string $clean_encoding = &#039;UTF-8&#039;)","",2],["Request::setFiles","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setFiles","(array $files = null)","",2],["Request::getFiles","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getFiles","()","",2],["Request::getFile","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getFile","(string $param, string $index = null)","",2],["Request::setSession","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setSession","(array $session = null)","",2],["Request::getSession","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getSession","(string $param = null)","",2],["Request::setCookies","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setCookies","(array $cookies = null)","",2],["Request::getCookies","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getCookies","()","",2],["Request::getCookie","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getCookie","(string $param)","",2],["Request::setAuthentication","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthentication","(array $authentication = null)","",2],["Request::setAuthenticationType","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthenticationType","(string $type)","",2],["Request::setAuthenticationUser","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthenticationUser","(string $user)","",2],["Request::setAuthenticationPassword","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_setAuthenticationPassword","(string $pw)","",2],["Request::getAuthentication","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getAuthentication","(string $param = null)","",2],["Request::buildUrl","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_buildUrl","()","",2],["Request::isAjax","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isAjax","()","",2],["Request::isCli","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isCli","()","",2],["Request::isGet","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isGet","()","",2],["Request::isPost","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isPost","()","",2],["Request::isPut","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_isPut","()","",2],["Request::getGet","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getGet","(string $varname, mixed $default = null)","",2],["Request::getPost","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getPost","(string $varname, mixed $default = null)","",2],["Request::getGetOrPost","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getGetOrPost","(string $varname, mixed $default = null)","",2],["Request::getPostOrGet","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getPostOrGet","(string $varname, mixed $default = null)","",2],["Request::cleanArgument","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_cleanArgument","(string $arg_value, int $flags = ENT_QUOTES, string $encoding = &#039;UTF-8&#039;)","Clean the value taken from request arguments or data",2],["Request::getEnvironment","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getEnvironment","(string $varname)","",2],["Request::getClientIp","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getClientIp","()","",2],["Request::getallheaders","Library\\HttpFundamental\\Request","Library\/HttpFundamental\/Request.html#method_getallheaders","()","Emulation of internal `getallheaders()` function as",2],["Response::__construct","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method___construct","($content = null, $charset = null)","Constructor : defines the current URL and gets the",2],["Response::__toString","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method___toString","()","",2],["Response::setProtocol","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setProtocol","($value)","",2],["Response::getProtocol","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getProtocol","()","",2],["Response::setHeaders","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setHeaders","(array $headers)","",2],["Response::addHeader","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_addHeader","($header, $value)","",2],["Response::getHeader","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getHeader","($header, $default = null)","",2],["Response::getHeaders","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getHeaders","()","",2],["Response::setStatus","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setStatus","($flag)","",2],["Response::getStatus","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getStatus","()","",2],["Response::setCharset","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setCharset","($string)","",2],["Response::getCharset","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getCharset","()","",2],["Response::addContent","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_addContent","($name, $content)","",2],["Response::setContents","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setContents","(array $contents)","",2],["Response::getContent","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContent","($name, $default = null)","",2],["Response::getContents","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContents","()","",2],["Response::getContentsAsString","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContentsAsString","()","",2],["Response::setContentType","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_setContentType","(string $type)","",2],["Response::getContentType","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_getContentType","()","",2],["Response::guessContentType","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_guessContentType","()","",2],["Response::renderHeaders","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_renderHeaders","()","",2],["Response::header","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_header","(string $str)","Writes a header string if headers had not been sent",2],["Response::send","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_send","($return_string = false)","Send the response to the device",2],["Response::download","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_download","($file = null, $type = null, $file_name = null)","Force client to download a file",2],["Response::flush","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_flush","($file_content = null, $type = null)","Flush (display) a file content",2],["Response::redirect","Library\\HttpFundamental\\Response","Library\/HttpFundamental\/Response.html#method_redirect","($url, $permanent = false)","",2],["Logger::__construct","Library\\Logger","Library\/Logger.html#method___construct","(array $user_options = array())","Creation of a new logger entry",2],["Logger::log","Library\\Logger","Library\/Logger.html#method_log","(int $level, string $message, array $context = array(), string $logname = null)","Logs with an arbitrary level.",2],["Logger::__set","Library\\Logger","Library\/Logger.html#method___set","(string $var, mixed $val)","Allows to set a property or a configuration entry like",2],["Logger::__get","Library\\Logger","Library\/Logger.html#method___get","(string $var)","Allows to call a configuration entry like : $logger->config_name",2],["Logger::getOptions","Library\\Logger","Library\/Logger.html#method_getOptions","()","",2],["Logger::interpolate","Library\\Logger","Library\/Logger.html#method_interpolate","(string $message, array $context = array(), bool $silent = false)","Interpolates context values into the message placeholders.",2],["Logger::getUserIp","Library\\Logger","Library\/Logger.html#method_getUserIp","()","Get the user IP address",2],["Logger::writeArray","Library\\Logger","Library\/Logger.html#method_writeArray","(array $array)","Write an array on one line",2],["AbstractInvokable::__invoke","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___invoke","(string $name)","Magic getter when calling an object as a function",2],["AbstractInvokable::__call","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___call","(string $name, array $arguments)","Magic handler when calling a non-existing method on",2],["AbstractInvokable::__callStatic","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___callStatic","(string $name, array $arguments)","Magic handler when calling a non-eixsting method statically",2],["AbstractInvokable::__get","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___get","(string $name)","Magic getter",2],["AbstractInvokable::__set","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___set","(string $name, mixed $value)","Magic setter",2],["AbstractInvokable::__isset","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___isset","(string $name)","Magic checker",2],["AbstractInvokable::__unset","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method___unset","(string $name)","Magic unsetter",2],["AbstractInvokable::findPropertyName","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method_findPropertyName","(string $name)","Search a property name in the current object with one",2],["AbstractInvokable::findPropertyNameStatic","Library\\Object\\AbstractInvokable","Library\/Object\/AbstractInvokable.html#method_findPropertyNameStatic","(string $name, string|object $object)","Search a property name in the current object with one",2],["InvokableAccessException::__construct","Library\\Object\\InvokableAccessException","Library\/Object\/InvokableAccessException.html#method___construct","(string $property_name = &#039;&#039;, string $object_name = &#039;&#039;, int $code, <abbr title=\"Library\\Object\\Exception\">Exception<\/abbr> $previous = null)","Constructor: creation of the parent instance",2],["InvokableInterface::__call","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___call","(string $name, array $arguments)","Magic handler when calling a non-existing method on",2],["InvokableInterface::__callStatic","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___callStatic","(string $name, array $arguments)","Magic handler when calling a non-eixsting method statically",2],["InvokableInterface::__get","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___get","(string $name)","Magic getter",2],["InvokableInterface::__set","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___set","(string $name, mixed $value)","Magic setter",2],["InvokableInterface::__isset","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___isset","(string $name)","Magic checker",2],["InvokableInterface::__unset","Library\\Object\\InvokableInterface","Library\/Object\/InvokableInterface.html#method___unset","(string $name)","Magic unsetter",2],["RegistryInvokable::__construct","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___construct","(array $data = null, int $flag = self::PROTECTED_PROPERTIES)","Object constructor",2],["RegistryInvokable::setFlag","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_setFlag","(int $flag)","Set the object flag for registry properties visibility",2],["RegistryInvokable::getFlag","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_getFlag","()","Get the object flag for registry properties visibility",2],["RegistryInvokable::__call","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___call","(string $name, array $arguments)","Magic handler when calling a non-existing method on",2],["RegistryInvokable::__callStatic","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___callStatic","(string $name, array $arguments)","Avoiding magic static handler",2],["RegistryInvokable::__get","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___get","(string $name)","Magic getter",2],["RegistryInvokable::__set","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___set","(string $name, mixed $value)","Magic setter",2],["RegistryInvokable::__isset","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___isset","(string $name)","Magic checker",2],["RegistryInvokable::__unset","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method___unset","(string $name)","Magic unsetter",2],["RegistryInvokable::getData","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_getData","(string $name = null, mixed $default = null)","Global getter",2],["RegistryInvokable::setData","Library\\Object\\RegistryInvokable","Library\/Object\/RegistryInvokable.html#method_setData","($value, $arg2 = null)","Global setter",2],["Reporter::__construct","Library\\Reporter","Library\/Reporter.html#method___construct","(null|string $adapter_type = &#039;html&#039;, int $flag = self::OUTPUT_BY_LINE)","Construction of a new Reporter object",2],["Reporter::reset","Library\\Reporter","Library\/Reporter.html#method_reset","(bool $hard = false)","Reset all object properties to default or empty values",2],["Reporter::__toString","Library\\Reporter","Library\/Reporter.html#method___toString","()","Returns the object global output",2],["Reporter::setFlag","Library\\Reporter","Library\/Reporter.html#method_setFlag","(int $flag)","Set the reporter flag",2],["Reporter::getFlag","Library\\Reporter","Library\/Reporter.html#method_getFlag","()","Get the reporter flag",2],["Reporter::setAdapterType","Library\\Reporter","Library\/Reporter.html#method_setAdapterType","(string $type)","Set the adapter type to use",2],["Reporter::getAdapterType","Library\\Reporter","Library\/Reporter.html#method_getAdapterType","()","Get the current adapter name",2],["Reporter::setAdapter","Library\\Reporter","Library\/Reporter.html#method_setAdapter","(<a href=\"Library\/AbstractReporterAdapter.html\"><abbr title=\"Library\\AbstractReporterAdapter\">AbstractReporterAdapter<\/abbr><\/a> $adapter)","Set the adapter",2],["Reporter::getAdapter","Library\\Reporter","Library\/Reporter.html#method_getAdapter","()","Get the current adapter",2],["Reporter::setOutput","Library\\Reporter","Library\/Reporter.html#method_setOutput","(string $output)","Set some content",2],["Reporter::getOutput","Library\\Reporter","Library\/Reporter.html#method_getOutput","()","Get the processed content",2],["Reporter::render","Library\\Reporter","Library\/Reporter.html#method_render","(string $content, string $tag_type = &#039;default&#039;, string|array $args = null)","Render a content with a specific tag mask",2],["Reporter::write","Library\\Reporter","Library\/Reporter.html#method_write","(string $content, string $tag_type = &#039;default&#039;, string|array $args = null)","Display on screen a content with a specific tag mask",2],["Reporter::renderMulti","Library\\Reporter","Library\/Reporter.html#method_renderMulti","(string $content, string $tag_type = &#039;default&#039;, array $multi = array(), string|array $args = null, string $placeholder_mask = &#039;@%s@&#039;)","Render a content with a specific tag mask and some",2],["Html::renderTag","Library\\ReporterAdapter\\Html","Library\/ReporterAdapter\/Html.html#method_renderTag","(array|string $content, string $tag_type = &#039;default&#039;, array $args = array())","Render a content with a specific tag mask",2],["Router::__construct","Library\\Router","Library\/Router.html#method___construct","(string $route = null, array $routes_table = array(), array $arguments_table = array(), array $matchers_table = array())","Construction",2],["Router::getCollection","Library\\Router","Library\/Router.html#method_getCollection","(array $collection)","Get a collection object if it was not",2],["Router::setUrl","Library\\Router","Library\/Router.html#method_setUrl","(string $url)","Set the current URL",2],["Router::getUrl","Library\\Router","Library\/Router.html#method_getUrl","()","Get the current URL",2],["Router::setRoute","Library\\Router","Library\/Router.html#method_setRoute","(string $route)","Set the current route",2],["Router::getRoute","Library\\Router","Library\/Router.html#method_getRoute","()","Get the current route",2],["Router::setRouteParsed","Library\\Router","Library\/Router.html#method_setRouteParsed","(array $infos)","Set the current route parsed infos",2],["Router::getRouteParsed","Library\\Router","Library\/Router.html#method_getRouteParsed","()","Get the current route parsed infos",2],["Router::setRoutes","Library\\Router","Library\/Router.html#method_setRoutes","(<a href=\"Patterns\/Commons\/Collection.html\"><abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr><\/a> $collection)","Set the routes collection",2],["Router::getRoutes","Library\\Router","Library\/Router.html#method_getRoutes","()","Get the routes collection",2],["Router::setArgumentsMap","Library\\Router","Library\/Router.html#method_setArgumentsMap","(<a href=\"Patterns\/Commons\/Collection.html\"><abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr><\/a> $collection)","Set the arguments correspondances table like ( true",2],["Router::getArgumentsMap","Library\\Router","Library\/Router.html#method_getArgumentsMap","()","Get the arguments table",2],["Router::setMatchers","Library\\Router","Library\/Router.html#method_setMatchers","(<a href=\"Patterns\/Commons\/Collection.html\"><abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr><\/a> $collection)","Set a collection of masks to parse and match a route",2],["Router::getMatchers","Library\\Router","Library\/Router.html#method_getMatchers","()","Get the route matcher",2],["Router::routeExists","Library\\Router","Library\/Router.html#method_routeExists","(string $route)","Check if a route exists",2],["Router::generateUrl","Library\\Router","Library\/Router.html#method_generateUrl","(mixed $route_infos, string $base_uri = null, string $hash = null, string $separator = &#039;&amp;amp;&#039;)","Build a new route URL",2],["Router::matchUrl","Library\\Router","Library\/Router.html#method_matchUrl","(mixed $pathinfo)","Test if an URL has a corresponding route",2],["Router::distribute","Library\\Router","Library\/Router.html#method_distribute","()","Actually dispatch the current route",2],["Router::forward","Library\\Router","Library\/Router.html#method_forward","(mixed $pathinfo, string $hash = null)","Forward the application to a new route (no HTTP redirect)",2],["Router::redirect","Library\\Router","Library\/Router.html#method_redirect","(mixed $pathinfo, string $hash = null)","Make a redirection to a new route (HTTP redirect)",2],["Router::urlEncode","Library\\Router","Library\/Router.html#method_urlEncode","(string $str = null, bool $keep_mask = true)","Special 'urlencode' function to only encode strings",2],["FlashSession::__construct","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method___construct","()","Constructor",2],["FlashSession::read","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_read","()","Start the current session if so",2],["FlashSession::commit","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_commit","()","Save current session",2],["FlashSession::hasFlash","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_hasFlash","()","Test if current session has flash parameters",2],["FlashSession::getFlash","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_getFlash","(string $index)","Get a current session flash parameter",2],["FlashSession::setFlash","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_setFlash","(mixed $value, string $index = null)","Set a current session flash parameter",2],["FlashSession::allFlashes","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_allFlashes","()","Get current session flash parameters stack",2],["FlashSession::clearFlashes","Library\\Session\\FlashSession","Library\/Session\/FlashSession.html#method_clearFlashes","()","Delete current session flash parameters",2],["Session::__construct","Library\\Session\\Session","Library\/Session\/Session.html#method___construct","()","Constructor",2],["Session::__destruct","Library\\Session\\Session","Library\/Session\/Session.html#method___destruct","()","Automatically store new entries at object destruction",2],["Session::addSessionTable","Library\\Session\\Session","Library\/Session\/Session.html#method_addSessionTable","(string $index, mixed $value)","Add a session table entry",2],["Session::getSessionTable","Library\\Session\\Session","Library\/Session\/Session.html#method_getSessionTable","()","Get the full session table",2],["Session::getId","Library\\Session\\Session","Library\/Session\/Session.html#method_getId","()","Get current session ID",2],["Session::getName","Library\\Session\\Session","Library\/Session\/Session.html#method_getName","()","Get current session name",2],["Session::isOpened","Library\\Session\\Session","Library\/Session\/Session.html#method_isOpened","()","Test if the current session is already started",2],["Session::isLoaded","Library\\Session\\Session","Library\/Session\/Session.html#method_isLoaded","()","Test if the current session is already loaded",2],["Session::start","Library\\Session\\Session","Library\/Session\/Session.html#method_start","()","Start the current session and read it",2],["Session::open","Library\\Session\\Session","Library\/Session\/Session.html#method_open","()","Open the current session",2],["Session::close","Library\\Session\\Session","Library\/Session\/Session.html#method_close","()","Close the current session",2],["Session::read","Library\\Session\\Session","Library\/Session\/Session.html#method_read","()","Read the current session contents",2],["Session::commit","Library\\Session\\Session","Library\/Session\/Session.html#method_commit","()","Save current session",2],["Session::clear","Library\\Session\\Session","Library\/Session\/Session.html#method_clear","()","Destroy current session",2],["Session::regenerateId","Library\\Session\\Session","Library\/Session\/Session.html#method_regenerateId","()","Regenrate current session ID",2],["Session::getAttributes","Library\\Session\\Session","Library\/Session\/Session.html#method_getAttributes","()","Get all current session values",2],["Session::has","Library\\Session\\Session","Library\/Session\/Session.html#method_has","(string $param)","Test if the current session has a parameter",2],["Session::get","Library\\Session\\Session","Library\/Session\/Session.html#method_get","(string $param)","Get current session parameter",2],["Session::set","Library\\Session\\Session","Library\/Session\/Session.html#method_set","(string $param, mixed $value)","Set current session parameter",2],["Session::remove","Library\\Session\\Session","Library\/Session\/Session.html#method_remove","(string $param)","Delete a session parameter",2],["Session::getBackup","Library\\Session\\Session","Library\/Session\/Session.html#method_getBackup","(string $param)","Get an initial session value",2],["SessionInterface::start","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_start","()","Start the current session and load it",2],["SessionInterface::open","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_open","()","Open the current session",2],["SessionInterface::close","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_close","()","Close the current session",2],["SessionInterface::isOpened","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_isOpened","()","Test if the current session is already started",2],["SessionInterface::read","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_read","()","Read current session contents",2],["SessionInterface::isLoaded","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_isLoaded","()","Test if the current session is already loaded",2],["SessionInterface::commit","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_commit","()","Save current session contents",2],["SessionInterface::clear","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_clear","()","Destroy current session",2],["SessionInterface::regenerateId","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_regenerateId","()","Regenrate current session ID",2],["SessionInterface::getId","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_getId","()","Get current session ID",2],["SessionInterface::getName","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_getName","()","Get current session name",2],["SessionInterface::getAttributes","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_getAttributes","()","Get all current session values",2],["SessionInterface::has","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_has","(string $param)","Test if the current session has a parameter",2],["SessionInterface::get","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_get","(string $param)","Get current session parameter",2],["SessionInterface::set","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_set","(string $param, mixed $value)","Set current session parameter",2],["SessionInterface::remove","Library\\Session\\SessionInterface","Library\/Session\/SessionInterface.html#method_remove","(string $param)","Delete a session parameter",2],["Config::load","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_load","(string $class_name = null)","",2],["Config::loaded","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_loaded","()","Check if the configurator is loaded",2],["Config::setConfigurator","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_setConfigurator","(<a href=\"Library\/StaticConfiguration\/ConfiguratorInterface.html\"><abbr title=\"Library\\StaticConfiguration\\ConfiguratorInterface\">ConfiguratorInterface<\/abbr><\/a> $object)","",2],["Config::getConfigurator","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getConfigurator","()","",2],["Config::setRegistry","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_setRegistry","(array $registry)","",2],["Config::getRegistry","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getRegistry","()","",2],["Config::getDefaults","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getDefaults","()","",2],["Config::getRequired","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getRequired","()","",2],["Config::getInternal","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getInternal","(string $name)","",2],["Config::validate","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_validate","(array $entries)","Check if a custom Config class defines all required",2],["Config::overload","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_overload","(array $settings)","Overload a config registry",2],["Config::set","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_set","(string $name, mixed $value)","",2],["Config::get","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_get","(string $name, mixed $default = null)","",2],["Config::getDefault","Library\\StaticConfiguration\\Config","Library\/StaticConfiguration\/Config.html#method_getDefault","(string $name)","",2],["ConfiguratorInterface::getDefaults","Library\\StaticConfiguration\\ConfiguratorInterface","Library\/StaticConfiguration\/ConfiguratorInterface.html#method_getDefaults","()","Get the default configuration values",2],["ConfiguratorInterface::getRequired","Library\\StaticConfiguration\\ConfiguratorInterface","Library\/StaticConfiguration\/ConfiguratorInterface.html#method_getRequired","()","Get the required configuration entries",2],["MorseCode::getLetter","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_getLetter","($char)","",2],["MorseCode::getWord","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_getWord","($word)","",2],["MorseCode::getString","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_getString","($str)","",2],["MorseCode::encode","Library\\Tool\\MorseCode","Library\/Tool\/MorseCode.html#method_encode","($str)","",2],["Pagination::__construct","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method___construct","(array $collection = array(), int $limit = null, int $offset)","",2],["Pagination::setLimit","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setLimit","($limit)","",2],["Pagination::setOffset","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setOffset","($offset)","",2],["Pagination::setPagesNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setPagesNumber","($pages_number)","",2],["Pagination::setItemsNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setItemsNumber","($items_number)","",2],["Pagination::setCollection","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setCollection","(array $collection)","",2],["Pagination::getLimit","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getLimit","()","",2],["Pagination::getOffset","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getOffset","()","",2],["Pagination::getPagesNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getPagesNumber","()","",2],["Pagination::getItemsNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getItemsNumber","()","",2],["Pagination::getCollection","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getCollection","()","",2],["Pagination::getPaginatedCollection","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getPaginatedCollection","()","",2],["Pagination::setOffsetByPageNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_setOffsetByPageNumber","($page_number)","",2],["Pagination::exists","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_exists","()","",2],["Pagination::current","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_current","()","",2],["Pagination::key","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_key","()","",2],["Pagination::next","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_next","()","",2],["Pagination::rewind","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_rewind","()","",2],["Pagination::valid","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_valid","()","",2],["Pagination::isFirst","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_isFirst","()","",2],["Pagination::isLast","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_isLast","()","",2],["Pagination::isCurrent","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_isCurrent","()","",2],["Pagination::getPageNumber","Library\\Tool\\Pagination","Library\/Tool\/Pagination.html#method_getPageNumber","()","",2],["Table::__construct","Library\\Tool\\Table","Library\/Tool\/Table.html#method___construct","(array $body = array(), array $header = array(), array $footer = array(), string $title = null, int $pad_flag = self::PAD_BY_EMPTY_CELLS)","Table construction",2],["Table::__toString","Library\\Tool\\Table","Library\/Tool\/Table.html#method___toString","()","Rendering of the table",2],["Table::getTable","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTable","()","Get the full table array",2],["Table::getTableIterator","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableIterator","(string $part = &#039;body&#039;, int $iterator_flag = self::ITERATE_ON_LINES)","Get the full table or a part of the table as an `ArrayIterator`",2],["Table::getLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getLine","(int $line_index = null)","Get a line of the table body",2],["Table::addLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addLine","(array|string $contents = null, mixed $default = null)","Add a new line in the table body",2],["Table::getColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getColumn","(int $column_index = null)","Get a column of the table body",2],["Table::addColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addColumn","(array|string $body = null, mixed $default = null, array $headers = null, array $footers = null)","Add a new column in the table body",2],["Table::getCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getCell","(int $line_index = null, int $cell_index = null)","Get a cell of the table body",2],["Table::addCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addCell","(string $cell = null)","Add a new cell in the current line of the table body",2],["Table::setPadFlag","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setPadFlag","(int $flag)","Set the table flag used for cell padding",2],["Table::getPadFlag","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getPadFlag","()","Get the table pad flag",2],["Table::setTitle","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setTitle","(string $title)","Set the table title",2],["Table::getTitle","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTitle","()","Get the table title",2],["Table::setHeader","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeader","(array $contents)","Set the table headers lines",2],["Table::setHeaderLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderLine","(array $contents, int $line_index = null, mixed $default = null)","Set a table header line",2],["Table::addHeaderLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderLine","(array $contents, int $line_index = null, mixed $default = null)","Add a new table header line",2],["Table::setHeaderColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Set a column in the table header",2],["Table::addHeaderColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Add a new column in the table header",2],["Table::setHeaderCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderCell","(array $content, int $line_index = null, int $cell_index = null)","Set a table header cell",2],["Table::addHeaderCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderCell","(array $content, int $line_index = null, int $cell_index = null)","Add a new table header cell",2],["Table::getHeader","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeader","()","Get the table headers lines",2],["Table::getHeaderLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderLine","(int $line_index = null)","Get a table headers line",2],["Table::getHeaderColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderColumn","(int $column_index = null)","Get a table headers column",2],["Table::getHeaderCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderCell","(int $line_index = null, int $cell_index = null)","Get a table headers cell",2],["Table::setBody","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBody","(array $contents)","Set the table body lines",2],["Table::setBodyLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyLine","(array $contents, int $line_index = null)","Set a table body line",2],["Table::addBodyLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyLine","(array $contents, int $line_index = null)","Add a new table body line",2],["Table::setBodyColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Set a column in the table body",2],["Table::addBodyColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Add a new column in the table body",2],["Table::setBodyCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyCell","(array $content, int $line_index = null, int $cell_index = null)","Set a table body cell",2],["Table::addBodyCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyCell","(array $content, int $line_index = null, int $cell_index = null)","Add a new table body cell",2],["Table::getBody","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBody","()","Get the table body lines",2],["Table::getBodyLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyLine","(int $line_index = null)","Get a table body line",2],["Table::getBodyColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyColumn","(int $column_index = null)","Get a column of the table body",2],["Table::getBodyCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyCell","(int $line_index = null, int $cell_index = null)","Get a table body cell",2],["Table::setFooter","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooter","(array $contents)","Set the table footer lines",2],["Table::setFooterLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterLine","(array $contents, int $line_index = null)","Set a table footer line",2],["Table::addFooterLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterLine","(array $contents, int $line_index = null)","Add a new table footer line",2],["Table::setFooterColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Set a column in the table footers",2],["Table::addFooterColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterColumn","(array $contents = array(), int $column_index = null, mixed $default = null)","Add a new column in the table footers",2],["Table::setFooterCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterCell","(array $content, int $line_index = null, int $cell_index = null)","Set a table footer cell",2],["Table::addFooterCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterCell","(array $content, int $line_index = null, int $cell_index = null)","Add a new table footer cell",2],["Table::getFooter","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooter","()","Get the table footers lines",2],["Table::getFooterLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterLine","(int $line_index = null)","Get a table footers line",2],["Table::getFooterColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterColumn","(int $column_index = null)","Get a table footers column",2],["Table::getFooterCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterCell","(int $line_index = null, int $cell_index = null)","Get a table footers cell",2],["Table::getTableColumnSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableColumnSize","()","Get the table columns size",2],["Table::getTableLineSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableLineSize","()","Get the table lines size",2],["Table::getTableCellSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableCellSize","()","Get the table cells size",2],["Table::getSizesInfos","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getSizesInfos","()","Get a string information presenting an overview of",2],["Table::_resetSizes","Library\\Tool\\Table","Library\/Tool\/Table.html#method__resetSizes","()","Reset the table sizes",2],["Table::render","Library\\Tool\\Table","Library\/Tool\/Table.html#method_render","(int $str_pad_flag = STR_PAD_RIGHT)","Plain text rendering of the table",2],["Table::setContents","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContents","()","",2],["Table::setContentLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentLine","()","",2],["Table::addContentLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentLine","()","",2],["Table::setContentColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentColumn","()","",2],["Table::setContentCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentCol","()","",2],["Table::setBodyCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setBodyCol","()","",2],["Table::addContentColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentColumn","()","",2],["Table::addContentCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentCol","()","",2],["Table::addBodyCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addBodyCol","()","",2],["Table::setContentCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setContentCell","()","",2],["Table::addContentCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addContentCell","()","",2],["Table::getContents","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContents","()","",2],["Table::getContentLine","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentLine","()","",2],["Table::getContentColumn","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentColumn","()","",2],["Table::getContentCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentCol","()","",2],["Table::getBodyCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getBodyCol","()","",2],["Table::getContentCell","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getContentCell","()","",2],["Table::getTableColSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getTableColSize","()","",2],["Table::getCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getCol","()","",2],["Table::getHeaderCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getHeaderCol","()","",2],["Table::addHeaderCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addHeaderCol","()","",2],["Table::setHeaderCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setHeaderCol","()","",2],["Table::getFooterCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getFooterCol","()","",2],["Table::addFooterCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_addFooterCol","()","",2],["Table::setFooterCol","Library\\Tool\\Table","Library\/Tool\/Table.html#method_setFooterCol","()","",2],["Table::getColumnSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getColumnSize","()","",2],["Table::getColSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getColSize","()","",2],["Table::getLineSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getLineSize","()","",2],["Table::getCellSize","Library\\Tool\\Table","Library\/Tool\/Table.html#method_getCellSize","()","",2],["API::factory","MarkdownExtended\\API","MarkdownExtended\/API.html#method_factory","(string $name, <abbr title=\"MarkdownExtended\\null\/array\">null\/array<\/abbr> $params = null, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $type = null)","Build an API object validating it if needed",2],["API::isValid","MarkdownExtended\\API","MarkdownExtended\/API.html#method_isValid","(<abbr title=\"MarkdownExtended\\string\/object\">string\/object<\/abbr> $object, string $type = null, bool $bool = false)","Validate an API object checking its implemented interfaces",2],["API::getRelativeClassname","MarkdownExtended\\API","MarkdownExtended\/API.html#method_getRelativeClassname","(string $class_name)","Get a class name without the current namespace if present",2],["API::getAbsoluteClassname","MarkdownExtended\\API","MarkdownExtended\/API.html#method_getAbsoluteClassname","(string $class_name)","Get a class name with the current namespace",2],["API::debug","MarkdownExtended\\API","MarkdownExtended\/API.html#method_debug","()","Debug infos on screen during parsing",2],["ContentInterface::getSource","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getSource","()","",2],["GamutInterface::getDefaultMethod","MarkdownExtended\\API\\GamutInterface","MarkdownExtended\/API\/GamutInterface.html#method_getDefaultMethod","()","Must return a method name",2],["KernelInterface::__construct","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method___construct","(array $options = null)","Initialize the registry and flush the contents stack",2],["KernelInterface::getInstance","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_getInstance","(int $instance_id = null, array $options = null)","Get the instance, which will be created if required",2],["KernelInterface::create","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_create","(array $options = null, $instance_id = null)","Create a new singleton instance",2],["KernelInterface::factory","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_factory","(string $class_name, array $params = null)","Build, retain and return a dependency instance",2],["KernelInterface::get","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_get","(string $class_name, array $params = null, mixed $flag = \\MarkdownExtended\\API::FAIL_GRACEFULLY)","Get a service from the container ; load it if absent",2],["KernelInterface::transformString","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_transformString","(string $source, string|array $parser_options = null, string|null $key = null, bool $secondary = false)","Transform a source string",2],["KernelInterface::transformSource","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_transformSource","(string $filename, string|array $parser_options = null, string|null $key = null, bool $secondary = false)","Transform a source file content",2],["OutputFormatHelperInterface::getFullContent","MarkdownExtended\\API\\OutputFormatHelperInterface","MarkdownExtended\/API\/OutputFormatHelperInterface.html#method_getFullContent","(<abbr title=\"MarkdownExtended\\API\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $content, <abbr title=\"MarkdownExtended\\API\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter)","This must return a full formated string ready to write",2],["OutputFormatHelperInterface::getToc","MarkdownExtended\\API\\OutputFormatHelperInterface","MarkdownExtended\/API\/OutputFormatHelperInterface.html#method_getToc","(<abbr title=\"MarkdownExtended\\API\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $content, <abbr title=\"MarkdownExtended\\API\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter)","This must return a full formated table of contents",2],["OutputFormatInterface::buildTag","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","",2],["OutputFormatInterface::getTagString","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["ParserInterface::__construct","MarkdownExtended\\API\\ParserInterface","MarkdownExtended\/API\/ParserInterface.html#method___construct","(<abbr title=\"MarkdownExtended\\API\\array\/string\">array\/string<\/abbr> $config = null)","Constructor function: Initialize the parser object",2],["ParserInterface::parse","MarkdownExtended\\API\\ParserInterface","MarkdownExtended\/API\/ParserInterface.html#method_parse","(<abbr title=\"MarkdownExtended\\API\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $content, bool $secondary = false)","Main function.",2],["TemplaterInterface::getTemplate","MarkdownExtended\\API\\TemplaterInterface","MarkdownExtended\/API\/TemplaterInterface.html#method_getTemplate","()","Get the template file path",2],["TemplaterInterface::__toString","MarkdownExtended\\API\\TemplaterInterface","MarkdownExtended\/API\/TemplaterInterface.html#method___toString","()","Get the template content with loaded Markdown parsed",2],["AbstractConsole::__construct","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method___construct","()","Constructor",2],["AbstractConsole::write","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_write","(string $str, bool $new_line = true, string $stream = &#039;stdout&#039;)","Write an info to CLI output",2],["AbstractConsole::info","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_info","(string $str, bool $new_line = true, bool $leading_dot = true)","Write an info in verbose mode",2],["AbstractConsole::separator","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_separator","()","Write an separator line in verbose mode",2],["AbstractConsole::error","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_error","(string $str, int $code = 90, bool $forced = false)","Write an error info and exit",2],["AbstractConsole::caught","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_caught","(<abbr title=\"MarkdownExtended\\CommandLine\\Exception\">Exception<\/abbr> $e)","Write a caught exception",2],["AbstractConsole::exec","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_exec","(string $cmd, bool $fail_gracefully = false)","Exec a command",2],["AbstractConsole::runOption_verbose","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_verbose","()","Run the verbose option",2],["AbstractConsole::runOption_quiet","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_quiet","()","Run the quiet option",2],["AbstractConsole::runOption_debug","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_debug","()","Run the debug option",2],["AbstractConsole::runOption_usage","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_usage","(int $exit_status)","Run the usage option",2],["AbstractConsole::setScriptPath","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_setScriptPath","(<abbr title=\"MarkdownExtended\\CommandLine\\$path\">$path<\/abbr> $path)","Set the current script full path",2],["AbstractConsole::run","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_run","()","Run the whole script depending on options set",2],["AbstractConsole::writeOutputFile","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_writeOutputFile","(string $output, string $output_file)","Write a result for each processed file or string in",2],["AbstractConsole::writeOutput","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_writeOutput","(string $output)","Write a result for each processed file or string",2],["AbstractConsole::writeInputTitle","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_writeInputTitle","(string $title)","Write a title for each processed file or string",2],["Console::__construct","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method___construct","()","Constructor",2],["Console::runOption_usage","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_usage","(int $exit_status)","Run the usage option",2],["Console::runOption_help","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_help","()","Get the help string",2],["Console::runOption_version","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_version","()","Run the version option",2],["Console::runOption_man","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_man","()","Run the manual option",2],["Console::runOption_multi","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_multi","()","Run the multi option",2],["Console::runOption_output","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_output","(string $file)","Run the output option",2],["Console::runOption_filter_html","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_filter_html","()","Run the HTML filter option",2],["Console::runOption_filter_styles","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_filter_styles","()","Run the styles filter option",2],["Console::runOption_extract","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_extract","(string $type)","Run the extract option",2],["Console::runOption_template","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_template","(string $file)","Run the template option",2],["Console::runOption_nofilter","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_nofilter","(string $str)","Run the no-filter option",2],["Console::runOption_format","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_format","(string $str)","Run the format option",2],["Console::runOption_body","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_body","()","Run the 'body' alias",2],["Console::runOption_simple","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_simple","()","Run the 'simple' alias",2],["Console::run","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_run","()","Run the whole script depending on options set",2],["Console::runStoryOnOneFile","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runStoryOnOneFile","(string $input, bool $title = false)","Run the MDE process on one file or input",2],["Console::runOneFile","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOneFile","(string $input, string $output = null, bool $extract = null, bool $title = false)","Actually run the MDE process on a file or string",2],["Console::getInput","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_getInput","(string $input, bool $title = false)","Creates a `\\MarkdownExtended\\API\\ContentInterface`",2],["Console::parseContent","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_parseContent","(<abbr title=\"MarkdownExtended\\CommandLine\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content)","Process a Content parsing",2],["Console::extractContent","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_extractContent","(<abbr title=\"MarkdownExtended\\CommandLine\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content, string $extract)","Process a Content parsing just for special gamuts",2],["Reminders::__construct","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method___construct","()","Constructor Setup the input\/output, verify that we",2],["Reminders::runOption_help","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_help","()","Get the help string",2],["Reminders::runOption_docsdir","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_docsdir","($path)","Run the multi docsdir",2],["Reminders::runOption_output","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_output","(string $file)","Run the output option",2],["Reminders::runOption_format","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_format","(string $str)","Run the format option",2],["Reminders::runOption_template","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_template","(string $file)","Run the template option",2],["Reminders::run","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_run","()","Run the whole script depending on options set",2],["Reminders::writeOutputFile","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_writeOutputFile","(string $output)","Write a result for each processed file or string in",2],["Reminders::writeOutput","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_writeOutput","(string $output, bool $exit = false)","Write a result for each processed file or string",2],["Reminders::writeInputTitle","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_writeInputTitle","(string $title)","Write a title for each processed file or string",2],["Reminders::filterSpan","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_filterSpan","($item)","",2],["Reminders::filterBlock","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_filterBlock","($item)","",2],["Reminders::filterMisc","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_filterMisc","($item)","",2],["Config::__construct","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method___construct","()","Create a configuration object",2],["Config::reset","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_reset","()","Reset data on defaults",2],["Config::init","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_init","(<abbr title=\"MarkdownExtended\\null\/string\/array\">null\/string\/array<\/abbr> $user_config = null)","Init a new config with user options",2],["Config::load","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_load","(<abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $cfg_file, bool $silent = false)","Load and parse a INI configuration file",2],["Config::reload","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_reload","(<abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $cfg_file = null, bool $forced = false, bool $silent = false)","Over-load a configuration",2],["Config::overload","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_overload","(array $config)","Over-load a configuration",2],["Config::setConfigFile","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_setConfigFile","(string $cfg_file)","Define the object config file",2],["Config::getConfigFile","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_getConfigFile","()","Get the object config file",2],["Content::__construct","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method___construct","(string $source = null, string $filepath = null, mixed $id = null)","",2],["Content::__call","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method___call","($name, array $arguments = null)","Magic method to handle any `getXX()`, `setXX()` or",2],["Content::setId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setId","(mixed $id)","Define the content ID",2],["Content::getId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getId","()","Get the content ID",2],["Content::getDirname","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getDirname","()","Get the file dirname if so",2],["Content::setLastUpdate","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setLastUpdate","(mixed $date)","Define the last update datetime of this content",2],["Content::getLastUpdate","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getLastUpdate","()","Retrieve the content last update",2],["Content::getLastUpdateToString","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getLastUpdateToString","()","Get the last update of this content as string",2],["Content::getSource","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getSource","()","Get the original source content",2],["Content::getTitle","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getTitle","()","Get the content title",2],["Content::getMetadata","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getMetadata","(<abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $index = null)","Get the meta-data stack or one entry",2],["Content::hasDomId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_hasDomId","(string $reference)","Verify if a reference is already defined in the DOM",2],["Content::getDomId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getDomId","(string $reference, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $id = null)","Get a DOM unique ID",2],["Content::setNewDomId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setNewDomId","(string $id, string $reference = null, bool $return_array = true)","Create and get a new DOM unique ID",2],["ContentCollection::__construct","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method___construct","(array $elements = array())","",2],["ContentCollection::exists","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_exists","()","",2],["ContentCollection::clear","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_clear","()","",2],["ContentCollection::set","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_set","(mixed $key, <abbr title=\"MarkdownExtended\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $value)","Define a new item in the collection by key",2],["ContentCollection::add","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_add","(<abbr title=\"MarkdownExtended\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $value)","Add a new item at the end of the collection",2],["ContentCollection::remove","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_remove","(mixed $key)","Delete an item of the collection by key",2],["ContentCollection::get","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_get","(mixed $key)","Get a collection item by key",2],["ContentCollection::current","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_current","()","Get the current collection item",2],["ContentCollection::key","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_key","()","Get the current collection item key",2],["ContentCollection::next","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_next","()","Get next collection item",2],["ContentCollection::rewind","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_rewind","()","Put the iterator on the first collection item",2],["ContentCollection::valid","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_valid","()","Test if current collection item exists",2],["ContentCollection::first","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_first","()","Rewind to first collection item",2],["ContentCollection::last","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_last","()","Go to last collection item",2],["ContentCollection::offsetExists","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetExists","(mixed $offset)","Test if a collection item exists by key",2],["ContentCollection::offsetGet","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetGet","(mixed $offset)","Get a collection item by key",2],["ContentCollection::offsetSet","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetSet","(mixed $offset, mixed $value)","Set a collection item by key",2],["ContentCollection::offsetUnset","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetUnset","(mixed $offset)","Unset a collection item by key",2],["ContentCollection::count","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_count","()","Count number of collection items",2],["ContentCollection::getArrayFilter","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_getArrayFilter","(callable $callback)","Run a callback of the collection items",2],["AbstractGamut::runGamut","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_runGamut","(string $gamut, string $text)","Run a gamut stack from a filter or tool",2],["AbstractGamut::resetHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_resetHash","()","Reset the hash table",2],["AbstractGamut::setHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_setHash","(string $key, string $text)","Reference a new hash",2],["AbstractGamut::getHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_getHash","(string $key)","Retrieve a hash by its key",2],["Filter::getDefaultMethod","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_getDefaultMethod","()","Must return a method name",2],["Filter::transform","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_transform","(string $text)","Must process the filter on a text",2],["Filter::hashPart","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashPart","(string $text, string $boundary = &#039;X&#039;)","Called whenever a tag must be hashed when a function",2],["Filter::hashBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashBlock","(string $text)","Shortcut function for hashPart with block-level boundaries.",2],["Filter::hashClean","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashClean","(string $text)","Called whenever a tag must be hashed when a function",2],["Filter::unhash","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_unhash","(string $text)","Swap back in all the tags hashed by _HashHTMLBlocks.",2],["Abbreviation::_setup","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method__setup","()","Prepare masks for predefined abbreviations and descriptions",2],["Abbreviation::_teardown","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method__teardown","()","Reset masks created by the `_setup()` method",2],["Abbreviation::transform","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method_transform","(string $text)","Find defined abbreviations in text and wrap them in",2],["Abbreviation::strip","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method_strip","(string $text)","Strips abbreviations from text, stores titles in hash",2],["Anchor::_setup","MarkdownExtended\\Grammar\\Filter\\Anchor","MarkdownExtended\/Grammar\/Filter\/Anchor.html#method__setup","()","Set up the `in_anchor` config flag on `false`",2],["Anchor::transform","MarkdownExtended\\Grammar\\Filter\\Anchor","MarkdownExtended\/Grammar\/Filter\/Anchor.html#method_transform","(string $text)","Turn Markdown link shortcuts into XHTML  tags.",2],["AutoLink::transform","MarkdownExtended\\Grammar\\Filter\\AutoLink","MarkdownExtended\/Grammar\/Filter\/AutoLink.html#method_transform","(string $text)","",2],["BlockInclusion::transform","MarkdownExtended\\Grammar\\Filter\\BlockInclusion","MarkdownExtended\/Grammar\/Filter\/BlockInclusion.html#method_transform","(string $text)","Find defined inclusion blocks",2],["BlockQuote::transform","MarkdownExtended\\Grammar\\Filter\\BlockQuote","MarkdownExtended\/Grammar\/Filter\/BlockQuote.html#method_transform","(string $text)","Create blockquotes blocks",2],["CodeBlock::transform","MarkdownExtended\\Grammar\\Filter\\CodeBlock","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html#method_transform","(string $text)","Process Markdown `` blocks.",2],["CodeBlock::span","MarkdownExtended\\Grammar\\Filter\\CodeBlock","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html#method_span","(string $code)","Create a code span markup for $code.",2],["DefinitionList::transform","MarkdownExtended\\Grammar\\Filter\\DefinitionList","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html#method_transform","(string $text)","Form HTML definition lists.",2],["DefinitionList::transformItems","MarkdownExtended\\Grammar\\Filter\\DefinitionList","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html#method_transformItems","(string $list_str)","Process the contents of a single definition list, splitting",2],["Emphasis::prepare","MarkdownExtended\\Grammar\\Filter\\Emphasis","MarkdownExtended\/Grammar\/Filter\/Emphasis.html#method_prepare","()","Prepare regular expressions for searching emphasis",2],["Emphasis::transform","MarkdownExtended\\Grammar\\Filter\\Emphasis","MarkdownExtended\/Grammar\/Filter\/Emphasis.html#method_transform","(string $text)","",2],["FencedCodeBlock::transform","MarkdownExtended\\Grammar\\Filter\\FencedCodeBlock","MarkdownExtended\/Grammar\/Filter\/FencedCodeBlock.html#method_transform","(string $text)","",2],["HTML::transform","MarkdownExtended\\Grammar\\Filter\\HTML","MarkdownExtended\/Grammar\/Filter\/HTML.html#method_transform","(string $text)","Hashify HTML Blocks and \"clean tags\".",2],["HardBreak::transform","MarkdownExtended\\Grammar\\Filter\\HardBreak","MarkdownExtended\/Grammar\/Filter\/HardBreak.html#method_transform","(string $text)","",2],["Header::transform","MarkdownExtended\\Grammar\\Filter\\Header","MarkdownExtended\/Grammar\/Filter\/Header.html#method_transform","(string $text)","Redefined to add id attribute support.",2],["HorizontalRule::transform","MarkdownExtended\\Grammar\\Filter\\HorizontalRule","MarkdownExtended\/Grammar\/Filter\/HorizontalRule.html#method_transform","(string $text)","",2],["Image::transform","MarkdownExtended\\Grammar\\Filter\\Image","MarkdownExtended\/Grammar\/Filter\/Image.html#method_transform","(string $text)","Turn Markdown image shortcuts into  tags.",2],["LinkDefinition::transform","MarkdownExtended\\Grammar\\Filter\\LinkDefinition","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html#method_transform","(string $text)","Mandatory method",2],["LinkDefinition::strip","MarkdownExtended\\Grammar\\Filter\\LinkDefinition","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html#method_strip","(string $text)","Strips link definitions from text, stores the URLs",2],["ListItem::transform","MarkdownExtended\\Grammar\\Filter\\ListItem","MarkdownExtended\/Grammar\/Filter\/ListItem.html#method_transform","(string $text)","Form HTML ordered (numbered) and unordered (bulleted)",2],["ListItem::transformItems","MarkdownExtended\\Grammar\\Filter\\ListItem","MarkdownExtended\/Grammar\/Filter\/ListItem.html#method_transformItems","(string $list_str, string $marker_any_re)","Process the contents of a single ordered or unordered",2],["Maths::transform","MarkdownExtended\\Grammar\\Filter\\Maths","MarkdownExtended\/Grammar\/Filter\/Maths.html#method_transform","(string $text)","Wrap text between \\[ and \\] in display math tags.",2],["Maths::span","MarkdownExtended\\Grammar\\Filter\\Maths","MarkdownExtended\/Grammar\/Filter\/Maths.html#method_span","(string $texblock)","Build each maths span",2],["MetaData::_setup","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method__setup","()","Prepare object with configuration",2],["MetaData::strip","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_strip","(string $text)","",2],["MetaData::transform","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_transform","(string $line)","",2],["MetaData::append","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_append","($text)","Build meta data strings",2],["Note::_setup","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method__setup","()","Prepare all required arrays",2],["Note::strip","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_strip","(string $text)","Strips link definitions from text, stores the URLs",2],["Note::transform","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transform","(string $text)","Replace footnote references in $text [string][#id]",2],["Note::append","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_append","(string $text)","Append footnote list to text.",2],["Note::transformFootnote","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformFootnote","(string $note_id)","Append footnote list to text.",2],["Note::transformGlossary","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformGlossary","(string $note_id)","Append glossary notes list to text.",2],["Note::transformCitation","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformCitation","(string $note_id)","Append bibliography notes list to text.",2],["Span::transform","MarkdownExtended\\Grammar\\Filter\\Span","MarkdownExtended\/Grammar\/Filter\/Span.html#method_transform","(string $str)","Take the string $str and parse it into tokens, hashing",2],["Span::handleSpanToken","MarkdownExtended\\Grammar\\Filter\\Span","MarkdownExtended\/Grammar\/Filter\/Span.html#method_handleSpanToken","(string $token, string $str)","Handle $token provided by parseSpan by determining",2],["Table::transform","MarkdownExtended\\Grammar\\Filter\\Table","MarkdownExtended\/Grammar\/Filter\/Table.html#method_transform","(string $text)","Form HTML tables.",2],["TableOfContents::_setup","MarkdownExtended\\Grammar\\Filter\\TableOfContents","MarkdownExtended\/Grammar\/Filter\/TableOfContents.html#method__setup","()","Reset all properties at the begining",2],["TableOfContents::transform","MarkdownExtended\\Grammar\\Filter\\TableOfContents","MarkdownExtended\/Grammar\/Filter\/TableOfContents.html#method_transform","(string $text)","",2],["Gamut::__construct","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method___construct","(array $gamut_aliases = null)","Set the gamuts aliases from config",2],["Gamut::runGamuts","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method_runGamuts","(array $gamuts, string $text = null)","Run a table of gamuts by priority",2],["Gamut::runGamutsMethod","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method_runGamutsMethod","(array $gamuts, string $method, string $text = null)","Run a table of gamuts for a specific method by priority",2],["Gamut::runGamut","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method_runGamut","(string $gamut, string $text = null, string $_method = null, bool $silent = false)","Run a single gamut",2],["Tool::getDefaultMethod","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool.html#method_getDefaultMethod","()","Must return a method name",2],["Tool::run","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool.html#method_run","(string $text)","Must process the tool on a text",2],["AppendEndingNewLines::run","MarkdownExtended\\Grammar\\Tool\\AppendEndingNewLines","MarkdownExtended\/Grammar\/Tool\/AppendEndingNewLines.html#method_run","(string $text)","Make sure $text ends with a couple of newlines",2],["Detab::init","MarkdownExtended\\Grammar\\Tool\\Detab","MarkdownExtended\/Grammar\/Tool\/Detab.html#method_init","()","Check for the availability of the function in the `utf8_strlen`",2],["Detab::run","MarkdownExtended\\Grammar\\Tool\\Detab","MarkdownExtended\/Grammar\/Tool\/Detab.html#method_run","(string $text)","Replace tabs with the appropriate amount of space.",2],["EncodeAmpAndAngle::run","MarkdownExtended\\Grammar\\Tool\\EncodeAmpAndAngle","MarkdownExtended\/Grammar\/Tool\/EncodeAmpAndAngle.html#method_run","(string $text)","Smart processing for ampersands and angle brackets",2],["EncodeAttribute::run","MarkdownExtended\\Grammar\\Tool\\EncodeAttribute","MarkdownExtended\/Grammar\/Tool\/EncodeAttribute.html#method_run","(string $text)","Encode text for a double-quoted HTML attribute.",2],["ExtractAttributes::run","MarkdownExtended\\Grammar\\Tool\\ExtractAttributes","MarkdownExtended\/Grammar\/Tool\/ExtractAttributes.html#method_run","(string $attributes)","Extract attributes from string 'a=\"b\"'",2],["Outdent::run","MarkdownExtended\\Grammar\\Tool\\Outdent","MarkdownExtended\/Grammar\/Tool\/Outdent.html#method_run","(string $text)","Remove one level of line-leading tabs or spaces",2],["RebuildParagraph::run","MarkdownExtended\\Grammar\\Tool\\RebuildParagraph","MarkdownExtended\/Grammar\/Tool\/RebuildParagraph.html#method_run","(string $text)","Process paragraphs",2],["RemoveUtf8Marker::run","MarkdownExtended\\Grammar\\Tool\\RemoveUtf8Marker","MarkdownExtended\/Grammar\/Tool\/RemoveUtf8Marker.html#method_run","(string $text)","Remove UTF-8 BOM and marker character in input, if",2],["StandardizeLineEnding::run","MarkdownExtended\\Grammar\\Tool\\StandardizeLineEnding","MarkdownExtended\/Grammar\/Tool\/StandardizeLineEnding.html#method_run","(string $text)","Standardize line endings: DOS to Unix and Mac to Unix",2],["StripSpacedLines::run","MarkdownExtended\\Grammar\\Tool\\StripSpacedLines","MarkdownExtended\/Grammar\/Tool\/StripSpacedLines.html#method_run","(string $text)","Strip any lines consisting only of spaces and tabs.",2],["Helper::debug","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_debug","(mixed $a = &#039;&#039;, mixed $what = null, bool $exit = true)","Debug function",2],["Helper::info","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_info","(bool $html = false)","Get information string about the current Markdown Extended",2],["Helper::smallInfo","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_smallInfo","(bool $html = false, bool $version_only = false)","Get information string about the current Markdown Extended",2],["Helper::escapeCodeContent","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_escapeCodeContent","(string $code)","Escape the code blocks contents to get HTML entities",2],["Helper::fillPlaceholders","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_fillPlaceholders","(string $text, string $replacement)","Replace any `%%` mask by a replacement",2],["Helper::header2Label","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_header2Label","(string $text)","Transform a header string to DOM valid label",2],["Helper::encodeEmailAddress","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_encodeEmailAddress","(string $addr)","Input: an email address, e.g.",2],["Helper::getFileSize","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_getFileSize","(string $file_path)","Get a human readable file size",2],["Helper::buildRegex","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_buildRegex","(string $mask, string $delimiter = &#039;#&#039;, string $options = &#039;i&#039;)","Get a ready-to-use regular expression from a string",2],["Helper::find","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_find","(string $file_name, string $type = null)","Find a resource file and return its path",2],["Helper::toCamelCase","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_toCamelCase","(string $name, string $replace = &#039;_&#039;, bool $capitalize_first_char = true)","Transform a name in CamelCase",2],["Helper::fromCamelCase","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_fromCamelCase","(string $name, string $replace = &#039;_&#039;, bool $lowerize_first_char = true)","Transform a name from CamelCase to other",2],["MarkdownExtended::__construct","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method___construct","(array $options = null)","Initialize the registry and flush the contents stack",2],["MarkdownExtended::getInstance","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getInstance","(int $instance_id = null, array $options = null)","Get a Markdown Extended instance (last created one",2],["MarkdownExtended::create","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_create","(array $options = null, int $instance_id = null)","Create a new MDE instance",2],["MarkdownExtended::transformString","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_transformString","(string $source, <abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $parser_options = null, <abbr title=\"MarkdownExtended\\string\/null\">string\/null<\/abbr> $key = null, bool $secondary = false)","Transform a Markdown source string",2],["MarkdownExtended::transformSource","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_transformSource","(string $filename, <abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $parser_options = null, <abbr title=\"MarkdownExtended\\string\/null\">string\/null<\/abbr> $key = null, bool $secondary = false)","Transform a Markdown source file content",2],["MarkdownExtended::addProcessedContent","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_addProcessedContent","(<abbr title=\"MarkdownExtended\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $content, bool $secondary = false)","Add a new processed content in the contents stack",2],["MarkdownExtended::getContent","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getContent","(mixed $id = null)","Get a processed content, current by default",2],["MarkdownExtended::getFullContent","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getFullContent","(mixed $id = null)","Get a full version of a processed content, current",2],["MarkdownExtended::getTemplater","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getTemplater","(array $config = null)","Get current processed content in a Templater",2],["MarkdownExtended::load","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_load","(string $class_name)","Load a dependency",2],["MarkdownExtended::factory","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_factory","(string $class_name, <abbr title=\"MarkdownExtended\\null\/array\">null\/array<\/abbr> $params = null, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $type = null)","Build, retain and get a dependency instance",2],["MarkdownExtended::get","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_get","(string $class_name, array $params = null, int $flag = MDE_API::FAIL_GRACEFULLY)","Get a loader object from registry \/ load it if absent",2],["MarkdownExtended::getConfig","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getConfig","(string $var)","Get a configuration entry from registry",2],["MarkdownExtended::setConfig","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_setConfig","(string $var, mixed $val, null|string $stack = null)","Set a configuration entry in registry",2],["MarkdownExtended::addConfig","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_addConfig","(string $var, mixed $val)","Add to a configuration entry in registry",2],["MarkdownExtended::getVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getVar","(string $var)","Get a parser entry from registry",2],["MarkdownExtended::setVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_setVar","(string $var, mixed $val)","Set a parser entry in registry",2],["MarkdownExtended::addVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_addVar","(string $var, mixed $val)","Add to a parser entry in registry",2],["MarkdownExtended::unsetVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_unsetVar","(string $var, mixed $val = null)","Unset a parser entry in registry",2],["OutputFormatBag::load","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_load","(string $format)","Loads a new formatter",2],["OutputFormatBag::loadHelper","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_loadHelper","(string $format)","Loads a formatter helper if it exists",2],["OutputFormatBag::__call","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method___call","($name, array $arguments = null)","Magic method to pass any called method from the bag",2],["OutputFormatBag::setFormatter","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_setFormatter","(<abbr title=\"MarkdownExtended\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter)","Set the current formatter",2],["OutputFormatBag::getFormatter","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_getFormatter","()","Get current formatter",2],["OutputFormatBag::setHelper","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_setHelper","(<abbr title=\"MarkdownExtended\\MDE_API\\OutputFormatHelperInterface\">OutputFormatHelperInterface<\/abbr> $helper)","Set the current formatter helper",2],["OutputFormatBag::getHelper","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_getHelper","()","Get current formatter helper",2],["AbstractOutputFormat::buildTag","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","This will try to call a method `build{TagName}()` if",2],["AbstractOutputFormat::getTagString","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["DefaultHelper::getFullContent","MarkdownExtended\\OutputFormat\\DefaultHelper","MarkdownExtended\/OutputFormat\/DefaultHelper.html#method_getFullContent","(<abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content, <abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter)","Get a complete version of parsed content, including",2],["DefaultHelper::getToc","MarkdownExtended\\OutputFormat\\DefaultHelper","MarkdownExtended\/OutputFormat\/DefaultHelper.html#method_getToc","(<abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content, <abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter)","Build a hierarchical menu",2],["HTML::__construct","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method___construct","()","Get the configuration 'empty_element_suffix'",2],["HTML::getTagString","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_getTagString","(string $text, string $tag, array $attributes = array(), bool $close = false)","Builder of HTML tags :     ",2],["HTML::buildTitle","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildTitle","($text, array $attributes = array())","",2],["HTML::buildMetaData","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildMetaData","($text = null, array $attributes = array())","",2],["HTML::buildComment","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildComment","($text = null, array $attributes = array())","",2],["HTML::buildParagraph","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildParagraph","($text = null, array $attributes = array())","",2],["HTML::buildLink","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildLink","($text = null, array $attributes = array())","",2],["HTML::buildMaths","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildMaths","($text = null, array $attributes = array(), $type = &#039;block&#039;)","",2],["HTML::buildMathsBlock","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildMathsBlock","($text = null, array $attributes = array())","",2],["HTML::buildMathsSpan","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildMathsSpan","($text = null, array $attributes = array())","",2],["HTMLHelper::getFullContent","MarkdownExtended\\OutputFormat\\HTMLHelper","MarkdownExtended\/OutputFormat\/HTMLHelper.html#method_getFullContent","(<abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content, <abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter, bool $full_html = true, bool $include_toc = false, string $html_tag = &#039;&lt;!DOCTYPE html&gt;&#039;)","Get a complete version of parsed content, including",2],["HTMLHelper::getToc","MarkdownExtended\\OutputFormat\\HTMLHelper","MarkdownExtended\/OutputFormat\/HTMLHelper.html#method_getToc","(<abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content, <abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter, array $attributes = null)","Build a hierarchical menu",2],["Man::__construct","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method___construct","()","Remind some commons",2],["Man::buildTag","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","This will try to call a method `build{TagName}()` if",2],["Man::getTagString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["Man::escapeString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_escapeString","(null $text = null, bool $escape_slashes = false, bool $strip_blank_lines = true)","Escape a string ready for manpage output",2],["Man::trimString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_trimString","(null $text = null)","Special `trim()` to actually trim and \"r-trim\" last",2],["Man::buildTitle","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTitle","($text, array $attributes = array())","",2],["Man::indent","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_indent","()","",2],["Man::unindent","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_unindent","()","",2],["Man::buildMetaData","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildMetaData","($text = null, array $attributes = array())","",2],["Man::buildMetaTitle","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildMetaTitle","($text = null, array $attributes = array())","",2],["Man::buildParagraph","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildParagraph","($text = null, array $attributes = array())","",2],["Man::buildBold","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildBold","($text = null, array $attributes = array())","",2],["Man::buildItalic","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildItalic","($text = null, array $attributes = array())","",2],["Man::buildPreformatted","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildPreformatted","($text = null, array $attributes = array())","",2],["Man::buildCode","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildCode","($text = null, array $attributes = array())","",2],["Man::buildAbbreviation","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildAbbreviation","($text = null, array $attributes = array())","",2],["Man::buildDefinitionList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionList","($text = null, array $attributes = array())","",2],["Man::buildDefinitionListItemTerm","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionListItemTerm","($text = null, array $attributes = array())","",2],["Man::buildDefinitionListItemDefinition","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionListItemDefinition","($text = null, array $attributes = array())","",2],["Man::buildNewLine","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildNewLine","($text = null, array $attributes = array())","",2],["Man::buildHorizontalRule","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildHorizontalRule","($text = null, array $attributes = array())","",2],["Man::buildComment","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildComment","($text = null, array $attributes = array())","",2],["Man::buildListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildListItem","($text = null, array $attributes = array())","",2],["Man::buildUnorderedListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildUnorderedListItem","($text = null, array $attributes = array())","",2],["Man::buildOrderedListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildOrderedListItem","($text = null, array $attributes = array())","",2],["Man::buildList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildList","($text = null, array $attributes = array())","",2],["Man::buildUnorderedList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildUnorderedList","($text = null, array $attributes = array())","",2],["Man::buildOrderedList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildOrderedList","($text = null, array $attributes = array())","",2],["Man::buildLink","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildLink","($text = null, array $attributes = array())","",2],["Man::buildBlockquote","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildBlockquote","($text = null, array $attributes = array())","",2],["Man::buildTableCaption","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCaption","($text = null, array $attributes = array())","",2],["Man::buildTableBody","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableBody","($text = null, array $attributes = array())","",2],["Man::buildTableHeader","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableHeader","($text = null, array $attributes = array())","",2],["Man::buildTableFooter","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableFooter","($text = null, array $attributes = array())","",2],["Man::buildTableLine","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableLine","($text = null, array $attributes = array())","",2],["Man::buildTableCell","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCell","($text = null, array $attributes = array())","",2],["Man::buildTableCellHead","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCellHead","($text = null, array $attributes = array())","",2],["ManHelper::getFullContent","MarkdownExtended\\OutputFormat\\ManHelper","MarkdownExtended\/OutputFormat\/ManHelper.html#method_getFullContent","(<abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content, <abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter)","Get a complete version of parsed content, including",2],["ManHelper::getToc","MarkdownExtended\\OutputFormat\\ManHelper","MarkdownExtended\/OutputFormat\/ManHelper.html#method_getToc","(<abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $md_content, <abbr title=\"MarkdownExtended\\OutputFormat\\MDE_API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formatter)","Build a hierarchical menu",2],["Parser::__construct","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method___construct","(<abbr title=\"MarkdownExtended\\array\/string\">array\/string<\/abbr> $config = null)","Constructor function: Initialize the parser object",2],["Parser::parse","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_parse","(<abbr title=\"MarkdownExtended\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $content, bool $secondary = false)","Main function.",2],["Parser::runGamuts","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_runGamuts","(array $gamuts, string $text = null)","Call to MarkdownExtended\\Grammar\\Gamut for an array",2],["Parser::getAllGamuts","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_getAllGamuts","()","",2],["Registry::__construct","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method___construct","(bool $is_extendable = true, bool $is_removable = true)","Initialize the registry",2],["Registry::set","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_set","(string $var, mixed $val)","Set or reset a new instance in global registry",2],["Registry::add","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_add","(string $var, mixed $val)","Add something to an existing entry of the global registry,",2],["Registry::remove","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_remove","(string $var, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $index = null)","Remove something to an existing entry of the global",2],["Registry::get","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_get","(string $var, mixed $default = null)","Get an entry from the global registry",2],["Registry::extend","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_extend","(mixed $what, mixed $add)","Extend a value with another, if types match",2],["Registry::validateVarname","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_validateVarname","(string $var)","Validate a var name",2],["Templater::__construct","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method___construct","(array $user_config = array())","Construction of a new template object",2],["Templater::__toString","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method___toString","()","Echoing the template object will force parsing and",2],["Templater::load","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_load","(<abbr title=\"MarkdownExtended\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $mde_content)","Load a content object",2],["Templater::loadCollection","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_loadCollection","(<abbr title=\"MarkdownExtended\\MDE_API\\CollectionInterface\">CollectionInterface<\/abbr> $mde_content_collection)","Load a contents collection object",2],["Templater::getContent","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_getContent","()","Get the current content",2],["Templater::getTemplate","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_getTemplate","()","Get a template content",2],["Templater::buildTemplate","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_buildTemplate","(array $params)","Build a template content passing it arguments",2],["Templater::parse","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parse","()","Parse a content to complete it and pass it in a template",2],["Templater::parseCollection","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parseCollection","()","Parse a contents collection to complete it and pass",2],["Templater::parseContent","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parseContent","()","Parse a in-body tags",2],["Templater::parseTemplate","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parseTemplate","()","Parse a template content",2],["Templater::autoInsert","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_autoInsert","()","Insert tags from 'auto_insert' config entry",2],["Compiler::getDefaultFinder","MarkdownExtended\\Util\\Compiler","MarkdownExtended\/Util\/Compiler.html#method_getDefaultFinder","()","",2],["Compiler::compile","MarkdownExtended\\Util\\Compiler","MarkdownExtended\/Util\/Compiler.html#method_compile","($pharFile = &#039;markdown-extended.phar&#039;, $root_dir = null)","Compiles app into a single phar file",2],["MenuItemIterator::__construct","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method___construct","(<abbr title=\"MarkdownExtended\\Util\\array\/string\">array\/string<\/abbr> $content = null, int $level = null, array $attributes = null, array $children = null, int $flags)","",2],["MenuItemIterator::init","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_init","(array $values)","Initialize a new item with an array of values",2],["MenuItemIterator::getDefault","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getDefault","()","Get a default empty item",2],["MenuItemIterator::setLevel","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setLevel","(int $level)","Set the item level",2],["MenuItemIterator::getLevel","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getLevel","()","Get the item level",2],["MenuItemIterator::setContent","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setContent","(string $content)","Set the item content",2],["MenuItemIterator::getContent","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getContent","()","Get the item content",2],["MenuItemIterator::setAttributes","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setAttributes","(array $attributes)","Define the item attributes array",2],["MenuItemIterator::addAttribute","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_addAttribute","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, mixed $value)","Add a new item attribute",2],["MenuItemIterator::hasAttributes","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_hasAttributes","()","Test if an item has one or more attribute",2],["MenuItemIterator::getAttributes","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getAttributes","()","Retrieve the item attributes array",2],["MenuItemIterator::setChildren","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setChildren","(<a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $children)","Define an item children stack",2],["MenuItemIterator::addChild","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_addChild","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, <a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $value)","Add a new item child",2],["MenuItemIterator::hasChildren","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_hasChildren","()","Test if the item has one or more children",2],["MenuItemIterator::hasChild","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_hasChild","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index)","Test if a child exists by its index",2],["MenuItemIterator::getChildren","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getChildren","()","Get the item children",2],["MenuItemIterator::getChild","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getChild","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index)","Get a child by its index",2],["MenuItemIterator::offsetSet","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetSet","(string $index, mixed $newval)","Set a new value for a property if it exists in the",2],["MenuItemIterator::offsetUnset","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetUnset","(string $index)","Unset a property value if it exists in the class",2],["MenuItemIterator::offsetGet","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetGet","(string $index)","Retrieve a property value if it exists in the class",2],["MenuItemIterator::offsetExists","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetExists","(string $index)","Test if an index exists in the class and if the property",2],["MenuItemIterator::append","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_append","(mixed $value)","Append a new child to item children with a uniq item",2],["RecursiveMenuIterator::__construct","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method___construct","(<abbr title=\"MarkdownExtended\\Util\\ArrayAccess\">ArrayAccess<\/abbr> $menu = null, int $base_level, int $flags)","",2],["RecursiveMenuIterator::next","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_next","()","Pass to next iteration",2],["RecursiveMenuIterator::previous","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_previous","()","Back to previous iteration",2],["RecursiveMenuIterator::rewind","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_rewind","()","Back to first iteration",2],["RecursiveMenuIterator::seek","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_seek","(int $position)","Seek to an iteration by its position",2],["RecursiveMenuIterator::position","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_position","()","Get the current iterator position",2],["RecursiveMenuIterator::append","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_append","(mixed $value)","Append a new value to iterator and then rebuild menu",2],["RecursiveMenuIterator::getArrayCopy","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_getArrayCopy","()","Get an array of the current menu",2],["RecursiveMenuIterator::menuKeySet","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_menuKeySet","(int $index, <abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $key)","Set a new key entry by its depth",2],["RecursiveMenuIterator::menuOffsetSet","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_menuOffsetSet","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, <a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $newval)","Define a new first level entry",2],["RecursiveMenuIterator::menuOffsetSetRecursive","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_menuOffsetSetRecursive","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, <a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $newval)","Define a new entry recursively",2],["AbstractAccessible::__set","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___set","(string $var, string $val)","Set an object property, accessing it by \"setVariable\"",2],["AbstractAccessible::__get","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___get","(string $var)","Get an object property, accessing it by \"getVariable\"",2],["AbstractAccessible::__isset","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___isset","(string $var)","Test if an object property has been set, using the",2],["AbstractAccessible::__unset","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___unset","(string $var)","Test if an object property has been set, using the",2],["AbstractOptionable::setOptions","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_setOptions","(array $options)","Set an array of options",2],["AbstractOptionable::setOption","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_setOption","(string $name, mixed $value)","Set the value of a specific option",2],["AbstractOptionable::getOptions","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_getOptions","()","Get the array of options",2],["AbstractOptionable::getOption","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_getOption","(string $name, mixed $default = null)","Get the value of a specific option",2],["AbstractResponse::setBody","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_setBody","(string $body)","",2],["AbstractResponse::getBody","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_getBody","()","",2],["AbstractResponse::setHeaders","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_setHeaders","(array $params)","",2],["AbstractResponse::addHeader","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_addHeader","(string $name, string $value = null)","",2],["AbstractResponse::getHeaders","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_getHeaders","()","",2],["AbstractResponse::getHeader","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_getHeader","(string $name)","",2],["AbstractResponse::hasHeader","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_hasHeader","(string $name)","",2],["AbstractResponse::renderHeaders","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_renderHeaders","()","",2],["AbstractResponse::redirect","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_redirect","(string $url, bool $permanent = false)","This method must process a header redirection to the",2],["AbstractResponse::send","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_send","(string $content = null, string $type = null)","This method must render the response in `$type` content-type",2],["AbstractResponse::download","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_download","(string $file = null, string $type = null, string $file_name = null)","This method must process a browser file download in",2],["AbstractResponse::flush","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_flush","(string $file_content = null, string $type = null)","This method must render a raw file content in `$type`",2],["AbstractSingleton::getInstance","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method_getInstance","()","Static object getter: creation of an instance of the",2],["AbstractSingleton::getInstanceByClassname","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method_getInstanceByClassname","($classname)","Static object getter: creation of an instance from",2],["AbstractSingleton::__clone","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method___clone","()","Object cloning is avoid",2],["AbstractStaticCreator::init","Patterns\\Abstracts\\AbstractStaticCreator","Patterns\/Abstracts\/AbstractStaticCreator.html#method_init","()","Force any descendant to implement a special constructor",2],["AbstractStaticCreator::__construct","Patterns\\Abstracts\\AbstractStaticCreator","Patterns\/Abstracts\/AbstractStaticCreator.html#method___construct","()","Magic default constructor for non-static use",2],["AbstractStaticCreator::create","Patterns\\Abstracts\\AbstractStaticCreator","Patterns\/Abstracts\/AbstractStaticCreator.html#method_create","()","Static creation of the object",2],["AbstractView::setView","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_setView","(string $path)","Set the view name to parse",2],["AbstractView::getView","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getView","()","Get the view name",2],["AbstractView::setOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_setOutput","(string $str)","Set the output content",2],["AbstractView::appendOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_appendOutput","(string $content)","Append the output content to the existing content",2],["AbstractView::prependOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_prependOutput","(string $content)","Prepend the output content to the existing content",2],["AbstractView::getOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getOutput","()","Get the current view rendering output",2],["AbstractView::resetParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_resetParams","()","Reset the parameters for the current view on an empty",2],["AbstractView::setParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_setParams","(array $params)","Set an array of the parameters for the current view",2],["AbstractView::addParam","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_addParam","(string $name, mixed $val)","Add an entry of parameters for the current view",2],["AbstractView::getParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getParams","(bool $alone = false)","Get the parameters for the current view",2],["AbstractView::getParam","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getParam","(string $name, mixed $default = null)","Get a value of the parameters for the current view",2],["AbstractView::render","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_render","(string $view_file, array $params = array())","Building of a view content including a view file passing",2],["AbstractView::getDefaultViewParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getDefaultViewParams","()","Get the default parameters for all views",2],["AbstractView::getTemplate","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getTemplate","(string $name)","Search a view file in the current file system",2],["Collection::__construct","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method___construct","(array $content = array())","Construction of a collection",2],["Collection::setCollection","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_setCollection","(array $content)","Set the collection content",2],["Collection::getCollection","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_getCollection","()","Get the collection content",2],["Collection::rewind","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_rewind","()","Put the index value at the beginning of the collection",2],["Collection::reset","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_reset","()","Alias of self::rewind()",2],["Collection::end","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_end","()","Put the index value at the last index",2],["Collection::next","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_next","()","Increase the current index",2],["Collection::prev","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_prev","()","Decrease the current index",2],["Collection::valid","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_valid","()","Check if current value is set",2],["Collection::current","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_current","()","Gets the value of the collection at current index",2],["Collection::pos","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_pos","()","Alias of self::current()",2],["Collection::key","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_key","()","Gets the current index",2],["Collection::seek","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_seek","(int|string $index)","Define the current index",2],["Collection::offsetSet","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetSet","($offset, $value)","Set a collection entry",2],["Collection::offsetExists","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetExists","($offset)","Check if a collection entry exists",2],["Collection::offsetUnset","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetUnset","($offset)","Unset a collection entry",2],["Collection::offsetGet","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetGet","($offset)","Get a collection entry",2],["Collection::push","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_push","(mixed $value)","Pushes a new value at the end of the collection, with",2],["Collection::count","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_count","()","Counts the number of entries in the collection",2],["Collection::shift","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_shift","()","Deletes a value at the beginning of the collection",2],["Collection::pop","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_pop","()","Deletes a value at the end of the collection",2],["Collection::unshift","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_unshift","(mixed $value)","Pushes a new value at the beginning of the collection,",2],["Collection::each","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_each","()","Returns the current key=>value pair and put increase",2],["Collection::in_array","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_in_array","(mixed $value)","Search a value in the current array and returns true",2],["Collection::key_exists","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_key_exists","(mixed $index)","Search if an entry exists with this key",2],["Collection::values","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_values","()","Returns an array with all values of the original array",2],["Collection::keys","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_keys","()","Returns an array with all keys of the original array",2],["Collection::getEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_getEntry","(int|string $index, mixed $default = null)","Gets a collection entry value by its index",2],["Collection::setEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_setEntry","(int|string|null $index = null, mixed $value)","Sets a collection entry value by its index",2],["Collection::addEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_addEntry","($index = null, $value)","Add a collection entry value (alias of \"setEntry()\")",2],["Collection::issetEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_issetEntry","(int|string $index)","Check if a collection entry exists by its index",2],["Collection::unsetEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_unsetEntry","(int|string $index)","Deletes a collection entry by its index",2],["ConfigurationRegistry::__construct","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method___construct","()","Construction : initialization of the registry on an",2],["ConfigurationRegistry::set","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_set","(string $name, mixed $value, string $scope = null)","Set the value of a specific option with depth",2],["ConfigurationRegistry::get","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_get","(string $name, mixed $default = null, string $scope = null)","Get the value of a specific option with depth",2],["ConfigurationRegistry::setConfigs","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_setConfigs","(array $options, string $scope = null)","Set an array of options",2],["ConfigurationRegistry::setConfig","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_setConfig","(string $name, mixed $value, string $scope = null)","Set the value of a specific option (no scope notation",2],["ConfigurationRegistry::addConfig","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_addConfig","($name, $value, $scope = null)","Alias of the `setConfig` method",2],["ConfigurationRegistry::getConfigs","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_getConfigs","(mixed $default = null, string $scope = null)","Get the array of options (from a specific scope if",2],["ConfigurationRegistry::getConfig","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_getConfig","(string $name, mixed $default = null, string $scope = null)","Get the value of a specific option (no scope notation",2],["Registry::dump","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_dump","()","Get current registry",2],["Registry::__set","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method___set","(string $var = null, mixed $val = null)","Set an entry in the instance registry (magic setter)",2],["Registry::__get","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method___get","(string $var = null)","Get an entry from the instance registry (magic getter)",2],["Registry::setEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_setEntry","(null|string $var = null, null|mixed $val = null, <abbr title=\"Patterns\\Commons\\false\">false<\/abbr>|string $section = false)","Set an entry in the instance registry",2],["Registry::addEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_addEntry","(mixed $val = null, string $section = false)","Add an entry in a section of the instance registry",2],["Registry::getEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getEntry","(string $var = null, string $section = false, mixed $default = null)","Get an entry from the instance registry",2],["Registry::isEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_isEntry","(string $var = null, string $section = false)","Check if an entry exists in registry",2],["Registry::getKey","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getKey","(mixed $val = null, string $var = null, string $section = false)","Search a key in registry",2],["Registry::dumpStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_dumpStack","(string $index = null, mixed $default = null)","Get a full stack from registry stacks",2],["Registry::saveStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_saveStack","(string $index = null, bool $and_clean = false)","Save a stack of entries in registry",2],["Registry::isStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_isStack","(string $index = null)","Check if a stack exists in registry",2],["Registry::loadStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_loadStack","(string $index = null)","Load a stack in registry (actual registry is overwrites)",2],["Registry::getStackEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getStackEntry","(string $var = null, string $section = false, string $stack = null, mixed $default = null)","Get a stack entry of the registry stacks",2],["Registry::getStackKey","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getStackKey","(string $val = null, string $section = false, string $stack = null, mixed $default = null)","Get the key of a stack entry of the registry stacks",2],["ArrayInterface::shift","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_shift","()","Deletes a value at the beginning of the collection",2],["ArrayInterface::pop","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_pop","()","Deletes a value at the end of the collection",2],["ArrayInterface::unshift","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_unshift","(mixed $value)","Pushes a new value at the beginning of the collection,",2],["ArrayInterface::push","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_push","(mixed $value)","Pushes a new value at the end of the collection, with",2],["ArrayInterface::count","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_count","()","Counts the number of entries in the collection",2],["ArrayInterface::each","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_each","()","Returns the current key=>value pair and put increase",2],["ArrayInterface::in_array","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_in_array","(mixed $value)","Search a value in the current array and returns true",2],["ArrayInterface::key_exists","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_key_exists","(mixed $index)","Search if an entry exists with this key",2],["ArrayInterface::values","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_values","()","Returns an array with all values of the original array",2],["ArrayInterface::keys","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_keys","()","Returns an array with all keys of the original array",2],["CachableInterface::getCacheKey","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_getCacheKey","()","Get the key of the current cached item",2],["CachableInterface::isCached","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_isCached","()","Test if an item is already cached and if its cache",2],["CachableInterface::getCache","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_getCache","()","Get a cache content for an item",2],["CachableInterface::setCache","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_setCache","(mixed $content)","Set a cache content for an item",2],["CachableInterface::invalidateCache","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_invalidateCache","()","Clear a cache content for an item",2],["CollectionInterface::setCollection","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_setCollection","(array $collection)","Set the collection content",2],["CollectionInterface::getCollection","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_getCollection","()","Get the collection content",2],["CollectionInterface::getEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_getEntry","(int|string $index, mixed $default = null)","Gets a collection entry value by its index",2],["CollectionInterface::setEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_setEntry","(int|string|null $index = null, mixed $value)","Sets a collection entry value by its index",2],["CollectionInterface::issetEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_issetEntry","(int|string $index)","Check if a collection entry exists by its index",2],["CollectionInterface::unsetEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_unsetEntry","(int|string $index)","Deletes a collection entry by its index",2],["CrudInterface::create","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_create","(array $data)","",2],["CrudInterface::read","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_read","(int $id)","",2],["CrudInterface::update","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_update","(int $id, array $data)","",2],["CrudInterface::delete","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_delete","(int $id)","",2],["DebuggableInterface::setDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_setDebug","(mixed $debug)","",2],["DebuggableInterface::getDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_getDebug","()","",2],["DebuggableInterface::isDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_isDebug","()","",2],["IteratorInterface::reset","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_reset","()","Put the index value at 0 This must be an alias of \\Iterator::rewind()",2],["IteratorInterface::end","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_end","()","Put the index value at the last index",2],["IteratorInterface::pos","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_pos","()","Get the current index This must be an alias of \\Iterator::current()",2],["IteratorInterface::prev","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_prev","()","Decrease the current index",2],["OptionableInterface::setOptions","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_setOptions","(array $options)","Set an array of options",2],["OptionableInterface::setOption","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_setOption","(string $name, mixed $value)","Set the value of a specific option",2],["OptionableInterface::getOptions","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_getOptions","()","Get the array of options",2],["OptionableInterface::getOption","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_getOption","(string $name, mixed $default = null)","Get the value of a specific option",2],["RepositoryInterface::getAll","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_getAll","()","",2],["RepositoryInterface::getOneBy","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_getOneBy","(string $prop_name, mixed $value)","",2],["RepositoryInterface::exists","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_exists","(string $prop_name, mixed $value)","",2],["RequestInterface::getUrl","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getUrl","()","",2],["RequestInterface::getProtocol","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getProtocol","()","",2],["RequestInterface::getMethod","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getMethod","()","",2],["RequestInterface::getHeaders","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getHeaders","()","",2],["RequestInterface::getArguments","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getArguments","()","",2],["RequestInterface::getData","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getData","()","",2],["RequestInterface::getFiles","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getFiles","()","",2],["RequestInterface::getSession","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getSession","()","",2],["RequestInterface::getCookies","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getCookies","()","",2],["RequestInterface::getAuthentication","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getAuthentication","()","",2],["ResponseInterface::redirect","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_redirect","(string $url, bool $permanent = false)","Make a redirection by headers",2],["ResponseInterface::send","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_send","(string $content = null, string $type = null)","Send the response to the device",2],["ResponseInterface::download","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_download","(string $file = null, string $type = null, string $file_name = null)","Force device to download a file",2],["ResponseInterface::flush","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_flush","(string $file_content = null, string $type = null)","Flush (display) a file content",2],["RouterInterface::setRoutes","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_setRoutes","(<a href=\"Patterns\/Commons\/Collection.html\"><abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr><\/a> $collection)","Set the routes collection",2],["RouterInterface::getRoutes","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_getRoutes","()","Get the routes collection",2],["RouterInterface::routeExists","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_routeExists","(string $route)","Check if a route exists",2],["RouterInterface::getRoute","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_getRoute","()","Get the current route requested",2],["RouterInterface::generateUrl","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_generateUrl","(mixed $route_infos, string $base_uri = null, string $hash = null, string $separator = &#039;&amp;amp;&#039;)","Build a new route URL",2],["RouterInterface::matchUrl","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_matchUrl","(mixed $pathinfo)","Distribute the current URL to the corresponding route",2],["RouterInterface::distribute","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_distribute","()","Actually dispatch the current route",2],["RouterInterface::forward","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_forward","(mixed $pathinfo, string $hash = null)","Forward the application to a new route (no HTTP redirect)",2],["RouterInterface::redirect","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_redirect","(mixed $pathinfo, string $hash = null)","Make a redirection to a new route (HTTP redirect)",2],["StaticCreatorInterface::create","Patterns\\Interfaces\\StaticCreatorInterface","Patterns\/Interfaces\/StaticCreatorInterface.html#method_create","()","",2],["StaticOptionableInterface::setOptions","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_setOptions","(array $options)","Set an array of options",2],["StaticOptionableInterface::setOption","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_setOption","($name, $value)","Set the value of a specific option",2],["StaticOptionableInterface::getOptions","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_getOptions","()","Get the array of options",2],["StaticOptionableInterface::getOption","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_getOption","($name, $default = null)","Get the value of a specific option",2],["TranslatableInterface::setLanguage","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_setLanguage","($lang, $throw_errors = true, $force_rebuild = false)","",2],["TranslatableInterface::getLanguage","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_getLanguage","()","",2],["TranslatableInterface::translate","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_translate","($index, array $args = array(), $lang = null)","",2],["TranslatableInterface::pluralize","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_pluralize","(array $indexes = array(), $number, array $args = array(), $lang = null)","",2],["UserInterface::authoring","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_authoring","($autologin = false)","",2],["UserInterface::signin","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_signin","(array $data, $autologin = false)","",2],["UserInterface::login","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_login","(array $data = array())","",2],["UserInterface::logout","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_logout","(array $data = array())","",2],["UserInterface::isLogged","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_isLogged","(array $data = array())","",2],["UserInterface::setUserInfos","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_setUserInfos","(array $data)","",2],["UserInterface::addUserInfo","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_addUserInfo","($var, $val)","",2],["ViewInterface::render","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_render","($view_file, array $params = array())","Building of a view content including a view file passing",2],["ViewInterface::getDefaultViewParams","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_getDefaultViewParams","()","Get an array of the default parameters for all views",2],["ViewInterface::getTemplate","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_getTemplate","($name)","Get a template file path (relative to `option['templates_dir']`)",2],["WebPageInterface::buildMenu","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildMenu","()","Build the page menu",2],["WebPageInterface::getMenu","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMenu","()","Get the page menu",2],["WebPageInterface::buildTitle","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildTitle","()","Build the page title",2],["WebPageInterface::getTitle","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getTitle","()","Get the page title",2],["WebPageInterface::buildMetas","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildMetas","()","Build the page metas",2],["WebPageInterface::getMetas","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMetas","()","Get the page metas",2],["WebPageInterface::getMeta","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMeta","($name)","Get one page meta",2],["SplClassLoader::__construct","SplClassLoader","SplClassLoader.html#method___construct","($ns = null, $includePath = null)","Creates a new SplClassLoader that loads classes",2],["SplClassLoader::setNamespaceSeparator","SplClassLoader","SplClassLoader.html#method_setNamespaceSeparator","(string $sep)","Sets the namespace separator used by classes in the",2],["SplClassLoader::getNamespaceSeparator","SplClassLoader","SplClassLoader.html#method_getNamespaceSeparator","()","Gets the namespace seperator used by classes in the",2],["SplClassLoader::setIncludePath","SplClassLoader","SplClassLoader.html#method_setIncludePath","(string $includePath)","Sets the base include path for all class files in the",2],["SplClassLoader::getIncludePath","SplClassLoader","SplClassLoader.html#method_getIncludePath","()","Gets the base include path for all class files in the",2],["SplClassLoader::setFileExtension","SplClassLoader","SplClassLoader.html#method_setFileExtension","(string $fileExtension)","Sets the file extension of class files in the namespace",2],["SplClassLoader::getFileExtension","SplClassLoader","SplClassLoader.html#method_getFileExtension","()","Gets the file extension of class files in the namespace",2],["SplClassLoader::register","SplClassLoader","SplClassLoader.html#method_register","()","Installs this class loader on the SPL autoload stack.",2],["SplClassLoader::unregister","SplClassLoader","SplClassLoader.html#method_unregister","()","Uninstalls this class loader from the SPL autoloader",2],["SplClassLoader::loadClass","SplClassLoader","SplClassLoader.html#method_loadClass","(string $className)","Loads the given class or interface.",2],["AbstractController::__construct","WebDocBook\\Abstracts\\AbstractController","WebDocBook\/Abstracts\/AbstractController.html#method___construct","(string $path = null)","",2],["AbstractController::setPath","WebDocBook\\Abstracts\\AbstractController","WebDocBook\/Abstracts\/AbstractController.html#method_setPath","(string $path)","Define the path of the document to treat",2],["AbstractController::getPath","WebDocBook\\Abstracts\\AbstractController","WebDocBook\/Abstracts\/AbstractController.html#method_getPath","()","Get the path of the document to treat",2],["AbstractFrontController::getTerminal","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getTerminal","()","",2],["AbstractFrontController::getResponse","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getResponse","()","",2],["AbstractFrontController::getRequest","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getRequest","()","",2],["AbstractFrontController::setController","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_setController","(<a href=\"WebDocBook\/Abstracts\/AbstractController.html\"><abbr title=\"WebDocBook\\Abstracts\\AbstractController\">AbstractController<\/abbr><\/a> $ctrl)","",2],["AbstractFrontController::getController","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getController","()","",2],["AbstractFrontController::setTemplateBuilder","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_setTemplateBuilder","(<a href=\"WebDocBook\/TemplateBuilder.html\"><abbr title=\"WebDocBook\\TemplateBuilder\">TemplateBuilder<\/abbr><\/a> $builder)","",2],["AbstractFrontController::getTemplateBuilder","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getTemplateBuilder","()","",2],["AbstractFrontController::setMarkdownParser","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_setMarkdownParser","(<a href=\"MarkdownExtended\/MarkdownExtended.html\"><abbr title=\"MarkdownExtended\\MarkdownExtended\">MarkdownExtended<\/abbr><\/a> $parser)","",2],["AbstractFrontController::getMarkdownParser","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getMarkdownParser","()","",2],["AbstractFrontController::getSession","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getSession","()","",2],["AbstractFrontController::distribute","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_distribute","()","",2],["AbstractFrontController::setInputFile","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_setInputFile","(string $path)","",2],["AbstractFrontController::getInputFile","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getInputFile","()","",2],["AbstractFrontController::setInputPath","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_setInputPath","(string $path)","",2],["AbstractFrontController::getInputPath","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getInputPath","()","",2],["AbstractFrontController::setQuery","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_setQuery","(array $uri)","",2],["AbstractFrontController::getQuery","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getQuery","()","",2],["AbstractFrontController::setAction","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_setAction","(string $action)","",2],["AbstractFrontController::getAction","WebDocBook\\Abstracts\\AbstractFrontController","WebDocBook\/Abstracts\/AbstractFrontController.html#method_getAction","()","",2],["Exception::__construct","WebDocBook\\Composer\\Exception","WebDocBook\/Composer\/Exception.html#method___construct","(string $message = &#039;&#039;, int $code, <a href=\"WebDocBook\/Composer\/Exception.html\"><abbr title=\"WebDocBook\\Composer\\Exception\">Exception<\/abbr><\/a> $previous = null, <a href=\"WebDocBook\/Composer\/ScriptInterface.html\"><abbr title=\"WebDocBook\\Composer\\ScriptInterface\">ScriptInterface<\/abbr><\/a> $cmd = null)","",2],["Manager::init","WebDocBook\\Composer\\Manager","WebDocBook\/Composer\/Manager.html#method_init","(<abbr title=\"Composer\\Script\\Event\">Event<\/abbr> $event, <a href=\"WebDocBook\/Composer\/ScriptInterface.html\"><abbr title=\"WebDocBook\\Composer\\ScriptInterface\">ScriptInterface<\/abbr><\/a> $cmd)","Initialize WebDocBook environment",2],["Manager::error","WebDocBook\\Composer\\Manager","WebDocBook\/Composer\/Manager.html#method_error","(string $str, <a href=\"WebDocBook\/Composer\/Exception.html\"><abbr title=\"WebDocBook\\Composer\\Exception\">Exception<\/abbr><\/a> $e = null)","",2],["Manager::info","WebDocBook\\Composer\\Manager","WebDocBook\/Composer\/Manager.html#method_info","(<abbr title=\"WebDocBook\\Composer\\$str\">$str<\/abbr> $str)","",2],["ScriptInterface::getName","WebDocBook\\Composer\\ScriptInterface","WebDocBook\/Composer\/ScriptInterface.html#method_getName","()","",2],["ScriptInterface::run","WebDocBook\\Composer\\ScriptInterface","WebDocBook\/Composer\/ScriptInterface.html#method_run","(<abbr title=\"WebDocBook\\Composer\\Composer\\Script\\Event\">Event<\/abbr> $event)","",2],["ClearCache::getName","WebDocBook\\Composer\\Script\\ClearCache","WebDocBook\/Composer\/Script\/ClearCache.html#method_getName","()","",2],["ClearCache::run","WebDocBook\\Composer\\Script\\ClearCache","WebDocBook\/Composer\/Script\/ClearCache.html#method_run","(<abbr title=\"Composer\\Script\\Event\">Event<\/abbr> $event)","",2],["ClearI18n::getName","WebDocBook\\Composer\\Script\\ClearI18n","WebDocBook\/Composer\/Script\/ClearI18n.html#method_getName","()","",2],["ClearI18n::run","WebDocBook\\Composer\\Script\\ClearI18n","WebDocBook\/Composer\/Script\/ClearI18n.html#method_run","(<abbr title=\"Composer\\Script\\Event\">Event<\/abbr> $event)","",2],["Initialize::getName","WebDocBook\\Composer\\Script\\Initialize","WebDocBook\/Composer\/Script\/Initialize.html#method_getName","()","",2],["Initialize::run","WebDocBook\\Composer\\Script\\Initialize","WebDocBook\/Composer\/Script\/Initialize.html#method_run","(<abbr title=\"Composer\\Script\\Event\">Event<\/abbr> $event)","",2],["DefaultController::indexAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_indexAction","(string $path)","Default action",2],["DefaultController::directoryAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_directoryAction","(string $path)","Directory path action",2],["DefaultController::fileAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_fileAction","(string $path)","File path action",2],["DefaultController::rssFeedAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_rssFeedAction","(string $path)","RSS action for concerned path",2],["DefaultController::sitemapAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_sitemapAction","(string $path)","Sitemap action for a path",2],["DefaultController::htmlOnlyAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_htmlOnlyAction","(string $path)","HTML only version of a path",2],["DefaultController::plainTextAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_plainTextAction","(string $path)","Raw plain text action of a path",2],["DefaultController::downloadAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_downloadAction","(string $path)","Download action of a path",2],["DefaultController::searchAction","WebDocBook\\Controller\\DefaultController","WebDocBook\/Controller\/DefaultController.html#method_searchAction","(string $path)","Global search action of a path",2],["WebDocBookController::notFoundAction","WebDocBook\\Controller\\WebDocBookController","WebDocBook\/Controller\/WebDocBookController.html#method_notFoundAction","(string $str = &#039;&#039;)","The 404 Not Found action",2],["WebDocBookController::forbiddenAction","WebDocBook\\Controller\\WebDocBookController","WebDocBook\/Controller\/WebDocBookController.html#method_forbiddenAction","(string $str = &#039;&#039;)","The 403 Forbidden action",2],["WebDocBookController::errorAction","WebDocBook\\Controller\\WebDocBookController","WebDocBook\/Controller\/WebDocBookController.html#method_errorAction","(string $str = &#039;&#039;)","The 500 error action",2],["WebDocBookController::creditsAction","WebDocBook\\Controller\\WebDocBookController","WebDocBook\/Controller\/WebDocBookController.html#method_creditsAction","()","The credits action",2],["WebDocBookController::docbookdocAction","WebDocBook\\Controller\\WebDocBookController","WebDocBook\/Controller\/WebDocBookController.html#method_docbookdocAction","()","The internal documentation action",2],["WebDocBookController::adminAction","WebDocBook\\Controller\\WebDocBookController","WebDocBook\/Controller\/WebDocBookController.html#method_adminAction","()","Admin panel action",2],["WebDocBookController::saveadminAction","WebDocBook\\Controller\\WebDocBookController","WebDocBook\/Controller\/WebDocBookController.html#method_saveadminAction","()","",2],["Exception::__construct","WebDocBook\\Exception\\Exception","WebDocBook\/Exception\/Exception.html#method___construct","(string $message = &#039;&#039;, int $code, <a href=\"WebDocBook\/Exception\/Exception.html\"><abbr title=\"WebDocBook\\Exception\\Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["NotFoundException::__construct","WebDocBook\\Exception\\NotFoundException","WebDocBook\/Exception\/NotFoundException.html#method___construct","(string $message = &#039;&#039;, int $code, <a href=\"WebDocBook\/Exception\/Exception.html\"><abbr title=\"WebDocBook\\Exception\\Exception\">Exception<\/abbr><\/a> $previous = null, string $alt_link = null)","",2],["RuntimeException::__construct","WebDocBook\\Exception\\RuntimeException","WebDocBook\/Exception\/RuntimeException.html#method___construct","(string $message = &#039;&#039;, int $code, <a href=\"WebDocBook\/Exception\/Exception.html\"><abbr title=\"WebDocBook\\Exception\\Exception\">Exception<\/abbr><\/a> $previous = null)","",2],["FrontController::log","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_log","(<abbr title=\"WebDocBook\\$message\">$message<\/abbr> $message, string $level = &#039;debug&#039;, array $context = array(), null $logname = null)","",2],["FrontController::distribute","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_distribute","(bool $return = false)","",2],["FrontController::display","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_display","(string $content = &#039;&#039;, null $template_name = null, array $params = array(), bool $send = false)","",2],["FrontController::setInputFile","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_setInputFile","(string $path)","",2],["FrontController::getInputFile","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_getInputFile","()","",2],["FrontController::setInputPath","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_setInputPath","(string $path)","",2],["FrontController::getInputPath","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_getInputPath","()","",2],["FrontController::setQuery","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_setQuery","(array $uri)","",2],["FrontController::getQuery","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_getQuery","()","",2],["FrontController::setAction","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_setAction","(string $type)","",2],["FrontController::getAction","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_getAction","()","",2],["FrontController::getMarkdownParser","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_getMarkdownParser","()","",2],["FrontController::getTemplate","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_getTemplate","(<abbr title=\"WebDocBook\\$name\">$name<\/abbr> $name)","",2],["FrontController::getChapters","WebDocBook\\FrontController","WebDocBook\/FrontController.html#method_getChapters","()","",2],["Helper::log","WebDocBook\\Helper","WebDocBook\/Helper.html#method_log","(<abbr title=\"WebDocBook\\$message\">$message<\/abbr> $message, string $level = &#039;debug&#039;, array $context = array(), null $logname = null)","",2],["Helper::getSafeIdString","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getSafeIdString","(<abbr title=\"WebDocBook\\$string\">$string<\/abbr> $string)","",2],["Helper::getSlug","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getSlug","(<abbr title=\"WebDocBook\\$string\">$string<\/abbr> $string)","",2],["Helper::buildPageTitle","WebDocBook\\Helper","WebDocBook\/Helper.html#method_buildPageTitle","(<abbr title=\"WebDocBook\\$filename\">$filename<\/abbr> $filename)","",2],["Helper::getBreadcrumbs","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getBreadcrumbs","(null $path = null)","",2],["Helper::getSecuredRealpath","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getSecuredRealpath","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Helper::getRelativePath","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getRelativePath","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Helper::getAbsolutePath","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getAbsolutePath","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Helper::getAbsoluteRoute","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getAbsoluteRoute","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Helper::ensureDirectoryExists","WebDocBook\\Helper","WebDocBook\/Helper.html#method_ensureDirectoryExists","(<abbr title=\"WebDocBook\\$directory\">$directory<\/abbr> $directory)","",2],["Helper::getDateTimeFromTimestamp","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getDateTimeFromTimestamp","(<abbr title=\"WebDocBook\\$timestamp\">$timestamp<\/abbr> $timestamp)","",2],["Helper::getRoute","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getRoute","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path, null $type = null, bool $with_interface = false)","",2],["Helper::getDirectorySize","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getDirectorySize","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Helper::fetchArguments","WebDocBook\\Helper","WebDocBook\/Helper.html#method_fetchArguments","(string $_class = null, string $_method = null, mixed $args = null)","Launch a class's method fetching arguments",2],["Helper::makeSearch","WebDocBook\\Helper","WebDocBook\/Helper.html#method_makeSearch","(<abbr title=\"WebDocBook\\$regexp\">$regexp<\/abbr> $regexp, null $path = null)","",2],["Helper::getFileLinesCount","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getFileLinesCount","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Helper::getProfiler","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getProfiler","()","",2],["Helper::isTranslationFile","WebDocBook\\Helper","WebDocBook\/Helper.html#method_isTranslationFile","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Helper::isFileValid","WebDocBook\\Helper","WebDocBook\/Helper.html#method_isFileValid","(<abbr title=\"WebDocBook\\$file_path\">$file_path<\/abbr> $file_path)","",2],["Helper::isDirValid","WebDocBook\\Helper","WebDocBook\/Helper.html#method_isDirValid","(<abbr title=\"WebDocBook\\$file_path\">$file_path<\/abbr> $file_path)","",2],["Helper::getGitConfig","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getGitConfig","(<abbr title=\"WebDocBook\\$repo_path\">$repo_path<\/abbr> $repo_path)","",2],["Helper::rssEncode","WebDocBook\\Helper","WebDocBook\/Helper.html#method_rssEncode","(<abbr title=\"WebDocBook\\$str\">$str<\/abbr> $str, int $cut = 800)","",2],["Helper::getFlatDirscans","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getFlatDirscans","(<abbr title=\"WebDocBook\\$dirscan\">$dirscan<\/abbr> $dirscan, bool $order_by_date = false)","",2],["Helper::getIcon","WebDocBook\\Helper","WebDocBook\/Helper.html#method_getIcon","(null $type = null, string $class = &#039;&#039;)","",2],["Request::__construct","WebDocBook\\HttpFundamental\\Request","WebDocBook\/HttpFundamental\/Request.html#method___construct","()","Constructor : defines the current URL and gets the",2],["Request::setRouting","WebDocBook\\HttpFundamental\\Request","WebDocBook\/HttpFundamental\/Request.html#method_setRouting","(array $routing)","",2],["Request::getRouting","WebDocBook\\HttpFundamental\\Request","WebDocBook\/HttpFundamental\/Request.html#method_getRouting","()","",2],["Request::parseWDBRequest","WebDocBook\\HttpFundamental\\Request","WebDocBook\/HttpFundamental\/Request.html#method_parseWDBRequest","()","",2],["Request::getWDBRouting","WebDocBook\\HttpFundamental\\Request","WebDocBook\/HttpFundamental\/Request.html#method_getWDBRouting","()","",2],["Response::__construct","WebDocBook\\HttpFundamental\\Response","WebDocBook\/HttpFundamental\/Response.html#method___construct","(null $content = null, null $type = null)","Constructor : defines the current URL and gets the",2],["Response::send","WebDocBook\\HttpFundamental\\Response","WebDocBook\/HttpFundamental\/Response.html#method_send","(null $content = null, null $type = null)","Send the response to the device",2],["Response::redirect","WebDocBook\\HttpFundamental\\Response","WebDocBook\/HttpFundamental\/Response.html#method_redirect","(mixed $pathinfo, string $hash = null)","Make a redirection to a new route (HTTP redirect)",2],["Kernel::debug","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_debug","()","",2],["Kernel::__set_state","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method___set_state","(array $vars)","",2],["Kernel::init","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_init","()","",2],["Kernel::boot","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_boot","(bool $soft_boot = false)","",2],["Kernel::isDevMode","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_isDevMode","()","",2],["Kernel::getConfig","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_getConfig","(string $name = null, mixed $default = null, string $scope = &#039;webdocbook&#039;)","Get the value of a specific option with depth",2],["Kernel::setConfig","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_setConfig","(mixed $value, string $scope)","Set an array of options",2],["Kernel::get","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_get","(<abbr title=\"WebDocBook\\$name\">$name<\/abbr> $name)","",2],["Kernel::getPath","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_getPath","(string $name, bool $local = false, string $base_path = &#039;app_base_path&#039;)","",2],["Kernel::findDocument","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_findDocument","(<abbr title=\"WebDocBook\\$path\">$path<\/abbr> $path)","",2],["Kernel::findController","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_findController","(<abbr title=\"WebDocBook\\$route\">$route<\/abbr> $route)","",2],["Kernel::findTemplate","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_findTemplate","(<abbr title=\"WebDocBook\\$filename\">$filename<\/abbr> $filename)","",2],["Kernel::fallbackFinder","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_fallbackFinder","(<abbr title=\"WebDocBook\\$filename\">$filename<\/abbr> $filename, string $filetype)","",2],["Kernel::installConfig","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_installConfig","()","Install WebDocBook's config files",2],["Kernel::clearCache","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_clearCache","()","Clear WebDocBook's cache (var\/cache\/)",2],["Kernel::clearI18n","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_clearI18n","()","Clear WebDocBook's language files (var\/i18n\/)",2],["Kernel::ensurePathExists","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_ensurePathExists","(<abbr title=\"WebDocBook\\$path_name\">$path_name<\/abbr> $path_name)","",2],["Kernel::ensurePathIsWritable","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_ensurePathIsWritable","(<abbr title=\"WebDocBook\\$path_name\">$path_name<\/abbr> $path_name)","",2],["Kernel::parseIniFile","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_parseIniFile","(<abbr title=\"WebDocBook\\$file\">$file<\/abbr> $file)","",2],["Kernel::remove","WebDocBook\\Kernel","WebDocBook\/Kernel.html#method_remove","(string $path)","",2],["WebDocBook::buildTitle","WebDocBook\\MarkdownExtended\\OutputFormat\\WebDocBook","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBook.html#method_buildTitle","(<abbr title=\"WebDocBook\\MarkdownExtended\\OutputFormat\\$text\">$text<\/abbr> $text, array $attributes = array())","",2],["WebDocBook::buildMetaData","WebDocBook\\MarkdownExtended\\OutputFormat\\WebDocBook","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBook.html#method_buildMetaData","(null $text = null, array $attributes = array())","",2],["WebDocBook::buildLink","WebDocBook\\MarkdownExtended\\OutputFormat\\WebDocBook","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBook.html#method_buildLink","(null $text = null, array $attributes = array())","",2],["WebDocBook::addTitleAddon","WebDocBook\\MarkdownExtended\\OutputFormat\\WebDocBook","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBook.html#method_addTitleAddon","(<abbr title=\"WebDocBook\\MarkdownExtended\\OutputFormat\\$text\">$text<\/abbr> $text, array $attributes = array())","Title-add-ons",2],["WebDocBookHelper::getConfigOrDefault","WebDocBook\\MarkdownExtended\\OutputFormat\\WebDocBookHelper","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBookHelper.html#method_getConfigOrDefault","(string $var)","",2],["WebDocBookHelper::getToc","WebDocBook\\MarkdownExtended\\OutputFormat\\WebDocBookHelper","WebDocBook\/MarkdownExtended\/OutputFormat\/WebDocBookHelper.html#method_getToc","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $md_content, <a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formatter, array $attributes = null)","Build a hierarchical menu",2],["TemplateBuilder::__construct","WebDocBook\\TemplateBuilder","WebDocBook\/TemplateBuilder.html#method___construct","()","Constructor  The TWIG template engine is designed to",2],["TemplateBuilder::render","WebDocBook\\TemplateBuilder","WebDocBook\/TemplateBuilder.html#method_render","(string $view, array $params = array())","Building of a view content by Twig",2],["TemplateBuilder::renderSafe","WebDocBook\\TemplateBuilder","WebDocBook\/TemplateBuilder.html#method_renderSafe","(string $view, array $params = array())","Building of a view content including a view file passing",2],["TemplateBuilder::getDefaultViewParams","WebDocBook\\TemplateBuilder","WebDocBook\/TemplateBuilder.html#method_getDefaultViewParams","()","Get an array of the default parameters for all views",2],["TemplateBuilder::getTemplate","WebDocBook\\TemplateBuilder","WebDocBook\/TemplateBuilder.html#method_getTemplate","(string $name)","Get a template file path (relative to `option['templates_dir']`)",2],["TemplateBuilder::getTwigEngine","WebDocBook\\TemplateBuilder","WebDocBook\/TemplateBuilder.html#method_getTwigEngine","()","",2],["Filesystem::slashDirname","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_slashDirname","(string $dirname = null)","Get a dirname with one and only trailing slash",2],["Filesystem::isGitClone","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_isGitClone","(string $path = null)","Test if a path seems to be a git clone",2],["Filesystem::isDotPath","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_isDotPath","(string $path = null)","Test if a filename seems to have a dot as first character",2],["Filesystem::ensureExists","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_ensureExists","(<abbr title=\"WebDocBook\\Util\\$path\">$path<\/abbr> $path)","Test if a directory exists and try to create it if",2],["Filesystem::ensureIsWritable","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_ensureIsWritable","(<abbr title=\"WebDocBook\\Util\\$path\">$path<\/abbr> $path)","Test if a path exists and is writable",2],["Filesystem::remove","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_remove","(string $path, bool $parent = true)","Try to remove a path",2],["Filesystem::parseIni","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_parseIni","(<abbr title=\"WebDocBook\\Util\\$path\">$path<\/abbr> $path)","Read and parse a INI content file",2],["Filesystem::parseJson","WebDocBook\\Util\\Filesystem","WebDocBook\/Util\/Filesystem.html#method_parseJson","(<abbr title=\"WebDocBook\\Util\\$path\">$path<\/abbr> $path)","Read and parse a JSON content file",2],["WDBFile::__construct","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method___construct","(string $file_name)","",2],["WDBFile::setFile","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_setFile","(<a href=\"WebDocBook\/WebFilesystem\/WDBFileInterface.html\"><abbr title=\"WebDocBook\\WebFilesystem\\WDBFileInterface\">WDBFileInterface<\/abbr><\/a> $file)","",2],["WDBFile::getFile","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getFile","()","",2],["WDBFile::getType","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getType","()","",2],["WDBFile::setIsRootLink","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_setIsRootLink","(bool $is_it = false)","",2],["WDBFile::getIsRootLink","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getIsRootLink","()","",2],["WDBFile::isRootLink","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_isRootLink","()","",2],["WDBFile::isChildOfLink","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_isChildOfLink","()","",2],["WDBFile::getWDBPath","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getWDBPath","()","",2],["WDBFile::getWDBScanStack","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getWDBScanStack","(bool $recursive = false)","",2],["WDBFile::getWDBStack","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getWDBStack","()","",2],["WDBFile::getWDBFullStack","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getWDBFullStack","()","",2],["WDBFile::findTranslations","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_findTranslations","()","",2],["WDBFile::findNext","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_findNext","()","Find next file in current chapter",2],["WDBFile::findPrevious","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_findPrevious","()","Find previous file in current chapter",2],["WDBFile::getHumanReadableFilename","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getHumanReadableFilename","()","",2],["WDBFile::findReadme","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_findReadme","()","",2],["WDBFile::findIndex","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_findIndex","()","",2],["WDBFile::getDescription","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getDescription","()","",2],["WDBFile::viewIntroduction","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_viewIntroduction","($str_len = 600, $strip_tags = true, $end_str = &#039;&#039;)","",2],["WDBFile::viewFileInfos","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_viewFileInfos","()","",2],["WDBFile::getWDBTypeByPath","WebDocBook\\WebFilesystem\\WDBFile","WebDocBook\/WebFilesystem\/WDBFile.html#method_getWDBTypeByPath","(null $path = null)","",2],["WDBFileInterface::viewFileInfos","WebDocBook\\WebFilesystem\\WDBFileInterface","WebDocBook\/WebFilesystem\/WDBFileInterface.html#method_viewFileInfos","(array $params = array())","",2],["WDBFileInterface::getIntroduction","WebDocBook\\WebFilesystem\\WDBFileInterface","WebDocBook\/WebFilesystem\/WDBFileInterface.html#method_getIntroduction","(array $params = array())","",2],["WDBDefault::viewFileInfos","WebDocBook\\WebFilesystem\\WDBFile\\WDBDefault","WebDocBook\/WebFilesystem\/WDBFile\/WDBDefault.html#method_viewFileInfos","(array $params = array())","",2],["WDBDefault::getIntroduction","WebDocBook\\WebFilesystem\\WDBFile\\WDBDefault","WebDocBook\/WebFilesystem\/WDBFile\/WDBDefault.html#method_getIntroduction","(array $params = array())","",2],["WDBDirectory::viewFileInfos","WebDocBook\\WebFilesystem\\WDBFile\\WDBDirectory","WebDocBook\/WebFilesystem\/WDBFile\/WDBDirectory.html#method_viewFileInfos","(array $params = array())","",2],["WDBDirectory::getIntroduction","WebDocBook\\WebFilesystem\\WDBFile\\WDBDirectory","WebDocBook\/WebFilesystem\/WDBFile\/WDBDirectory.html#method_getIntroduction","(array $params = array())","",2],["WDBEmbed::viewFileInfos","WebDocBook\\WebFilesystem\\WDBFile\\WDBEmbed","WebDocBook\/WebFilesystem\/WDBFile\/WDBEmbed.html#method_viewFileInfos","(array $params = array())","",2],["WDBEmbed::getIntroduction","WebDocBook\\WebFilesystem\\WDBFile\\WDBEmbed","WebDocBook\/WebFilesystem\/WDBFile\/WDBEmbed.html#method_getIntroduction","(array $params = array())","",2],["WDBImage::viewFileInfos","WebDocBook\\WebFilesystem\\WDBFile\\WDBImage","WebDocBook\/WebFilesystem\/WDBFile\/WDBImage.html#method_viewFileInfos","(array $params = array())","",2],["WDBImage::getIntroduction","WebDocBook\\WebFilesystem\\WDBFile\\WDBImage","WebDocBook\/WebFilesystem\/WDBFile\/WDBImage.html#method_getIntroduction","(array $params = array())","",2],["WDBMarkdown::viewFileInfos","WebDocBook\\WebFilesystem\\WDBFile\\WDBMarkdown","WebDocBook\/WebFilesystem\/WDBFile\/WDBMarkdown.html#method_viewFileInfos","(array $params = array())","",2],["WDBMarkdown::getIntroduction","WebDocBook\\WebFilesystem\\WDBFile\\WDBMarkdown","WebDocBook\/WebFilesystem\/WDBFile\/WDBMarkdown.html#method_getIntroduction","(array $params = array())","",2],["WDBRecursiveDirectoryIterator::__construct","WebDocBook\\WebFilesystem\\WDBRecursiveDirectoryIterator","WebDocBook\/WebFilesystem\/WDBRecursiveDirectoryIterator.html#method___construct","(string $path, int $flags = 16448, <abbr title=\"WebFilesystem\\callback\">callback<\/abbr> $file_validation_callback = &#039;WebDocBook\\\\WebFilesystem\\\\WDBRecursiveDirectoryIterator::fileValidation&#039;, <abbr title=\"WebFilesystem\\callback\">callback<\/abbr> $directory_validation_callback = &#039;WebDocBook\\\\WebFilesystem\\\\WDBRecursiveDirectoryIterator::dirValidation&#039;)","Constructor",2],["WDBRecursiveDirectoryIterator::fileValidation","WebDocBook\\WebFilesystem\\WDBRecursiveDirectoryIterator","WebDocBook\/WebFilesystem\/WDBRecursiveDirectoryIterator.html#method_fileValidation","(<abbr title=\"WebDocBook\\WebFilesystem\\$file_path\">$file_path<\/abbr> $file_path)","",2],["WDBRecursiveDirectoryIterator::dirValidation","WebDocBook\\WebFilesystem\\WDBRecursiveDirectoryIterator","WebDocBook\/WebFilesystem\/WDBRecursiveDirectoryIterator.html#method_dirValidation","(<abbr title=\"WebDocBook\\WebFilesystem\\$file_path\">$file_path<\/abbr> $file_path)","",2],["WDBRecursiveDirectoryIterator::current","WebDocBook\\WebFilesystem\\WDBRecursiveDirectoryIterator","WebDocBook\/WebFilesystem\/WDBRecursiveDirectoryIterator.html#method_current","()","",2],["WebDocBook_Twig_Extension::getName","WebDocBook_Twig_Extension","WebDocBook_Twig_Extension.html#method_getName","()","",2],["WebDocBook_Twig_Extension::getFilters","WebDocBook_Twig_Extension","WebDocBook_Twig_Extension.html#method_getFilters","()","",2],["WebDocBook_Twig_Extension::getFunctions","WebDocBook_Twig_Extension","WebDocBook_Twig_Extension.html#method_getFunctions","()","",2],["WebImage::__construct","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method___construct","(string $path, string $root_dir = null, string $file_name = null, bool $must_exist = true)","Construct a new myDirectory object",2],["WebImage::setThumbFilename","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_setThumbFilename","(string $file_name)","Sets the object thumb file name",2],["WebImage::getThumbFilename","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbFilename","()","Get the object's thumb file name",2],["WebImage::getThumbBasename","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbBasename","()","Get the object's thumb file name",2],["WebImage::setThumbRootDir","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_setThumbRootDir","(string $path)","Sets the object thumb root directory",2],["WebImage::getThumbRootDir","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbRootDir","()","Get the object's thumb root directory",2],["WebImage::setThumbPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_setThumbPath","(string $path)","Sets the object thumb web path",2],["WebImage::getThumbPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbPath","()","Get the object's thumb web path",2],["WebImage::getThumbPathname","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbPathname","()","Get the object's thumb web path with file name",2],["WebImage::getThumbRealPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbRealPath","()","Get the object's web real path (with the file_name)",2],["WebImage::getThumbWebPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbWebPath","()","Get the object's thumb web path",2],["WebImage::getThumbRealWebPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbRealWebPath","()","Get the object's web real path (with the file_name)",2],["WebImage::getInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getInfos","()","Scan all image infos",2],["WebImage::getImageInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getImageInfos","()","Scan image standrad infos",2],["WebImage::getIptcInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getIptcInfos","()","Scan image IPTC infos",2],["WebImage::getExifInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getExifInfos","()","Scan image EXIF infos",2],["WebImage::exists","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_exists","()","Check if the object exists",2],["WebImage::thumbExists","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_thumbExists","()","Check if the thumb exists",2],["WebImage::isImage","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_isImage","()","Returns TRUE if the object is an image",2],["WebImage::getGps","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getGps","($exifCoord, $hemi)","Returns the transformed value of an EXIF GPS field",2],["WebImage::gps2Num","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_gps2Num","(int $coordPart)","Returns a transformed GPS coordinate in a numeric floated",2],["WebImage::getDateFromExif","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getDateFromExif","(int $date)","Returns the transformed date field form EXIF info to",2],["WebImage::getBase64Content","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getBase64Content","(bool $to_href = false)","Get the `base64` encoded image content",2],["WebImage::getHeight","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getHeight","()","Get the image's height in pixels",2],["WebImage::getWidth","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getWidth","()","Get the image's width in pixels",2],["WebVideo::__construct","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method___construct","(string $path, string $root_dir, string $file_name = null, bool $must_exist = true)","Construct a new myDirectory object",2],["WebVideo::setThumbFilename","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_setThumbFilename","(string $file_name)","Sets the object thumb file name",2],["WebVideo::getThumbFilename","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbFilename","()","Get the object's thumb file name",2],["WebVideo::getThumbBasename","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbBasename","()","Get the object's thumb file name",2],["WebVideo::setThumbRootDir","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_setThumbRootDir","(string $path)","Sets the object thumb root directory",2],["WebVideo::getThumbRootDir","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbRootDir","()","Get the object's thumb root directory",2],["WebVideo::setThumbPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_setThumbPath","(string $path)","Sets the object thumb web path",2],["WebVideo::getThumbPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbPath","()","Get the object's thumb web path",2],["WebVideo::getThumbPathname","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbPathname","()","Get the object's thumb web path with file name",2],["WebVideo::getThumbRealPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbRealPath","()","Get the object's web real path (with the file_name)",2],["WebVideo::getThumbWebPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbWebPath","()","Get the object's thumb web path",2],["WebVideo::getThumbRealWebPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbRealWebPath","()","Get the object's web real path (with the file_name)",2],["WebVideo::getInfos","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getInfos","()","Scan all image infos",2],["WebVideo::getVideoInfos","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getVideoInfos","()","Scan video standrad infos",2],["WebVideo::exists","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_exists","()","Check if the object exists",2],["WebVideo::thumbExists","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_thumbExists","()","Check if the thumb exists",2],["WebVideo::isVideo","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_isVideo","()","Returns TRUE if the object is a video file",2],["WebVideo::getDateFromExif","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getDateFromExif","(int $date)","Returns the transformed date field form EXIF info to",2],["Finder::init","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_init","($flags = 16432)","Force any descendant to implement a special constructor",2],["Finder::reset","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_reset","()","",2],["Finder::setInited","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setInited","(bool $inited)","",2],["Finder::isInited","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isInited","()","",2],["Finder::setRootDir","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setRootDir","(string $path)","",2],["Finder::getRootDir","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getRootDir","()","",2],["Finder::addDirectory","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addDirectory","(string $path)","",2],["Finder::setDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setDirectories","(array $paths)","",2],["Finder::getDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getDirectories","()","",2],["Finder::addExcludedDirectory","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExcludedDirectory","(string $path)","",2],["Finder::setExcludedDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExcludedDirectories","(array $paths)","",2],["Finder::getExcludedDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExcludedDirectories","()","",2],["Finder::addNameMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addNameMask","(string $mask)","",2],["Finder::setNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setNameMasks","(array $masks)","",2],["Finder::getNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getNameMasks","()","",2],["Finder::addExcludedNameMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExcludedNameMask","(string $mask)","",2],["Finder::setExcludedNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExcludedNameMasks","(array $masks)","",2],["Finder::getExcludedNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExcludedNameMasks","()","",2],["Finder::addExtensionMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExtensionMask","(string $mask)","",2],["Finder::setExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExtensionMasks","(array $masks)","",2],["Finder::getExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExtensionMasks","()","",2],["Finder::addExcludedExtensionMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExcludedExtensionMask","(string $mask)","",2],["Finder::setExcludedExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExcludedExtensionMasks","(array $masks)","",2],["Finder::getExcludedExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExcludedExtensionMasks","()","",2],["Finder::setDepth","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setDepth","(int $depth)","",2],["Finder::getDepth","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getDepth","()","",2],["Finder::setIteratorFlags","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setIteratorFlags","(int $flags)","",2],["Finder::getIteratorFlags","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getIteratorFlags","()","",2],["Finder::setFlag","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setFlag","($flag)","",2],["Finder::getFlag","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getFlag","()","",2],["Finder::files","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_files","()","",2],["Finder::dirs","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_dirs","()","",2],["Finder::links","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_links","()","",2],["Finder::dots","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_dots","()","",2],["Finder::depth","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_depth","($depth)","",2],["Finder::name","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_name","($mask)","",2],["Finder::notName","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_notName","($mask)","",2],["Finder::extension","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_extension","($mask)","",2],["Finder::notExtension","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_notExtension","($mask)","",2],["Finder::in","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_in","($path)","",2],["Finder::notIn","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_notIn","($path)","",2],["Finder::root","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_root","($path)","",2],["Finder::images","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_images","()","",2],["Finder::videos","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_videos","()","",2],["Finder::is","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_is","($extension)","",2],["Finder::isFile","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isFile","()","",2],["Finder::isDir","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isDir","()","",2],["Finder::isLink","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isLink","()","",2],["Finder::isImage","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isImage","()","",2],["Finder::isVideo","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isVideo","()","",2],["Finder::isDotFile","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isDotFile","()","",2],["Finder::getIterator","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getIterator","()","",2],["Finder::current","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_current","()","",2],["Finder::key","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_key","()","",2],["Finder::next","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_next","()","",2],["Finder::rewind","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_rewind","()","",2],["Finder::valid","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_valid","()","",2],["WebFileInfo::__construct","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method___construct","(string $file_name, string $root_dir = null, int $flags = 272)","Construct a new WebFileInfo object",2],["WebFileInfo::setFlags","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_setFlags","(int $flags)","Set the object's flags",2],["WebFileInfo::getFlags","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getFlags","()","Gets the object's flags value",2],["WebFileInfo::getExtension","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getExtension","()","Gets the object extension (not defined before PHP 5.3.6)",2],["WebFileInfo::getRealPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getRealPath","()","Gets the object realpath if found",2],["WebFileInfo::getFilename","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getFilename","()","Gets the object file name as it was passed to the constructor",2],["WebFileInfo::setRootDir","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_setRootDir","(string $dir_name)","Sets the object's root directory",2],["WebFileInfo::getRootDir","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getRootDir","()","Gets the object's root directory",2],["WebFileInfo::setWebPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_setWebPath","(string $path)","Sets the object web path (relative to `$root_dir`)",2],["WebFileInfo::getWebPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getWebPath","()","Gets the object's web path",2],["WebFileInfo::getRealWebPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getRealWebPath","()","Gets the object's web real path (with the file name)",2],["WebFileInfo::exists","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_exists","()","Check if the object exists in the server filesystem",2],["WebFileInfo::pathExists","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_pathExists","()","Check if the object path (not the file itself but its",2],["WebFileInfo::rootDirExists","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_rootDirExists","()","Check if the object's root directory exists in the",2],["WebFileInfo::getHumanReadableFilename","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getHumanReadableFilename","()","Gets the directory name transformed to be displayed",2],["WebFileInfo::getStat","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getStat","()","Get the PHP standard `stat()` function result",2],["WebFileInfo::getMimeType","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getMimeType","()","Get the `MIME` type of the object",2],["WebFileInfo::getCharset","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getCharset","()","Get the `MIME` charset of the object",2],["WebFileInfo::getMime","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getMime","()","Get the full `MIME` information of the object",2],["WebFilesystem::slashDirname","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_slashDirname","(string $dir_name)","Returns a directory name with the trailing slash if",2],["WebFilesystem::getHumanReadableName","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getHumanReadableName","(string $file_name)","Render a human readable string from a file name",2],["WebFilesystem::getExtensionName","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getExtensionName","(string $file_name)","Returns the extension of a file name",2],["WebFilesystem::getTransformedFilesize","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getTransformedFilesize","(float $size, int $round = 3, string $dec_delimiter = &#039;,&#039;)","Returns a formatted file size in bytes or derived unit",2],["WebFilesystem::getDateTimeFromTimestamp","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getDateTimeFromTimestamp","(int $stamp)","Returns a `DateTime` object from a timestamp",2],["WebFilesystem::isCommonFile","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isCommonFile","(string $file_name)","Tests if a file name seems to be a valid one (also",2],["WebFilesystem::isDotFile","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isDotFile","(string $file_name)","Tests if a file name begins with a dot (also works",2],["WebFilesystem::isCommonImage","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isCommonImage","(string $file_name)","Tests if a file name seems to have a common image's",2],["WebFilesystem::isCommonVideo","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isCommonVideo","(string $file_name)","Tests if a file name seems to have a common video's",2],["WebFilesystemIterator::__construct","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method___construct","(string $path, int $flags = 16432)","Overwriting the constructor to use the new `setFlags()`",2],["WebFilesystemIterator::setFlags","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_setFlags","(int $flags = null)","Overwriting the default `setFlags()` method to accept",2],["WebFilesystemIterator::getFlags","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_getFlags","()","Overwriting the default `getFlags()` method to accept",2],["WebFilesystemIterator::current","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_current","()","Overwriting the default `current()` method to return",2],["WebFilesystemIterator::rewind","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_rewind","()","Overwriting the default `rewind()` method to skip files",2],["WebFilesystemIterator::next","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_next","()","Overwriting the default `next()` method to skip files",2],["WebFilesystemIterator::count","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_count","()","Implementation of the `count()` method of the `Countable`",2],["WebRecursiveDirectoryIterator::__construct","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method___construct","(string $path, int $flags = 16432, <abbr title=\"WebFilesystem\\callback\">callback<\/abbr> $file_validation_callback = null, <abbr title=\"WebFilesystem\\callback\">callback<\/abbr> $directory_validation_callback = null)","",2],["WebRecursiveDirectoryIterator::setFileClass","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_setFileClass","(string $class_name = null)","Set a class name to build each item",2],["WebRecursiveDirectoryIterator::getFileClass","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getFileClass","()","Get the class name to build each item",2],["WebRecursiveDirectoryIterator::setFileValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_setFileValidationCallback","($callback)","Set a valid callback to validate each file item",2],["WebRecursiveDirectoryIterator::getFileValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getFileValidationCallback","()","Set a valid callback to validate each file item",2],["WebRecursiveDirectoryIterator::setDirectoryValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_setDirectoryValidationCallback","($callback)","Set a valid callback to validate each directory item",2],["WebRecursiveDirectoryIterator::getDirectoryValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getDirectoryValidationCallback","()","Set a valid callback to validate each directory item",2],["WebRecursiveDirectoryIterator::getChildren","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getChildren","()","Implementing the `getChildren()` method to return this",2],["WebRecursiveDirectoryIterator::getSubPath","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getSubPath","()","Implementing the `getSubPath()` method",2],["WebRecursiveDirectoryIterator::getSubPathname","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getSubPathname","()","Implementing the `getSubPathname()` method",2],["WebRecursiveDirectoryIterator::hasChildren","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_hasChildren","($allow_links = false)","Implementing the `hasChildren()` method",2],["WebRecursiveDirectoryIterator::seek","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_seek","($position)","Implementing the `seek()` method of the `Seekable`",2],["WebRecursiveDirectoryIterator::current","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_current","()","Overwriting the default `current()` method to use the",2],["WebRecursiveDirectoryIterator::rewind","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_rewind","()","Overwriting the default `rewind()` method to skip files",2],["WebRecursiveDirectoryIterator::next","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_next","()","Overwriting the default `next()` method to skip files",2],["WebRecursiveDirectoryIterator::recursiveCount","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_recursiveCount","()","Implementation of the `count()` method on each recursion",2],["MarkdownParser::render","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_render","(string $text)","Main function",2],["MarkdownParser::transform","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_transform","(string $text)","Performs some preprocessing on the input text and pass",2],["MarkdownParser::transformMarkdown","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_transformMarkdown","(string $text)","Transform Markdown text to HTML.",2],["MarkdownParser::defaultTransform","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_defaultTransform","(string $text)","Initialize the parser and return the result of its",2],["MarkdownParser::text","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_text","(string $text)","Performs a text for both inline and blocks elements",2],["MarkdownParser::line","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_line","(string $text)","Performs a text with ONLY inline elements",2],["MarkdownParserCompatibilityInterface::render","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_render","(string $text)","Main function",2],["MarkdownParserCompatibilityInterface::transform","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_transform","(string $text)","Performs some preprocessing on the input text and pass",2],["MarkdownParserCompatibilityInterface::transformMarkdown","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_transformMarkdown","(string $text)","Transform Markdown text to HTML.",2],["MarkdownParserCompatibilityInterface::defaultTransform","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_defaultTransform","(string $text)","Initialize the parser and return the result of its",2],["MarkdownParserCompatibilityInterface::text","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_text","(string $text)","Performs a text for both inline and blocks elements",2],["MarkdownParserCompatibilityInterface::line","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_line","(string $text)","Performs a text with ONLY inline elements",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']